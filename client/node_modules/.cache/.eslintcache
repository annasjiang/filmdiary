[{"/Users/allisonchen/Desktop/filmdiary/client/src/index.js":"1","/Users/allisonchen/Desktop/filmdiary/client/src/App.js":"2","/Users/allisonchen/Desktop/filmdiary/client/src/components/login.js":"3","/Users/allisonchen/Desktop/filmdiary/client/src/components/lists.js":"4","/Users/allisonchen/Desktop/filmdiary/client/src/components/diary.js":"5","/Users/allisonchen/Desktop/filmdiary/client/src/components/review.js":"6","/Users/allisonchen/Desktop/filmdiary/client/src/components/viewList.js":"7","/Users/allisonchen/Desktop/filmdiary/client/src/components/search/search.js":"8","/Users/allisonchen/Desktop/filmdiary/client/src/components/logout.js":"9","/Users/allisonchen/Desktop/filmdiary/client/src/components/navbar.js":"10","/Users/allisonchen/Desktop/filmdiary/client/src/components/create.js":"11","/Users/allisonchen/Desktop/filmdiary/client/src/components/edit.js":"12","/Users/allisonchen/Desktop/filmdiary/client/src/components/editList.js":"13","/Users/allisonchen/Desktop/filmdiary/client/src/components/createList.js":"14","/Users/allisonchen/Desktop/filmdiary/client/src/components/firebase.js":"15","/Users/allisonchen/Desktop/filmdiary/client/src/components/search/movies.js":"16","/Users/allisonchen/Desktop/filmdiary/client/src/components/search/utils.js":"17","/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/search.js":"18","/Users/allisonchen/Desktop/filmdiary/client/src/components/search/movie.js":"19","/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/utils.js":"20","/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/movies.js":"21","/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/movie.js":"22"},{"size":290,"mtime":1680495568700,"results":"23","hashOfConfig":"24"},{"size":1672,"mtime":1680554714450,"results":"25","hashOfConfig":"24"},{"size":2363,"mtime":1680553267224,"results":"26","hashOfConfig":"24"},{"size":3094,"mtime":1680495568691,"results":"27","hashOfConfig":"24"},{"size":2266,"mtime":1680495568690,"results":"28","hashOfConfig":"24"},{"size":5559,"mtime":1680495568695,"results":"29","hashOfConfig":"24"},{"size":6880,"mtime":1680495568700,"results":"30","hashOfConfig":"24"},{"size":1933,"mtime":1680495568697,"results":"31","hashOfConfig":"24"},{"size":2460,"mtime":1680554524886,"results":"32","hashOfConfig":"24"},{"size":7640,"mtime":1680545290312,"results":"33","hashOfConfig":"24"},{"size":6375,"mtime":1680545290310,"results":"34","hashOfConfig":"24"},{"size":7669,"mtime":1680545290311,"results":"35","hashOfConfig":"24"},{"size":9225,"mtime":1680545290311,"results":"36","hashOfConfig":"24"},{"size":8695,"mtime":1680545290310,"results":"37","hashOfConfig":"24"},{"size":967,"mtime":1680554714429,"results":"38","hashOfConfig":"24"},{"size":461,"mtime":1680495568697,"results":"39","hashOfConfig":"24"},{"size":1130,"mtime":1680495568697,"results":"40","hashOfConfig":"24"},{"size":1858,"mtime":1680495568700,"results":"41","hashOfConfig":"24"},{"size":1919,"mtime":1680495568696,"results":"42","hashOfConfig":"24"},{"size":1130,"mtime":1680495568700,"results":"43","hashOfConfig":"24"},{"size":465,"mtime":1680495568699,"results":"44","hashOfConfig":"24"},{"size":2830,"mtime":1680495568699,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dccj07",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},"/Users/allisonchen/Desktop/filmdiary/client/src/index.js",[],"/Users/allisonchen/Desktop/filmdiary/client/src/App.js",["105"],"/Users/allisonchen/Desktop/filmdiary/client/src/components/login.js",["106","107","108","109"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword } from \"./firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockPersonIcon from '@mui/icons-material/LockPerson';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/\");\n  }, [user, loading]);\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 2, mt: 10 }}>\n          <LockPersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Admin Log In\n        </Typography>\n        <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            id=\"outlined-required\"\n            label=\"E-mail Address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            autoFocus\n          />\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            type=\"password\"\n            id=\"outlined-required\"\n            label=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            fullWidth\n            sx={{ mt: 3, mb: 2 }}\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => logInWithEmailAndPassword(email, password)}>\n            LOG IN\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Login;","/Users/allisonchen/Desktop/filmdiary/client/src/components/lists.js",["110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { useEffect, useState } from \"react\";\nimport { Card, Grid, Table, TableBody, TableCell, TableContainer, TableRow, IconButton,} from \"@mui/material\";\nimport blankposter from './poster.jpg';\nimport './lists.css';\n\nexport default function Lists() {\n  const [lists, setLists] = useState([]);\n\n  // This method fetches the lists from the database.\n  useEffect(() => {\n    async function getLists() {\n      const response = await fetch(`http://localhost:4000/list/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const lists = await response.json();\n      setLists(lists);\n    }\n    getLists();\n    return; \n  }, [lists.length]);\n\n  // This method will delete a list\n  async function deleteList(deleteId) {\n    await fetch(`http://localhost:4000/${deleteId}`, {\n      method: \"DELETE\"\n    });\n\n    const newLists = lists.filter((el) => el._id !== deleteId);\n    setLists(newLists);\n  }\n\n  // This method will map out the lists on the table\n  function listList() {\n    return lists.map((list) => {\n      return (\n        <List\n          list={list}\n          deleteList={() => deleteList(list._id)}\n          key={list._id}\n        />\n      );\n    });\n  }\n\n  // get reviews\n  const List = (props) => (\n    <a href={`/list/${props.list._id}`} style={{ textDecoration: 'none', color: 'black'}}>\n    <TableRow> \n      <TableCell class=\"avatars\" style={{width:210}}>\n        {/* handle thumbnails */}\n        <span class=\"avatar\">\n        {\n          props.list.thumbnail3 == \"\" ? \n          (<img src={blankposter} class=\"img-fluid\"/>) : \n          (<img src={props.list.thumbnail3} class=\"img-fluid\"/>)\n        }\n        </span>\n        <span class=\"avatar\">\n        {\n          props.list.thumbnail2 == \"\" ? \n          (<img src={blankposter} class=\"img-fluid\"/>) : \n          (<img src={props.list.thumbnail2} class=\"img-fluid\"/>)\n        }\n        </span>\n        <span class=\"avatar\">\n        {\n          props.list.thumbnail1 == \"\" ? \n          (<img src={blankposter} class=\"img-fluid\"/>) : \n          (<img src={props.list.thumbnail1} class=\"img-fluid\"/>)\n        }\n        </span>\n      </TableCell>\n\n      <TableCell class=\"listinfo\" style={{width:800}}>\n        <b>{props.list.name}</b> <br></br>\n        <p class=\"text-muted\">{props.list.description}</p>\n      </TableCell>\n    </TableRow>\n    </a>\n  );\n\n  // display reviews\n  return (\n    <div class=\"table-container\" style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <h3>My Lists</h3>\n      <div className=\"parent\">\n      {/* <Grid container> */}\n      {/* <Grid item lg={12} justifyContent=\"center\" display=\"flex\"> */}\n        {/* <Card> */}\n          {/* <TableContainer>  */}\n        <Table className=\"listtable table table-responsive table-hover\" style={{ marginTop: 20, }}>\n          <TableBody className=\"fullWidth\">{listList()}</TableBody>\n        </Table>\n        {/* </TableContainer>  */}\n        {/* </Card> */}\n      {/* </Grid> */}\n      {/* </Grid> */}\n      </div>\n    </div>\n  );\n}\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/diary.js",["123","124","125"],"import Rating from '@mui/material/Rating';\nimport defaultposter from './search/defaultposter.jpeg';\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Diary() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:4000/record/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n    return; \n  }, [records.length]);\n\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // get reviews\n  const Record = (props) => (\n    <a href={`/review/${props.record._id}`} style={{ textDecoration: 'none', color: 'black'}}>\n    <tr> \n      {/* use thumbnails */}\n      <td class=\"col-md-2\">\n        {\n          props.record.poster == \"http://localhost:3000/static/media/defaultposter.71253f31.jpeg\" ? \n          (<img src={defaultposter} class=\"img-fluid\"/>) : \n          (<img src={`http://image.tmdb.org/t/p/w185${props.record.poster.substring(34, 250)}`} class=\"img-fluid\"/>)\n        }\n      </td>\n      <td>\n        <b style={{display: \"inline\", marginRight: 5}}>{props.record.name}</b>\n        <p className='text-muted' style={{fontSize: 14, display: \"inline\"}}>({props.record.year})</p> \n        <br></br>\n        <p class=\"text-muted\">watched on {props.record.date}</p>\n        <Rating\n            name=\"simple-controlled\"\n            defaultValue={props.record.rating}\n            value={props.record.rating}\n            size=\"small\"\n            readOnly/> <br></br>\n        <p>{props.record.review}</p>\n      </td>\n    </tr>\n    </a>\n  );\n\n  // display reviews\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <h3>My Diary</h3>\n      <table className=\"table table-hover\" style={{ marginTop: 20 }}>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/review.js",["126","127","128"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\n\nimport Rating from '@mui/material/Rating';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    neutral: {\n      main: '#64748B',\n      contrastText: '#fff',\n    },\n  },\n});\n\nexport default function View() {\n  // dropdown menu\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n      setAnchorEl(null);\n  };\n\n  // confirm delete alert\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const handleClickOpenAlert = () => {\n    setAnchorEl(null);\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  // rating and date\n  const [rating, setRating] = React.useState(null);\n  const [value1, setValue1] = React.useState(null);\n  const [posterPath, setPosterPath] = React.useState(null);\n\n  // review info\n  const [form, setForm] = useState({\n    name: \"\",\n    year: \"\",\n    review: \"\",\n    date: \"\",\n    rating: \"\",\n    poster: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  const [user, loading, error] = useAuthState(auth);\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:4000/record/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n      setValue1(record.date);\n      setRating(record.rating);\n      setPosterPath(record.poster);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // This method will delete a record\n  async function deleteRecord(deleteId) {\n      await fetch(`http://localhost:4000/${deleteId}`, {\n          method: \"DELETE\"\n      });\n      navigate(\"/diary\")\n  }\n\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n    <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col nopadding\">\n        <h3 style={{display: \"inline\", marginRight: 10}}>{form.name}</h3>\n        <p class=\"text-muted\" style={{fontSize: 22, display: \"inline\"}}>({form.year})</p>\n      </div>\n      <div class=\"col col-sm-1\">\n      <div class=\"float-right\">\n        <ThemeProvider theme={theme}>\n          {/* edit/delete button */}\n          {user && <Button color=\"neutral\"\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleClick}\n          >•••</Button>}\n        </ThemeProvider>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}>\n          <Link to={`/edit/${params.id}`} style={{ textDecoration: 'none', color: 'black'}}>\n          <MenuItem>Edit</MenuItem></Link>\n          <MenuItem onClick={handleClickOpenAlert}>Delete</MenuItem>\n        </Menu> \n      </div>\n      </div>\n      </div>\n    </div>\n    <br></br>\n\n    {/* poster */}\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-4 nopadding\">\n            {/* placeholder poster for now!! */}\n            <img src={posterPath} style={{width: 300}} class=\"img-fluid\"/>\n        </div>\n        <div class=\"col\">\n        <p class=\"text-muted\"> watched on {value1}\n          <div class=\"float-right\">\n            <Rating\n              name=\"simple-controlled\"\n              defaultValue={rating}\n              value={rating}\n              size=\"medium\"\n              readOnly/>\n          </div>\n        </p>\n        <p>{form.review}</p> \n        </div>\n      </div>\n    </div> \n\n    {/* delete confirmation alert */}\n    <Dialog\n      open={openAlert}\n      onClose={handleCloseAlert}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {\"Delete Confirmation\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to delete your review?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n      <ThemeProvider theme={theme}>\n        <Button color=\"neutral\" onClick={handleCloseAlert}>Cancel</Button>\n        <Button color=\"error\" onClick={() => {\n              deleteRecord(params.id);\n          }} autoFocus>\n          Delete\n        </Button>\n      </ThemeProvider>\n      </DialogActions>\n    </Dialog>    \n    </div>\n  );\n}\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/viewList.js",["129","130","131","132","133","134"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\n\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { Table, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    neutral: {\n      main: '#64748B',\n      contrastText: '#fff',\n    },\n  },\n});\n\nexport default function ViewList() {\n  // table stuff\n  const [rows, setRows] = useState([\n    {\n      id: 1,\n      item: {title: \"\", year:\"\", poster: \"\"}\n    }\n  ]);\n\n  const generateTable = () => {\n    return (\n      <Table>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.id}\n              sx={{ \n                '&:last-child td, &:last-child th': { border: 0 } ,\n                '&:first-child td, &:first-child th': { borderTop: 1, color: \"#dee2e6\" }\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n                <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n                <TextField \n                  id='addFilmToList' \n                  value={row.item[\"title\"]}\n                  fullWidth\n                  variant=\"standard\"\n                  InputProps={{ disableUnderline: true, readOnly: true, style: {fontWeight: 500}}}\n                />\n                <p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n              </TableCell>\n            </TableRow>       \n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n  const [tableData, setTableData] = useState(generateTable());\n\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows])\n\n  // dropdown menu\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n      setAnchorEl(null);\n  };\n\n  // confirm delete alert\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const handleClickOpenAlert = () => {\n    setAnchorEl(null);\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  // list info\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    list: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  const [user, loading, error] = useAuthState(auth);\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:4000/list/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const list = await response.json();\n      if (!list) {\n        window.alert(`List with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(list);\n      console.log(list.list);\n\n      let sizes_arr = JSON.parse(list.list);\n      let rows_arr = [];\n      for (let i = 0; i < sizes_arr.length; i++) {\n        rows_arr.push({\n          id: i+1,\n          item: sizes_arr[i]\n        })\n      }\n        \n      setRows(rows_arr);\n      setTableData(generateTable());\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // This method will delete a record\n  async function deleteList(deleteId) {\n      await fetch(`http://localhost:4000/delete/${deleteId}`, {\n          method: \"DELETE\"\n      });\n      navigate(\"/lists\")\n  }\n\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n    <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col nopadding\">\n        <h3>{form.name}</h3>\n      </div>\n      <div className=\"col col-1\">\n        <div className\n        =\"float-right\">\n          <ThemeProvider theme={theme}>\n            {/* edit/delete button */}\n            {user && <Button color=\"neutral\"\n              id=\"basic-button\"\n              aria-controls={open ? 'basic-menu' : undefined}\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n              onClick={handleClick}\n            >•••</Button>}\n          </ThemeProvider>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}>\n            <Link to={`/editlist/${params.id}`} style={{ textDecoration: 'none', color: 'black'}}>\n            <MenuItem>Edit</MenuItem></Link>\n            <MenuItem onClick={handleClickOpenAlert}>Delete</MenuItem>\n          </Menu> \n        </div>\n      </div>\n    </div>    \n    </div>\n    <br></br>\n    {\n      form.description == \"\" ? (<></>) : ( \n        <div className=\"container\">\n          <p>{form.description}</p> <br></br>\n        </div>\n      )\n    }\n    <div>\n    <div className=\"container\">\n    {/* <Grid container> */}\n    {/* <Grid item lg={12} justifyContent=\"center\" display=\"flex\"> */}\n      {/* <Card> */}\n        {/* <TableContainer> */}\n          {tableData} {/* this variable will change to contain all data */}\n        {/* </TableContainer> */}\n      {/* </Card> */}\n    {/* </Grid> */}\n    {/* </Grid> */}\n    </div>\n    </div>\n\n    {/* delete confirmation alert */}\n    <Dialog\n      open={openAlert}\n      onClose={handleCloseAlert}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {\"Delete Confirmation\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to delete your list?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n      <ThemeProvider theme={theme}>\n        <Button color=\"neutral\" onClick={handleCloseAlert}>Cancel</Button>\n        <Button color=\"error\" onClick={() => {\n              deleteList(params.id);\n          }} autoFocus>\n          Delete\n        </Button>\n      </ThemeProvider>\n      </DialogActions>\n    </Dialog>    \n    </div>\n  );\n}\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/search/search.js",["135","136","137","138"],"import React, { Component, useState, useRef } from 'react';\nimport axios from 'axios';\n\nimport Movies from './movies';\nimport { search } from './utils';\nimport TextField from '@mui/material/TextField';\n\nclass Search extends Component {\n  state = {\n    movies: null,\n    loading: false,\n    value: ''\n  };\n\n  search = async val => {\n    this.setState({ loading: true });\n    const res = await axios(\n      `https://api.themoviedb.org/3/search/movie?query=${val}&api_key=dbc0a6d62448554c27b6167ef7dabb1b`\n    );\n    const movies = await res.data.results;\n\n    this.setState({ movies, loading: false });\n  };\n\n  onChangeHandler = async e => {\n    this.search(e.target.value);\n    this.setState({ value: e.target.value });\n  };\n\n  onClickHandler = async e => {\n    this.setState({ value: document.getElementById('name-hidden').value });\n  };\n\n  get renderMovies() {\n    if (this.state.movies) {\n      return <Movies list={this.state.movies} />;\n    }\n  }\n\n  render() {\n    return (\n      <div style={{margin: 0}}>\n      \t{/* <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}> */}\n        {/* <input\n          value={this.state.value}\n          onChange={e => this.onChangeHandler(e)}\n          placeholder=\"Search Here\"\n        /> */}\n        <TextField\n          fullWidth\n          id=\"searchbar\"\n          variant=\"outlined\" \n          value={this.state.value}\n          onChange={e => this.onChangeHandler(e)}\n          onClick={(e) => {\n            this.onClickHandler(e);\n            // allow search again\n            if (document.getElementById('searchresults')) {\n              document.getElementById('searchresults').style.visibility = \"visible\";\n            }           \n          }}\n          placeholder=\"Search for Films...\"\n          required\n          size=\"small\"\n          autoComplete='off'\n        />\n        <div>{this.renderMovies}</div>\n      </div>\n\t  // </div>\n    );\n  }\n}\n\nexport default Search;","/Users/allisonchen/Desktop/filmdiary/client/src/components/logout.js",["139","140","141"],"import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { auth, db, logout } from \"./firebase\";\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme } from '@mui/material/styles';\n\nfunction Dashboard() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchUserName = async () => {\n    try {\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n      const doc = await getDocs(q);\n      const data = doc.docs[0].data();\n      setName(data.name);\n    } catch (err) {\n      console.error(err);\n      alert(\"An error occured while fetching user data\");\n    }\n  };\n  useEffect(() => {\n    if (loading) return;\n    if (!user) return navigate(\"/\");\n    fetchUserName();\n  }, [user, loading]);\n\n  const theme = createTheme({\n    typography: {\n      fontSize: 12,\n      h1: {\n        fontWeight: 800,\n      },\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n    <CssBaseline />\n    <Box\n      sx={{\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Avatar sx={{ m: 2, mt: 10 }}>\n        <LogoutIcon />\n      </Avatar>\n      <Typography> are you sure you want to log out, </Typography>\n      <Typography component=\"h1\"> {name} </Typography>\n      <Box \n        fullWidth\n        component=\"form\"\n        spacing={2}\n        justify='space-between'\n        noValidate sx={{ mt: 1 }}\n        >\n          <Button\n            fullWidth\n            sx={{ mt: 3 }}\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={logout}>\n            LOG OUT\n          </Button>\n          <Button\n            fullWidth\n            sx={{ mt: 3 }}\n            variant=\"contained\"\n            color=\"success\"\n            component={Link} to='/'>\n            CANCEL\n          </Button> \n      </Box>\n    </Box>\n  </Container>\n  );\n}\nexport default Dashboard;","/Users/allisonchen/Desktop/filmdiary/client/src/components/navbar.js",["142","143","144","145","146"],"import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport logo from \"./logo.png\";\n\nimport Button from '@mui/material/Button';\nimport {IconButton} from \"@mui/material\";\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\n\nconst theme = createTheme({\n  palette: {\n    neutral: {\n      main: '#64748B',\n      contrastText: '#fff',\n    },\n  },\n});\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  // dropdown menu\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n      setAnchorEl(null);\n  };\n\n  const [anchorElAcc, setAnchorElAcc] = React.useState(null);\n  const openAcc = Boolean(anchorElAcc);\n  const handleClickAcc = (event) => {\n      setAnchorElAcc(event.currentTarget);\n  };\n  const handleCloseAcc = () => {\n      setAnchorElAcc(null);\n  };\n\n  const [user, loading, error] = useAuthState(auth);\n\n  return (\n    user ? (\n    // logged in user\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top nav-fill\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n        <a><img src={logo} width=\"25\" height=\"25\" alt=\"Film Diary\"/></a> FILM DIARY\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/diary\">diary</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/lists\">lists</a>\n          </li>\n          {/* <li className=\"nav-item\"> */}\n            {/* <a className=\"nav-link\" href=\"/logout\">log out</a> */}\n            {/* {user && <a className=\"nav-link\" href=\"/logout\">log out</a>}\n            {!user && <a className=\"nav-link\" href=\"/login\">log in</a>} */}\n          {/* </li> */}\n        </ul>\n        </div>\n\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n            <Stack direction=\"row\" alignItems=\"center\" gap={0}>\n              <ThemeProvider theme={theme}>\n                {/* edit/delete button */}\n                <Button color=\"success\"\n                  id=\"basic-button\"\n                  aria-controls={open ? 'basic-menu' : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={open ? 'true' : undefined}\n                  onClick={handleClick}\n                  small\n                >+ NEW</Button>\n              </ThemeProvider>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  'aria-labelledby': 'basic-button',\n                }}>\n                <Link to={`/create`} style={{ textDecoration: 'none', color: 'black'}}>\n                <MenuItem onClick={handleClose}>Review</MenuItem></Link>\n                <Link to={`/createlist`} style={{ textDecoration: 'none', color: 'black'}}>\n                <MenuItem onClick={handleClose}>Film List</MenuItem></Link>\n              </Menu>\n            {/* </li>\n            <li> */}\n              <ThemeProvider theme={theme}>\n                <IconButton \n                  color=\"primary\"\n                  id=\"acc-button\"\n                  aria-controls={openAcc ? 'acc-menu' : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={openAcc ? 'true' : undefined}\n                  onClick={handleClickAcc}\n                ><AccountCircleIcon \n                sx={{ fontSize: 30 }}\n                /></IconButton>\n              </ThemeProvider>\n              <Menu\n                id=\"acc-menu\"\n                anchorEl={anchorElAcc}\n                open={openAcc}\n                onClose={handleCloseAcc}\n                MenuListProps={{\n                  'aria-labelledby': 'acc-button',\n                }}>\n                <Link to=\"/logout\" style={{ textDecoration: 'none', color: 'black'}}>\n                <MenuItem onClick={handleCloseAcc}>Log Out</MenuItem></Link>\n              </Menu>\n              </Stack>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n    ) : (\n      <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top nav-fill\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n        <a><img src={logo} width=\"25\" height=\"25\" alt=\"Film Diary\"/></a> FILM DIARY\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/diary\">diary</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/lists\">lists</a>\n          </li>\n          {/* <li className=\"nav-item\"> */}\n            {/* <a className=\"nav-link\" href=\"/login\">log in</a> */}\n            {/* {user && <a className=\"nav-link\" href=\"/logout\">log out</a>}\n            {!user && <a className=\"nav-link\" href=\"/login\">log in</a>} */}\n          {/* </li> */}\n        </ul>\n        </div>\n\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\" >\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <ThemeProvider theme={theme}>\n                <IconButton \n                  color=\"neutral\"\n                  id=\"acc-button\"\n                  aria-controls={openAcc ? 'acc-menu' : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={openAcc ? 'true' : undefined}\n                  onClick={handleClickAcc}\n                ><AccountCircleIcon \n                  sx={{ fontSize: 30 }}\n                /></IconButton>\n              </ThemeProvider>\n              <Menu\n                id=\"acc-menu\"\n                anchorEl={anchorElAcc}\n                open={openAcc}\n                onClose={handleCloseAcc}\n                MenuListProps={{\n                  'aria-labelledby': 'acc-button',\n                }}>\n                <Link to=\"/login\" style={{ textDecoration: 'none', color: 'black'}}>\n                <MenuItem onClick={handleCloseAcc}>Log In</MenuItem></Link>\n              </Menu>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n    )\n  );\n}\n\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/create.js",["147","148","149","150","151","152"],"import React, { Component, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport blankposter from './poster.jpg';\n\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport dayjs from 'dayjs';\n\nimport Search from \"./search/search\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\n\nexport default function Create() {\n  const [user, loading, error] = useAuthState(auth);\n  // rating and date\n  const [name, setName] = React.useState();\n  const [year, setYear] = React.useState();\n  const [rating, setRating] = React.useState();\n  const [value1, setValue1] = React.useState(dayjs(new Date()));\n\n  const updateRating = (newRating) => {\n    setRating(newRating);\n  }\n\n  const nameRef = React.useRef();\n  const dateRef = React.useRef(dayjs(new Date()));\n  const ratingRef = React.useRef();\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    year: \"\",\n    review: \"\",\n    date: \"\",\n    rating: \"\",\n    poster: \"\",\n  });\n  \n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    const d = dateRef.current.value;\n    const dt = isNaN(d) ? d : format(new Date(+d), 'MM/dd/yyyy');\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n    newPerson.name = nameRef.current.value;\n    newPerson.date= dt;\n    newPerson.rating = ratingRef.current.value;\n    newPerson.year = document.getElementById('year-hidden').value;\n    newPerson.poster = document.getElementById('poster').src;\n\n    await fetch(\"http://localhost:4000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", review: \"\", date: \"\", rating: \"\", poster: \"\" });\n    navigate(\"/diary\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    user ? (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <div class=\"container\">\n        <h3>New Review</h3>\n      </div> <br></br>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-4 nopadding\">\n              {/* placeholder poster for now!! */}\n              <img id=\"poster\" src={blankposter} class=\"img-fluid\" style={{width: 300}}/>\n          </div>\n        <div class=\"col\">\n          <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            {/* title */}\n            <label htmlFor=\"name\">I WATCHED...</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name-hidden\"\n                value={name}\n                ref={nameRef}\n                onChange={(e) => {\n                  updateForm({ \n                    name: e.target.value, \n                    poster: document.getElementById('poster').src, \n                    year: document.getElementById('year-hidden').value \n                  }); \n                }}\n                required\n                hidden\n              />\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"year-hidden\"\n                value={year}\n                hidden\n              />\n              <div><Search /></div>\n          </div>\n\n          {/* date and rating */}\n          <div className=\"form-group row\" style={{marginLeft: 5, marginRight: 5}}>\n            <label htmlFor=\"date\" className=\"col-form-label\">ON:</label>\n            <div className=\"col-lg\">\n              <input\n                name=\"entry\"\n                type=\"text\"\n                value={value1}\n                ref={dateRef}\n                hidden\n                readOnly\n              />\n\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                  mask=\"__/__/____\"\n                  defaultValue={dayjs(new Date())}                 \n                  value={value1}\n                  onChange={(newValue) => {\n                    setValue1(newValue);\n                  }}\n                  disableFuture\n                  renderInput={(params) => <TextField size=\"small\" {...params} />}\n                />\n              </LocalizationProvider>\n            </div>\n\n            <div>\n              <input\n                name=\"rating\"\n                type=\"number\"\n                value={rating}\n                ref={ratingRef}\n                hidden\n                readOnly\n              />\n\n              <Rating\n                name=\"simple-controlled\"\n                defaultValue={0}\n                value={rating}\n                size=\"large\"\n                onChange={(event, newValue) => {\n                  updateRating(newValue);\n                }}\n              />\n            </div>\n          </div>\n\n          {/* review */}\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              rows=\"8\"\n              placeholder=\"ADD A REVIEW...\"\n              id=\"review\"\n              value={form.review}\n              onChange={(e) => updateForm({ review: e.target.value })}\n            />\n          </div>\n\n         {/* cancel/save */}\n          <div className=\"form-group text-right\">\n            <a href=\"/diary\" class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>\n            <input\n              type=\"submit\"\n              value=\"LOG\"\n              className=\"btn btn-success\"\n            />\n          </div>\n          </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    ) : (\n      <div style={{marginTop: 100, marginLeft: 300, marginRight: 300,}}>\n        <h2 class=\"text-center\">You need to be logged in to create reviews!</h2>\n      </div>\n    )\n  );\n}\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/edit.js",["153","154","155"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\n\nimport Search from \"./search/search\";\n\nexport default function Edit() {\n  const [user, loading, error] = useAuthState(auth);\n\n  // rating and date\n  const [name, setName] = React.useState();\n  const [year, setYear] = React.useState();\n  const [rating, setRating] = React.useState(null);\n  const [value1, setValue1] = React.useState(null);\n  const [posterPath, setPosterPath] = React.useState(null);\n\n  const updateRating = (newRating) => {\n    setRating(newRating);\n    console.log(rating);\n  }\n\n  const nameRef = React.useRef();\n  const dateRef = React.useRef();\n  const ratingRef = React.useRef();\n\n  // get review data from form\n  const [form, setForm] = useState({\n    name: \"\",\n    year: \"\",\n    review: \"\",\n    date: \"\",\n    rating: \"\",\n    poster: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:4000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      // set up saved values\n      setForm(record);\n      setName(record.name);\n      // trigger a click so the search bar displays the title\n      if (document.getElementById('searchbar') != null) {\n        document.getElementById('searchbar').click();\n        document.getElementById('searchbar').dispatchEvent(new Event('click'));\n      }\n      setValue1(record.date);\n      setRating(record.rating);\n      setPosterPath(record.poster);\n      setYear(record.year);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const d = dateRef.current.value;\n    const dt = isNaN(d) ? d : format(new Date(+d), 'MM/dd/yyyy');\n\n    const editedPerson = {\n      name: nameRef.current.value,\n      year: document.getElementById('year-hidden').value,\n      review: form.review,\n      date: dt,\n      rating: ratingRef.current.value,\n      poster: document.getElementById('poster').src,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:4000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(`/review/${params.id.toString()}`);\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return ( \n    user ? (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <div class=\"container\">\n      <h3>Edit Review</h3></div> <br></br>\n      <div class=\"container\">\n      <form onSubmit={onSubmit}>\n        <div class=\"row\">\n            <div class=\"col-4 nopadding\">\n                <div className=\"form-group\"><img id=\"poster\" src={posterPath} style={{width: 300}} class=\"img-fluid\"/></div>\n            </div>\n            <div class=\"col\">\n                <div className=\"form-group\">\n                  {/* film title */}\n                  <label htmlFor=\"name\">I WATCHED... </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"name-hidden\"\n                    value={name}\n                    ref={nameRef}\n                    onChange={(e) => {\n                      updateForm({ \n                        name: e.target.value, \n                        poster: document.getElementById('poster').src \n                      }); \n                    }}\n                    required\n                    hidden\n                  />\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"year-hidden\"\n                    value={year}\n                    hidden\n                  />\n                  <div>\n                    <Search/>\n                  </div>\n                </div>\n\n                {/* date and rating */}\n                <div className=\"form-group row\" style={{marginLeft: 5, marginRight: 5}}>\n                  <label htmlFor=\"date\" className=\"col-form-label\">ON:</label>\n                  <div className=\"col-lg\">\n                    <input\n                      name=\"entry\"\n                      type=\"text\"\n                      value={value1}\n                      ref={dateRef}\n                      hidden\n                      readOnly\n                    />\n\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                      <DatePicker\n                        mask=\"__/__/____\"\n                        value={value1}\n                        onChange={(newValue) => {\n                          setValue1(newValue);\n                        }}\n                        disableFuture\n                        renderInput={(params) => <TextField size=\"small\" {...params} />}\n                      />\n                    </LocalizationProvider>\n                  </div>\n\n                  <div>\n                  <input\n                      name=\"rating\"\n                      type=\"number\"\n                      value={rating}\n                      ref={ratingRef}\n                      hidden\n                      readOnly\n                    />\n\n                    <Rating\n                    name=\"simple-controlled\"\n                    defaultValue={rating}\n                    value={rating}\n                    size=\"large\"\n                    onChange={(event, newValue) => updateRating(newValue)\n                    }\n                    />\n                  </div>\n                </div>\n\n                {/* review */}\n                <div className=\"form-group\">\n                  <textarea\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"review\"\n                    rows=\"8\"\n                    value={form.review}\n                    onChange={(e) => updateForm({ review: e.target.value })}\n                  />\n                </div>\n\n                {/* cancel/submit button */}\n                <div className=\"form-group text-right\">\n                  <a href={`/review/${params.id}`} class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>                 \n                  <input\n                    type=\"submit\"\n                    value=\"SAVE\"\n                    className=\"btn btn-success\"\n                  />\n                </div>\n            </div>\n          </div>\n          </form>\n        </div>           \n    </div>\n    ) : (\n      <div style={{marginTop: 100, marginLeft: 300, marginRight: 300,}}>\n        <h2 class=\"text-center\">You need to be logged in to edit reviews!</h2>\n      </div>\n    )\n  );\n}","/Users/allisonchen/Desktop/filmdiary/client/src/components/editList.js",["156","157","158","159","160","161"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport TextField from '@mui/material/TextField';\nimport Search from \"./searchList/search\";\nimport { Card, Grid, Table, TableBody, TableCell, TableContainer, TableRow, IconButton,} from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\n\nexport default function EditList() {\n  const [user, loading, error] = useAuthState(auth);\n  // table stuff\n  const [rows, setRows] = useState([\n    {\n      id: 1,\n      item: {title: \"\", year: \"\", poster: \"\"}\n    }\n  ]);\n\n  const generateRow = () => {\n    return {\n      id: 1,\n      item: {title: \"\", year: \"\", poster: \"\"}\n    }\n  }\n\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item[\"title\"] = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n\n    setRows((prevRows) => {\n      return [\n        ...rows.slice(0, id - 1),\n        ...rows.slice(id),\n      ];\n    });\n  }\n\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    if (id === 1) {\n      if (value !== \"\") {\n        for (let i = 0; i < rows.length; i++) {\n            console.log(rows[i].id);\n            rows[i].id=i+2;\n        }\n       setRows((prevRows) => [generateRow(), ...prevRows]);\n       rows[0].item[\"title\"]=value;\n       rows[0].item[\"year\"]=document.getElementById(\"addYearToList\").value;\n       rows[0].item[\"poster\"]=document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id + 1);\n      }\n    }\n  }\n\n  const generateTable = () => {\n    return (\n      <Table>\n        <TableBody>\n          {rows.map((row) => \n          \n          row.id === 1 ? (\n            <TableRow\n            key={row.id}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            hidden\n            > \n            <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n              <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n              <TextField \n                id='addFilmToList'\n                placeholder={\"Add Item\"} \n                onClick={(e) => handleChange(e, row.id)} \n                value={row.item[\"title\"]}\n                fullWidth\n                autoComplete=\"off\"\n                variant=\"standard\"\n                InputProps={{ disableUnderline: true, readOnly: true,  }}\n              /><p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n              {\n                row.id === 1 ? (<></>) : (     //changed here\n                  <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                    <DeleteIcon />\n                  </IconButton>\n                )\n              }\n            </TableCell>\n          </TableRow>\n          ) : \n          ( \n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            > \n              <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n                <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n                <TextField \n                  id='addFilmToList'\n                  placeholder={\"Add Item\"} \n                  onClick={(e) => handleChange(e, row.id)} \n                  value={row.item[\"title\"]}\n                  fullWidth\n                  autoComplete=\"off\"\n                  variant=\"standard\"\n                  InputProps={{ disableUnderline: true, readOnly: true, style: {fontWeight: 500} }}\n                /><p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n                {\n                  row.id === 1 ? (<></>) : (     //changed here\n                    <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                      <DeleteIcon />\n                    </IconButton>\n                  )\n                }\n              </TableCell>\n            </TableRow>       \n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n  const [tableData, setTableData] = useState(generateTable());\n\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows])\n\n// get list data from form\nconst [form, setForm] = useState({\n  name: \"\",\n  description: \"\",\n  lists: [],\n});\nconst params = useParams();\nconst navigate = useNavigate();\n\nuseEffect(() => {\n  async function fetchData() {\n    const id = params.id.toString();\n    const response = await fetch(`http://localhost:4000/list/${params.id.toString()}`);\n\n    if (!response.ok) {\n      const message = `An error has occured: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n\n    const list = await response.json();\n    if (!list) {\n      window.alert(`List with id ${id} not found`);\n      navigate(\"/\");\n      return;\n    }\n\n    setForm(list);\n\n    let sizes_arr = JSON.parse(list.list); \n   \n    let rows_arr = [];\n    rows_arr.push({\n      id: 1,\n      item: {title: \"\", poster: \"\"}\n    })\n    for (let i = 0; i < sizes_arr.length; i++) {\n      rows_arr.push({\n        id: i+2,\n        item: sizes_arr[i]\n      })\n    }\n    console.log(rows_arr);\n      \n    setRows(rows_arr);\n    setTableData(generateTable());\n  }\n\n  fetchData();\n\n  return;\n}, [params.id, navigate]);\n\n// These methods will update the state properties.\nfunction updateForm(value) {\n  return setForm((prev) => {\n    return { ...prev, ...value };\n  });\n}\n\nasync function onSubmit(e) {\n  e.preventDefault();\n\n  let arr = [];\n    // if (rows[rows.length - 1].item === \"\") {\n    if (rows[0].item[\"title\"] === \"\") {\n      arr = rows.slice(1, rows.length);\n    } else {\n      arr = rows;\n    }\n\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n\n  const editedList = {\n    name: form.name,\n    description: form.description,\n    list: [],\n    thumbnail1: \"\",\n    thumbnail2: \"\",\n    thumbnail3: \"\",\n  };\n  editedList.list = JSON.stringify(items);\n  if (arr.length > 0) {\n    editedList.thumbnail1 = arr[0].item.poster;\n  }\n  if (arr.length > 1) {\n    editedList.thumbnail2 = arr[1].item.poster;\n  }\n  if (arr.length > 2) {\n    editedList.thumbnail3 = arr[2].item.poster;\n  }\n\n  // This will send a post request to update the data in the database.\n  await fetch(`http://localhost:4000/updatelist/${params.id}`, {\n    method: \"POST\",\n    body: JSON.stringify(editedList),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  });\n\n  navigate(`/list/${params.id.toString()}`);\n}\n\n// This following section will display the form that takes input from the user to update the data.\nreturn (\n  user ? (\n  <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n    <form onSubmit={onSubmit}>\n    <div class=\"container\">\n      <TextField\n        fullWidth\n        id=\"outlined-multiline-flexible\"\n        defaultValue={form.name}\n        multiline\n        // rows={1}\n        maxRows={10}\n        variant=\"standard\"\n        InputProps={{ disableUnderline: true }}\n        inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n        InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n        onChange={e => updateForm({ name: e.target.value })}\n        type=\"text\"\n      />\n      <br></br><br></br>\n      <TextField\n        fullWidth\n        id=\"outlined-multiline-flexible\"\n        defaultValue={form.description}\n        placeholder=\"ADD DESCRIPTION...\"\n        multiline\n        rows={3}\n        maxRows={3}\n        variant=\"standard\"\n        InputProps={{ disableUnderline: true }}\n        onChange={e => updateForm({ description: e.target.value })}\n        type=\"text\"\n      />    \n    </div> <br></br>\n    <div class=\"container\"><Search/></div> <br></br>\n    <div class=\"container\">\n      <Grid container>\n\n        <Grid item lg={12} justifyContent=\"center\" display=\"flex\">\n          <Card>\n            <TableContainer>\n              {tableData} {/* this variable will change to contain all data */}\n            </TableContainer>\n          </Card>\n        </Grid>\n        </Grid>\n      </div>\n    <br></br>\n\n    {/* cancel/submit button */}\n    <div className=\"form-group text-right container\">\n      <a href={`/list/${params.id}`} class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>                 \n      <input\n        type=\"submit\"\n        value=\"SAVE\"\n        className=\"btn btn-success\"\n      />\n    </div>\n    </form>\n  </div>  \n  ) : (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300,}}>\n      <h2 class=\"text-center\">You need to be logged in to edit lists!</h2>\n    </div>\n  )\n);\n}\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/createList.js",["162","163","164","165","166"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Search from \"./searchList/search\";\nimport { Card, Grid, Table, TableBody, TableCell, TableContainer, TableRow, IconButton,} from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\n\nexport default function CreateList() {\n  const [user, loading, error] = useAuthState(auth);\n  // table stuff\n  const [rows, setRows] = useState([\n    {\n      id: 1,\n      item: {title: \"\", year:\"\", poster: \"\"}\n    }\n  ]);\n\n  const generateRow = () => {\n    return {\n      id: 1,\n      item: {title: \"\", year:\"\", poster: \"\"}\n    }\n  }\n\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item[\"title\"] = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n\n    setRows((prevRows) => {\n      return [\n        ...rows.slice(0, id - 1),\n        ...rows.slice(id),\n      ];\n    });\n  }\n\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    if (id === 1) {\n      if (value !== \"\") {\n        for (let i = 0; i < rows.length; i++) {\n            rows[i].id=i+2;\n        }\n       setRows((prevRows) => [generateRow(), ...prevRows]);\n       rows[0].item[\"title\"]=value;\n       rows[0].item[\"year\"]=document.getElementById(\"addYearToList\").value;\n       rows[0].item[\"poster\"]=document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id + 1);\n      }\n    }\n  }\n\n  const generateTable = () => {\n    return (\n      <Table>\n        <TableBody>\n          {rows.map((row) => \n          \n          row.id === 1 ? (\n            <TableRow\n            key={row.id}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            hidden\n            > \n            <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n              <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n              <TextField \n                id='addFilmToList'\n                placeholder={\"Add Item\"} \n                onClick={(e) => handleChange(e, row.id)} \n                value={row.item[\"title\"]}\n                fullWidth\n                autoComplete=\"off\"\n                variant=\"standard\"\n                InputProps={{ disableUnderline: true, readOnly: true }}\n              />\n              <p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n              {\n                row.id === 1 ? (<></>) : (     //changed here\n                  <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                    <DeleteIcon />\n                  </IconButton>\n                )\n              }\n            </TableCell>\n          </TableRow>\n          ) : \n          ( \n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            > \n              <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n                <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n                <TextField \n                  id='addFilmToList'\n                  placeholder={\"Add Item\"} \n                  onClick={(e) => handleChange(e, row.id)} \n                  value={row.item[\"title\"]}\n                  fullWidth\n                  autoComplete=\"off\"\n                  variant=\"standard\"\n                  InputProps={{ disableUnderline: true, readOnly: true, style: {fontWeight: 500}}}\n                />\n                <p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n                {\n                  row.id === 1 ? (<></>) : (     //changed here\n                    <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                      <DeleteIcon />\n                    </IconButton>\n                  )\n                }\n              </TableCell>\n            </TableRow>       \n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n  const [tableData, setTableData] = useState(generateTable());\n\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows])\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    list: [],\n    thumbnail1: \"\",\n    thumbnail2: \"\",\n    thumbnail3: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    let arr = [];\n    // if (rows[rows.length - 1].item === \"\") {\n    if (rows[0].item[\"title\"] === \"\") {\n      arr = rows.slice(1, rows.length);\n    } else {\n      arr = rows;\n    }\n\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n\n    // set default list name\n    const n = isNaN(form.name) ? form.name : \"Untitled List\";\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = { ...form };\n    newList.name = n;\n    newList.list = JSON.stringify(items);\n    if (arr.length > 0) {\n      newList.thumbnail1 = arr[0].item.poster;\n    }\n    if (arr.length > 1) {\n      newList.thumbnail2 = arr[1].item.poster;\n    }\n    if (arr.length > 2) {\n      newList.thumbnail3 = arr[2].item.poster;\n    }\n    \n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newList),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", description: \"\", list: \"\", thumbnail1: \"\", thumbnail2: \"\", thumbnail3: \"\" });\n    navigate(\"/lists\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    user ? (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <form onSubmit={onSubmit}>\n      <div className=\"container\">\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"New List\"\n          multiline\n          // rows={1}\n          maxRows={10}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n          InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n          onChange={e => updateForm({ name: e.target.value })}\n          type=\"text\"\n        /> \n        <br></br><br></br>\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"ADD DESCRIPTION...\"\n          multiline\n          rows={3}\n          maxRows={3}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          onChange={e => updateForm({ description: e.target.value })}\n          type=\"text\"\n        />    \n      </div> <br></br>\n      <div className=\"container\"><TextField fullWidth id=\"outlined-basic\" label=\"ADD FILMS...\" variant=\"outlined\" hidden/></div> \n      <div className=\"container\"><Search/></div> <br></br>\n      <div className=\"container\">\n      <Grid container>\n        <Grid item lg={12} justifyContent=\"center\" display=\"flex\">\n          <Card>\n            <TableContainer>\n              {tableData} {/* this variable will change to contain all data */}\n            </TableContainer>\n          </Card>\n        </Grid>\n        </Grid>\n      </div>\n      <br></br>\n      \n      <div className=\"form-group text-right container\">\n        <a href=\"/lists\" className=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>\n        <input\n          type=\"submit\"\n          value=\"SAVE\"\n          className=\"btn btn-success\"\n        />\n      </div>   \n      </form>  \n    </div>\n    ) : (\n      <div style={{marginTop: 100, marginLeft: 300, marginRight: 300,}}>\n        <h2 class=\"text-center\">You need to be logged in to create lists!</h2>\n      </div>\n    )\n  );\n}\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/firebase.js",[],"/Users/allisonchen/Desktop/filmdiary/client/src/components/search/movies.js",[],"/Users/allisonchen/Desktop/filmdiary/client/src/components/search/utils.js",[],"/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/search.js",["167","168","169","170"],"import React, { Component, useState, useRef } from 'react';\nimport axios from 'axios';\n\nimport Movies from './movies';\nimport { search } from './utils';\nimport TextField from '@mui/material/TextField';\n\nclass Search extends Component {\n  state = {\n    movies: null,\n    loading: false,\n    value: ''\n  };\n\n  search = async val => {\n    this.setState({ loading: true });\n    const res = await axios(\n      `https://api.themoviedb.org/3/search/movie?query=${val}&api_key=dbc0a6d62448554c27b6167ef7dabb1b`\n    );\n    const movies = await res.data.results;\n\n    this.setState({ movies, loading: false });\n  };\n\n  onChangeHandler = async e => {\n    this.search(e.target.value);\n    this.setState({ value: e.target.value });\n  };\n\n  onClickHandler = async e => {\n    this.search(\"\");\n    this.setState({ value: \"\" });\n  };\n\n  get renderMovies() {\n    if (this.state.movies) {\n      return <Movies list={this.state.movies} />;\n    }\n  }\n\n  render() {\n    return (\n      <div style={{margin: 0}}>\n      \t{/* <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}> */}\n        {/* <input\n          value={this.state.value}\n          onChange={e => this.onChangeHandler(e)}\n          placeholder=\"Search Here\"\n        /> */}\n        <TextField\n          fullWidth\n          id=\"searchbar\"\n          variant=\"outlined\" \n          value={this.state.value}\n          onChange={e => this.onChangeHandler(e)}\n          onClick={(e) => {\n            this.onClickHandler(e);\n            // allow search again\n            if (document.getElementById('searchresultsList')) {\n              document.getElementById('searchresultsList').style.visibility = \"visible\";\n            }           \n          }}\n          placeholder=\"Add Films...\"\n          autoComplete='off'\n        />\n        <div>{this.renderMovies}</div>\n      </div>\n    );\n  }\n}\n\nexport default Search;","/Users/allisonchen/Desktop/filmdiary/client/src/components/search/movie.js",["171","172","173","174","175","176","177","178","179","180"],"import React, { useState } from \"react\";\nimport defaultposter from './defaultposter.jpeg';\nimport * as ReactDOM from 'react-dom';\nimport Search from \"./search\";\nimport Movies from \"./movies\";\n\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\n\nconst MovieCard = props => {\n  const { title, poster_path, id, release_date} = props.item;\n  const posterthumb = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/original${poster_path}` : defaultposter;\n\n  const year = release_date.substring(0, 4);\n\n  var selectedTitle = React.useRef();\n\n  function triggerInput(enteredName, enteredValue) {\n    const input = document.getElementById(enteredName); \n    const lastValue = input.value;\n    input.value = enteredValue;\n    const event = new Event(\"input\", { bubbles: true });\n    const tracker = input._valueTracker;\n    if (tracker) {\n      tracker.setValue(lastValue);\n    }\n    input.dispatchEvent(event);\n  }\n\n  return (\n    <tr onClick={() => {\n      // set search bar to official title\n      document.getElementById('searchbar').value = title;\n\n      // update the hidden name thing and poster for the form\n      document.getElementById('name-hidden').value = title;\n      document.getElementById('year-hidden').value = year;\n      document.getElementById('poster').src = poster;\n\n      // trigger the onclick function so the title stays\n      document.getElementById('searchbar').click();\n      document.getElementById('searchbar').dispatchEvent(new Event('click'));\n\n      // hide after selecting search result\n      document.getElementById('searchresults').style.visibility = \"hidden\";\n    }}>\n      <td class=\"col-sm-1\"><img src={posterthumb} style={{height: 80}}></img></td>\n      <td><b>{title}</b> <p class=\"text-muted\">({year})</p></td>\n    </tr>\n  );\n\n};\n\nexport default MovieCard;\n","/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/utils.js",[],"/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/movies.js",[],"/Users/allisonchen/Desktop/filmdiary/client/src/components/searchList/movie.js",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import React, { useState } from \"react\";\nimport defaultposter from './defaultposter.jpeg';\nimport * as ReactDOM from 'react-dom';\nimport Search from \"./search\";\nimport Movies from \"./movies\";\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport deleteicon from \"./deleteicon.png\";\n\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\n\nconst MovieCard = props => {\n  const { title, poster_path, id, release_date} = props.item;\n  const posterthumb = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/original${poster_path}` : defaultposter;\n\n  const year = release_date.substring(0, 4);\n\n  var selectedTitle = React.useRef();\n\n  function triggerInput(enteredName, enteredValue) {\n    const input = document.getElementById(enteredName); \n    const lastValue = input.value;\n    input.value = enteredValue;\n    const event = new Event(\"input\", { bubbles: true });\n    const tracker = input._valueTracker;\n    if (tracker) {\n      tracker.setValue(lastValue);\n    }\n    input.dispatchEvent(event);\n  }\n\n  function deleteRow(row) {\n    var i = row.parentNode.parentNode.rowIndex;\n    document.getElementById('buildinglist').deleteRow(i);\n  }\n  \n  function insRow() {\n    // console.log('hi');\n    var x = document.getElementById('buildinglist');\n    var new_row = x.rows[1];\n    var len = x.rows.length;\n    new_row.cells[0].innerHTML = len;\n  \n    var inp1 = new_row.cells[1].getElementsByTagName('input')[0];\n    inp1.id += len;\n    inp1.value = '';\n    var inp2 = new_row.cells[2].getElementsByTagName('input')[0];\n    inp2.id += len;\n    inp2.value = '';\n    x.appendChild(new_row);\n  }\n\n  return (\n    <tr onClick={() => {\n      // reset search bar to blank\n      document.getElementById('searchbar').value = \"\";\n\n      // trigger the onclick function so the title stays\n      document.getElementById('searchbar').click();\n      document.getElementById('searchbar').dispatchEvent(new Event('click'));\n\n      document.getElementById('addFilmToList').value = title;\n      document.getElementById('addYearToList').value = year;\n      document.getElementById('addPosterToList').src = posterthumb;\n      document.getElementById('addPosterToList').style.height = \"100px\";\n      document.getElementById('addFilmToList').click();\n      document.getElementById('addFilmToList').dispatchEvent(new Event('click'));\n      \n      // hide after selecting search result\n      document.getElementById('searchresultsList').style.visibility = \"hidden\";\n    }}>\n      <td className=\"col-sm-1\"><img src={posterthumb} style={{height: 80}}></img></td>\n      <td><b>{title}</b> <p className=\"text-muted\">({year})</p></td>\n    </tr>\n  );\n\n};\n\nexport default MovieCard;\n",{"ruleId":"197","severity":1,"message":"198","line":6,"column":25,"nodeType":"199","messageId":"200","endLine":6,"endColumn":33},{"ruleId":"197","severity":1,"message":"201","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"202","line":10,"column":8,"nodeType":"199","messageId":"200","endLine":10,"endColumn":12},{"ruleId":"197","severity":1,"message":"203","line":19,"column":25,"nodeType":"199","messageId":"200","endLine":19,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":28,"column":6,"nodeType":"206","endLine":28,"endColumn":21,"suggestions":"207"},{"ruleId":"197","severity":1,"message":"208","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"202","line":2,"column":16,"nodeType":"199","messageId":"200","endLine":2,"endColumn":20},{"ruleId":"197","severity":1,"message":"209","line":2,"column":51,"nodeType":"199","messageId":"200","endLine":2,"endColumn":65},{"ruleId":"197","severity":1,"message":"210","line":2,"column":77,"nodeType":"199","messageId":"200","endLine":2,"endColumn":87},{"ruleId":"211","severity":1,"message":"212","line":56,"column":33,"nodeType":"213","messageId":"214","endLine":56,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":57,"column":12,"nodeType":"217","endLine":57,"endColumn":54},{"ruleId":"215","severity":1,"message":"216","line":58,"column":12,"nodeType":"217","endLine":58,"endColumn":64},{"ruleId":"211","severity":1,"message":"212","line":63,"column":33,"nodeType":"213","messageId":"214","endLine":63,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":64,"column":12,"nodeType":"217","endLine":64,"endColumn":54},{"ruleId":"215","severity":1,"message":"216","line":65,"column":12,"nodeType":"217","endLine":65,"endColumn":64},{"ruleId":"211","severity":1,"message":"212","line":70,"column":33,"nodeType":"213","messageId":"214","endLine":70,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":71,"column":12,"nodeType":"217","endLine":71,"endColumn":54},{"ruleId":"215","severity":1,"message":"216","line":72,"column":12,"nodeType":"217","endLine":72,"endColumn":64},{"ruleId":"211","severity":1,"message":"212","line":44,"column":31,"nodeType":"213","messageId":"214","endLine":44,"endColumn":33},{"ruleId":"215","severity":1,"message":"216","line":45,"column":12,"nodeType":"217","endLine":45,"endColumn":56},{"ruleId":"215","severity":1,"message":"216","line":46,"column":12,"nodeType":"217","endLine":46,"endColumn":116},{"ruleId":"197","severity":1,"message":"218","line":69,"column":16,"nodeType":"199","messageId":"200","endLine":69,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":69,"column":25,"nodeType":"199","messageId":"200","endLine":69,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":146,"column":13,"nodeType":"217","endLine":146,"endColumn":75},{"ruleId":"215","severity":1,"message":"216","line":51,"column":17,"nodeType":"217","endLine":51,"endColumn":90},{"ruleId":"204","severity":1,"message":"219","line":73,"column":6,"nodeType":"206","endLine":73,"endColumn":12,"suggestions":"220"},{"ruleId":"197","severity":1,"message":"218","line":105,"column":16,"nodeType":"199","messageId":"200","endLine":105,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":105,"column":25,"nodeType":"199","messageId":"200","endLine":105,"endColumn":30},{"ruleId":"204","severity":1,"message":"219","line":139,"column":6,"nodeType":"206","endLine":139,"endColumn":27,"suggestions":"221"},{"ruleId":"211","severity":1,"message":"212","line":187,"column":24,"nodeType":"213","messageId":"214","endLine":187,"endColumn":26},{"ruleId":"197","severity":1,"message":"222","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"223","line":1,"column":38,"nodeType":"199","messageId":"200","endLine":1,"endColumn":44},{"ruleId":"197","severity":1,"message":"224","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":16},{"ruleId":"225","severity":1,"message":"226","line":34,"column":3,"nodeType":"227","messageId":"228","endLine":34,"endColumn":19},{"ruleId":"197","severity":1,"message":"203","line":18,"column":25,"nodeType":"199","messageId":"200","endLine":18,"endColumn":30},{"ruleId":"204","severity":1,"message":"229","line":36,"column":6,"nodeType":"206","endLine":36,"endColumn":21,"suggestions":"230"},{"ruleId":"197","severity":1,"message":"231","line":38,"column":9,"nodeType":"199","messageId":"200","endLine":38,"endColumn":14},{"ruleId":"197","severity":1,"message":"232","line":15,"column":8,"nodeType":"199","messageId":"200","endLine":15,"endColumn":11},{"ruleId":"197","severity":1,"message":"218","line":51,"column":16,"nodeType":"199","messageId":"200","endLine":51,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":51,"column":25,"nodeType":"199","messageId":"200","endLine":51,"endColumn":30},{"ruleId":"233","severity":1,"message":"234","line":59,"column":9,"nodeType":"217","endLine":59,"endColumn":12},{"ruleId":"233","severity":1,"message":"234","line":152,"column":9,"nodeType":"217","endLine":152,"endColumn":12},{"ruleId":"197","severity":1,"message":"235","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"218","line":19,"column":16,"nodeType":"199","messageId":"200","endLine":19,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":19,"column":25,"nodeType":"199","messageId":"200","endLine":19,"endColumn":30},{"ruleId":"197","severity":1,"message":"236","line":21,"column":16,"nodeType":"199","messageId":"200","endLine":21,"endColumn":23},{"ruleId":"197","severity":1,"message":"237","line":22,"column":16,"nodeType":"199","messageId":"200","endLine":22,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":94,"column":15,"nodeType":"217","endLine":94,"endColumn":90},{"ruleId":"197","severity":1,"message":"218","line":17,"column":16,"nodeType":"199","messageId":"200","endLine":17,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":17,"column":25,"nodeType":"199","messageId":"200","endLine":17,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":128,"column":45,"nodeType":"217","endLine":128,"endColumn":119},{"ruleId":"197","severity":1,"message":"218","line":12,"column":16,"nodeType":"199","messageId":"200","endLine":12,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":12,"column":25,"nodeType":"199","messageId":"200","endLine":12,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":77,"column":15,"nodeType":"217","endLine":77,"endColumn":88},{"ruleId":"215","severity":1,"message":"216","line":108,"column":17,"nodeType":"217","endLine":108,"endColumn":90},{"ruleId":"204","severity":1,"message":"219","line":141,"column":6,"nodeType":"206","endLine":141,"endColumn":12,"suggestions":"238"},{"ruleId":"204","severity":1,"message":"219","line":194,"column":4,"nodeType":"206","endLine":194,"endColumn":25,"suggestions":"239"},{"ruleId":"197","severity":1,"message":"218","line":12,"column":16,"nodeType":"199","messageId":"200","endLine":12,"endColumn":23},{"ruleId":"197","severity":1,"message":"203","line":12,"column":25,"nodeType":"199","messageId":"200","endLine":12,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":76,"column":15,"nodeType":"217","endLine":76,"endColumn":88},{"ruleId":"215","severity":1,"message":"216","line":108,"column":17,"nodeType":"217","endLine":108,"endColumn":90},{"ruleId":"204","severity":1,"message":"219","line":142,"column":6,"nodeType":"206","endLine":142,"endColumn":12,"suggestions":"240"},{"ruleId":"197","severity":1,"message":"222","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"223","line":1,"column":38,"nodeType":"199","messageId":"200","endLine":1,"endColumn":44},{"ruleId":"197","severity":1,"message":"224","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":16},{"ruleId":"225","severity":1,"message":"226","line":35,"column":3,"nodeType":"227","messageId":"228","endLine":35,"endColumn":19},{"ruleId":"197","severity":1,"message":"222","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"241","line":3,"column":13,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"242","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":14},{"ruleId":"197","severity":1,"message":"243","line":5,"column":8,"nodeType":"199","messageId":"200","endLine":5,"endColumn":14},{"ruleId":"197","severity":1,"message":"244","line":7,"column":8,"nodeType":"199","messageId":"200","endLine":7,"endColumn":15},{"ruleId":"197","severity":1,"message":"245","line":8,"column":10,"nodeType":"199","messageId":"200","endLine":8,"endColumn":18},{"ruleId":"197","severity":1,"message":"246","line":11,"column":31,"nodeType":"199","messageId":"200","endLine":11,"endColumn":33},{"ruleId":"197","severity":1,"message":"247","line":17,"column":7,"nodeType":"199","messageId":"200","endLine":17,"endColumn":20},{"ruleId":"197","severity":1,"message":"248","line":19,"column":12,"nodeType":"199","messageId":"200","endLine":19,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":48,"column":28,"nodeType":"217","endLine":48,"endColumn":72},{"ruleId":"197","severity":1,"message":"222","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"241","line":3,"column":13,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"242","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":14},{"ruleId":"197","severity":1,"message":"243","line":5,"column":8,"nodeType":"199","messageId":"200","endLine":5,"endColumn":14},{"ruleId":"197","severity":1,"message":"210","line":6,"column":8,"nodeType":"199","messageId":"200","endLine":6,"endColumn":18},{"ruleId":"197","severity":1,"message":"249","line":7,"column":8,"nodeType":"199","messageId":"200","endLine":7,"endColumn":18},{"ruleId":"197","severity":1,"message":"250","line":9,"column":8,"nodeType":"199","messageId":"200","endLine":9,"endColumn":18},{"ruleId":"197","severity":1,"message":"244","line":11,"column":8,"nodeType":"199","messageId":"200","endLine":11,"endColumn":15},{"ruleId":"197","severity":1,"message":"245","line":12,"column":10,"nodeType":"199","messageId":"200","endLine":12,"endColumn":18},{"ruleId":"197","severity":1,"message":"246","line":15,"column":31,"nodeType":"199","messageId":"200","endLine":15,"endColumn":33},{"ruleId":"197","severity":1,"message":"251","line":17,"column":9,"nodeType":"199","messageId":"200","endLine":17,"endColumn":15},{"ruleId":"197","severity":1,"message":"247","line":21,"column":7,"nodeType":"199","messageId":"200","endLine":21,"endColumn":20},{"ruleId":"197","severity":1,"message":"248","line":23,"column":12,"nodeType":"199","messageId":"200","endLine":23,"endColumn":24},{"ruleId":"197","severity":1,"message":"252","line":35,"column":12,"nodeType":"199","messageId":"200","endLine":35,"endColumn":21},{"ruleId":"197","severity":1,"message":"253","line":40,"column":12,"nodeType":"199","messageId":"200","endLine":40,"endColumn":18},{"ruleId":"215","severity":1,"message":"216","line":75,"column":32,"nodeType":"217","endLine":75,"endColumn":76},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Grid' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'Card' is defined but never used.","'TableContainer' is defined but never used.","'IconButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'generateTable'. Either include it or remove the dependency array.",["255"],["256"],"'useState' is defined but never used.","'useRef' is defined but never used.","'search' is defined but never used.","getter-return","Expected getter 'renderMovies' to always return a value.","FunctionExpression","expectedAlways","React Hook useEffect has missing dependencies: 'fetchUserName' and 'navigate'. Either include them or remove the dependency array.",["257"],"'theme' is assigned a value but never used.","'Box' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'setName' is assigned a value but never used.","'setYear' is assigned a value but never used.",["258"],["259"],["260"],"'ReactDOM' is defined but never used.","'Search' is defined but never used.","'Movies' is defined but never used.","'classes' is defined but never used.","'truncStr' is defined but never used.","'id' is assigned a value but never used.","'selectedTitle' is assigned a value but never used.","'triggerInput' is defined but never used.","'DeleteIcon' is defined but never used.","'deleteicon' is defined but never used.","'poster' is assigned a value but never used.","'deleteRow' is defined but never used.","'insRow' is defined but never used.",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"263","fix":"269"},{"desc":"265","fix":"270"},{"desc":"263","fix":"271"},"Update the dependencies array to be: [user, loading, navigate]",{"range":"272","text":"273"},"Update the dependencies array to be: [generateTable, rows]",{"range":"274","text":"275"},"Update the dependencies array to be: [params.id, navigate, generateTable]",{"range":"276","text":"277"},"Update the dependencies array to be: [user, loading, navigate, fetchUserName]",{"range":"278","text":"279"},{"range":"280","text":"275"},{"range":"281","text":"277"},{"range":"282","text":"275"},[983,998],"[user, loading, navigate]",[2414,2420],"[generateTable, rows]",[4014,4035],"[params.id, navigate, generateTable]",[1268,1283],"[user, loading, navigate, fetchUserName]",[4793,4799],[5866,5887],[4774,4780]]