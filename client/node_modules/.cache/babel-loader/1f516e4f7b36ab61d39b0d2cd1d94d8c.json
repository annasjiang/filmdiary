{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/filmdiary-commit/client/src/components/lists.js\",\n  _s = $RefreshSig$();\nimport Rating from '@mui/material/Rating';\nimport poster from './poster.jpg';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [show, setShow] = useState(false);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:4000/list/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      // sort by date new -> old\n      var sortedData = records.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      });\n      setRecords(sortedData);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteList(deleteId) {\n    await fetch(`http://localhost:4000/${deleteId}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== deleteId);\n    setLists(newLists);\n  }\n\n  // This method will map out the records on the table\n  function listList() {\n    return lists.map(list => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        list: list,\n        deleteList: () => deleteList(list._id)\n      }, list._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  // get reviews\n  const List = props => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/review/${props.list._id}`,\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        class: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          class: \"img-fluid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: props.list.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this), props.list.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n\n  // display reviews\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: listList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Lists, \"dCPtW05qRwPKQixcn+tVemGprnI=\");\n_c = Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["Rating","poster","React","useEffect","useState","jsxDEV","_jsxDEV","Lists","_s","records","setRecords","show","setShow","getRecords","response","fetch","ok","message","statusText","window","alert","json","sortedData","sort","a","b","Date","date","length","deleteList","deleteId","method","newRecords","filter","el","_id","setLists","newLists","listList","lists","map","list","List","fileName","_jsxFileName","lineNumber","columnNumber","props","href","style","textDecoration","color","children","class","src","name","description","marginTop","marginLeft","marginRight","className","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/filmdiary-commit/client/src/components/lists.js"],"sourcesContent":["import Rating from '@mui/material/Rating';\nimport poster from './poster.jpg';\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Lists() {\n  const [records, setRecords] = useState([]);\n  const [show, setShow] = useState(false);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:4000/list/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      // sort by date new -> old\n      var sortedData= records.sort((function (a, b) { return new Date(b.date) - new Date(a.date) }));\n      setRecords(sortedData);\n    }\n    getRecords();\n    return; \n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteList(deleteId) {\n    await fetch(`http://localhost:4000/${deleteId}`, {\n      method: \"DELETE\"\n    });\n\n    const newRecords = records.filter((el) => el._id !== deleteId);\n    setLists(newLists);\n  }\n\n  // This method will map out the records on the table\n  function listList() {\n    return lists.map((list) => {\n      return (\n        <List\n          list={list}\n          deleteList={() => deleteList(list._id)}\n          key={list._id}\n        />\n      );\n    });\n  }\n\n  // get reviews\n  const List = (props) => (\n    <a href={`/review/${props.list._id}`} style={{ textDecoration: 'none', color: 'black'}}>\n    <tr> \n      <td class=\"col-md-2\"><img src={poster} class=\"img-fluid\"/></td>\n      <td>\n        <b>{props.list.name}</b> <br></br>\n        {props.list.description}\n      </td>\n    </tr>\n    </a>\n  );\n\n  // display reviews\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <h3>My Lists</h3>\n      <table className=\"table table-hover\" style={{ marginTop: 20 }}>\n        <tbody>{listList()}</tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}