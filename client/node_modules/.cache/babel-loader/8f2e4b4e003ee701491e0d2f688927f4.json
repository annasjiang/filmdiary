{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/filmdiary-commit/client/src/components/createList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport poster from './poster.jpg';\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport Input from '@mui/material/Input';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ariaLabel = {\n  'aria-label': 'description'\n};\nexport default function CreateList() {\n  _s();\n  // rating and date\n  const [rating, setRating] = React.useState();\n  const [value1, setValue1] = React.useState(null);\n  const [listName, setListName] = React.useState();\n  const updateRating = newRating => {\n    setRating(newRating);\n    console.log(rating);\n  };\n  const dateRef = React.useRef();\n  const ratingRef = React.useRef();\n  const listNameRef = React.useRef();\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    // if no date entered, default is today's date\n    // const d = isNaN(dateRef.current.value) ? dateRef.current.value : new Date();\n    // var dt = new Date(+d);\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = {\n      ...form\n    };\n    // newList.date = format(dt, 'MM/dd/yyyy');\n    // newList.date = format(dt, 'MM/dd/yyyy');\n    newList.name = listNameRef;\n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      description: \"\"\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"listName\",\n          type: \"text\",\n          value: listName,\n          ref: listNameRef,\n          hidden: true,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"New List\",\n          multiline: true,\n          rows: 1,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          inputProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input text\n          ,\n          InputLabelProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"ADD DESCRIPTION...\",\n          multiline: true,\n          rows: 3,\n          maxRows: 3,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"ADD FILMS...\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-right container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/lists\",\n          class: \"btn btn-light mr-3\",\n          role: \"button\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"LOG\",\n          className: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"hey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateList, \"f3WEWgXbEmAmq/jPjZYbsdJWg2o=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateList;\nvar _c;\n$RefreshReg$(_c, \"CreateList\");","map":{"version":3,"names":["React","useState","useNavigate","poster","Rating","TextField","Button","AdapterDayjs","LocalizationProvider","DatePicker","format","Input","Typography","jsxDEV","_jsxDEV","ariaLabel","CreateList","_s","rating","setRating","value1","setValue1","listName","setListName","updateRating","newRating","console","log","dateRef","useRef","ratingRef","listNameRef","form","setForm","name","description","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newList","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","style","marginTop","marginLeft","marginRight","children","class","type","ref","hidden","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","id","placeholder","multiline","rows","variant","InputProps","disableUnderline","inputProps","fontSize","fontWeight","InputLabelProps","maxRows","label","className","href","role","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/filmdiary-commit/client/src/components/createList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport poster from './poster.jpg';\n\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport Input from '@mui/material/Input';\nimport Typography from '@mui/material/Typography';\n\nconst ariaLabel = { 'aria-label': 'description' };\n\nexport default function CreateList() {\n  // rating and date\n  const [rating, setRating] = React.useState();\n  const [value1, setValue1] = React.useState(null);\n  const [listName, setListName] = React.useState();\n\n  const updateRating = (newRating) => {\n    setRating(newRating);\n    console.log(rating);\n  }\n\n  const dateRef = React.useRef();\n  const ratingRef = React.useRef();\n  const listNameRef = React.useRef();\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    // if no date entered, default is today's date\n    // const d = isNaN(dateRef.current.value) ? dateRef.current.value : new Date();\n    // var dt = new Date(+d);\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = { ...form };\n    // newList.date = format(dt, 'MM/dd/yyyy');\n    // newList.date = format(dt, 'MM/dd/yyyy');\n    newList.name = listNameRef;\n\n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newList),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", description: \"\", });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <form onSubmit={onSubmit}>\n      <div class=\"container\">\n        <input\n          name=\"listName\"\n          type=\"text\"\n          value={listName}\n          ref={listNameRef}\n          hidden\n          readOnly\n        />\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"New List\"\n          multiline\n          rows={1}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n          InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n        />\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"ADD DESCRIPTION...\"\n          multiline\n          rows={3}\n          maxRows={3}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n        />    \n      </div> <br></br>\n      <div class=\"container\"><TextField fullWidth id=\"outlined-basic\" label=\"ADD FILMS...\" variant=\"outlined\" /></div> \n      <br></br>\n      <div className=\"form-group text-right container\">\n        <a href=\"/lists\" class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>\n        <input\n          type=\"submit\"\n          value=\"LOG\"\n          className=\"btn btn-success\"\n        />\n        <Button type=\"submit\">hey</Button>\n      </div>   \n      </form>  \n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}