{"ast":null,"code":"var _jsxFileName = \"/Users/allisonchen/Desktop/filmdiary/client/src/components/moviePage/moviePage.js\";\n// import { Component } from \"react\";\n// import axios from \"axios\";\n// import Spinner from \"../spinner/spinner\";\n// import noPoster from '../../images/noPoster.png'\n// import clock from '../../images/clock.png'\n// import star from '../../images/star.png'\n// import FavButton from \"../favButton/favButton\";\n// import { Row, Col, Image, Container } from 'react-bootstrap';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const POSTER_SIZE = 'w500/'\n\n// class MoviePage extends Component{\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             ID: -1,\n//             data: null,\n//             isFav: false,\n//             imgLoaded: false,\n//             server: process.env.REACT_APP_SERVER_URL || ''\n//         }\n//     }\n\n//     getData = () =>{\n//         //const URL = this.state.server+`/api/movies/getmovie/${this.state.ID}`\n//         const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\"\n\n//         axios.get(URL)\n//         .then((response) => {\n//             let myGenres = ''\n//             for (let i = 0; i < response.data.genres.length-1; i++) {\n//                 myGenres += response.data.genres[i].name + ', '\n//             }\n//             myGenres += response.data.genres[response.data.genres.length-1].name\n\n//             this.setState({\n//                 data: response.data,\n//                 genres: myGenres\n//             })\n//         })\n//         .catch(err =>{\n//             console.log(err)\n//         });\n//     }\n\n//     componentDidMount = () =>{\n//         this.setState({\n//             ID: this.props.match.params.id,\n//             isFav: this.props.location.state.isFav\n//         }, () => {\n//             this.getData()\n//         })\n//     }\n\n//     render(){\n//         if (this.state.data){\n\n//             let poster_url\n//             (this.state.data.poster_path == null) ? poster_url= noPoster : poster_url = 'https://image.tmdb.org/t/p/'+POSTER_SIZE + this.state.data.poster_path\n\n//             return(\n//                 <Container fluid='lg' className='text-center movie'>\n//                     <Row xl={2} lg={1} md={1} sm={1} xs={1}>\n//                             <Col id='img'>\n//                                 <Image \n//                                     thumbnail\n//                                     src={poster_url} \n//                                     fluid className='tile-img' \n//                                     onLoad={() => this.setState({imgLoaded: true})}\n//                                     style={this.state.imgLoaded ? {} : {display: 'none'}}\n//                                 />\n//                             </Col>\n//                             <Col id='info'>\n//                                 <h1 className=\"title\">{this.state.data.title}</h1>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.data.overview}</h4>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.genres}</h4>\n//                                 <br/>\n//                                 <Row>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={clock} alt='clock' style={{height: '2.0em'}}/> {parseInt(this.state.data.runtime/60)}:{this.state.data.runtime%60}</h5>\n//                                     </Col>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={star} alt='star' style={{height: '2.0em'}}/> {this.state.data.vote_average.toFixed(1)}/10</h5>\n//                                     </Col>\n//                                     <Col sm={6}>\n//                                         <div className=\"d-grid gap-2\">\n//                                             {<FavButton isFav={this.state.isFav} id={this.state.ID}/>}\n//                                         </div>\n//                                     </Col>\n//                                 </Row>\n//                             </Col>\n//                      </Row>\n//                 </Container>\n//             )\n//         }\n//         else{\n//             return(<Spinner/>)\n//         }\n\n//     }\n// }\n\n// export default MoviePage\n\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const API_KEY = '79037aea'\n\n// class MoviePage extends Component {\n//     static propTypes = {\n//         match: PropTypes.shape({\n//             params: PropTypes.object,\n//             isExact: PropTypes.bool,\n//             path: PropTypes.string,\n//             url: PropTypes.string\n//         })\n//     }\n\n//     state = { movie: {} }\n\n//     _fetchMovie ({ id }) {\n//         fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\n//         //const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\" + id\n//         fetch(URL)\n//         .then(res => res.json())\n//         .then( movie => {\n//             console.log ({ movie })\n//             this.setState({movie})\n//         })\n//     }\n\n//     _goBack () {\n//         window.history.back()\n//     }\n\n//     componentDidMount() {\n//         console.log(this.props)\n//         const { movieId } = this.props.match.params\n//         this._fetchMovie({ id: movieId })\n\n//     }\n\n//     render (){\n//         const {Title, Poster, Actors, Metascore, Plot} = this.state.movie\n//         return(\n//             <div>\n//                 {/* <ButtonBackToHome /> */}\n//                 <br/>\n//                 <h1>{Title}</h1>\n//                 <img\n//                     alt={Title}\n//                     src={Poster}\n//                 />\n//                 <h2>{Plot}</h2>\n//                 <h3>{Actors}</h3>\n//                 <span>{Metascore}</span>\n//                 {/* <span style={{fontSize:'2em'}}>{movieItem.title}  </span> */}\n//             </div>\n//         )\n//     }\n// }\n\n// export default MoviePage\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Movie } from '../movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MoviesPage extends Component {\n  render() {\n    const {\n      movies\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MoviesList\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MoviesList-item\",\n          children: /*#__PURE__*/_jsxDEV(Movie, {\n            id: movie.imdbID,\n            title: movie.Title,\n            poster: movie.Poster,\n            year: movie.Year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)\n        }, movie.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this);\n  }\n}\nMoviesPage.propTypes = {\n  movies: PropTypes.array\n};\nexport default MoviesPage;","map":{"version":3,"names":["React","Component","PropTypes","Movie","jsxDEV","_jsxDEV","MoviesPage","render","movies","props","className","children","map","movie","id","imdbID","title","Title","poster","Poster","year","Year","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","array"],"sources":["/Users/allisonchen/Desktop/filmdiary/client/src/components/moviePage/moviePage.js"],"sourcesContent":["// import { Component } from \"react\";\n// import axios from \"axios\";\n// import Spinner from \"../spinner/spinner\";\n// import noPoster from '../../images/noPoster.png'\n// import clock from '../../images/clock.png'\n// import star from '../../images/star.png'\n// import FavButton from \"../favButton/favButton\";\n// import { Row, Col, Image, Container } from 'react-bootstrap';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const POSTER_SIZE = 'w500/'\n\n// class MoviePage extends Component{\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             ID: -1,\n//             data: null,\n//             isFav: false,\n//             imgLoaded: false,\n//             server: process.env.REACT_APP_SERVER_URL || ''\n//         }\n//     }\n\n//     getData = () =>{\n//         //const URL = this.state.server+`/api/movies/getmovie/${this.state.ID}`\n//         const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\"\n\n//         axios.get(URL)\n//         .then((response) => {\n//             let myGenres = ''\n//             for (let i = 0; i < response.data.genres.length-1; i++) {\n//                 myGenres += response.data.genres[i].name + ', '\n//             }\n//             myGenres += response.data.genres[response.data.genres.length-1].name\n            \n//             this.setState({\n//                 data: response.data,\n//                 genres: myGenres\n//             })\n//         })\n//         .catch(err =>{\n//             console.log(err)\n//         });\n//     }\n\n//     componentDidMount = () =>{\n//         this.setState({\n//             ID: this.props.match.params.id,\n//             isFav: this.props.location.state.isFav\n//         }, () => {\n//             this.getData()\n//         })\n//     }\n\n//     render(){\n//         if (this.state.data){\n\n//             let poster_url\n//             (this.state.data.poster_path == null) ? poster_url= noPoster : poster_url = 'https://image.tmdb.org/t/p/'+POSTER_SIZE + this.state.data.poster_path\n\n//             return(\n//                 <Container fluid='lg' className='text-center movie'>\n//                     <Row xl={2} lg={1} md={1} sm={1} xs={1}>\n//                             <Col id='img'>\n//                                 <Image \n//                                     thumbnail\n//                                     src={poster_url} \n//                                     fluid className='tile-img' \n//                                     onLoad={() => this.setState({imgLoaded: true})}\n//                                     style={this.state.imgLoaded ? {} : {display: 'none'}}\n//                                 />\n//                             </Col>\n//                             <Col id='info'>\n//                                 <h1 className=\"title\">{this.state.data.title}</h1>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.data.overview}</h4>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.genres}</h4>\n//                                 <br/>\n//                                 <Row>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={clock} alt='clock' style={{height: '2.0em'}}/> {parseInt(this.state.data.runtime/60)}:{this.state.data.runtime%60}</h5>\n//                                     </Col>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={star} alt='star' style={{height: '2.0em'}}/> {this.state.data.vote_average.toFixed(1)}/10</h5>\n//                                     </Col>\n//                                     <Col sm={6}>\n//                                         <div className=\"d-grid gap-2\">\n//                                             {<FavButton isFav={this.state.isFav} id={this.state.ID}/>}\n//                                         </div>\n//                                     </Col>\n//                                 </Row>\n//                             </Col>\n//                      </Row>\n//                 </Container>\n//             )\n//         }\n//         else{\n//             return(<Spinner/>)\n//         }\n        \n//     }\n// }\n\n// export default MoviePage\n\n\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const API_KEY = '79037aea'\n\n// class MoviePage extends Component {\n//     static propTypes = {\n//         match: PropTypes.shape({\n//             params: PropTypes.object,\n//             isExact: PropTypes.bool,\n//             path: PropTypes.string,\n//             url: PropTypes.string\n//         })\n//     }\n\n//     state = { movie: {} }\n\n\n//     _fetchMovie ({ id }) {\n//         fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\n//         //const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\" + id\n//         fetch(URL)\n//         .then(res => res.json())\n//         .then( movie => {\n//             console.log ({ movie })\n//             this.setState({movie})\n//         })\n//     }\n\n//     _goBack () {\n//         window.history.back()\n//     }\n\n//     componentDidMount() {\n//         console.log(this.props)\n//         const { movieId } = this.props.match.params\n//         this._fetchMovie({ id: movieId })\n        \n//     }\n\n//     render (){\n//         const {Title, Poster, Actors, Metascore, Plot} = this.state.movie\n//         return(\n//             <div>\n//                 {/* <ButtonBackToHome /> */}\n//                 <br/>\n//                 <h1>{Title}</h1>\n//                 <img\n//                     alt={Title}\n//                     src={Poster}\n//                 />\n//                 <h2>{Plot}</h2>\n//                 <h3>{Actors}</h3>\n//                 <span>{Metascore}</span>\n//                 {/* <span style={{fontSize:'2em'}}>{movieItem.title}  </span> */}\n//             </div>\n//         )\n//     }\n// }\n\n// export default MoviePage\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Movie} from '../movie'\n\nclass MoviesPage extends Component{\n    static propTypes = {\n        movies: PropTypes.array,\n    }\n    render(){\n        const {movies} =this.props\n        return (\n            <div className='MoviesList'>\n                {\n                    movies.map(movie => {\n                        return (\n                            <div key={movie.imdbID} className='MoviesList-item'>\n                                <Movie\n                                    id={movie.imdbID} \n                                    title={movie.Title}\n                                    poster={movie.Poster}\n                                    year={movie.Year}\n                                />\n                            </div>\n\n                        )\n                    })                                                              \n                }\n            </div>\n        ) \n    }\n}\n\nexport default MoviesPage"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,KAAK,QAAO,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,SAASL,SAAS;EAI9BM,MAAMA,CAAA,EAAE;IACJ,MAAM;MAACC;IAAM,CAAC,GAAE,IAAI,CAACC,KAAK;IAC1B,oBACIJ,OAAA;MAAKK,SAAS,EAAC,YAAY;MAAAC,QAAA,EAEnBH,MAAM,CAACI,GAAG,CAACC,KAAK,IAAI;QAChB,oBACIR,OAAA;UAAwBK,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC/CN,OAAA,CAACF,KAAK;YACFW,EAAE,EAAED,KAAK,CAACE,MAAO;YACjBC,KAAK,EAAEH,KAAK,CAACI,KAAM;YACnBC,MAAM,EAAEL,KAAK,CAACM,MAAO;YACrBC,IAAI,EAAEP,KAAK,CAACQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACnB,GANIZ,KAAK,CAACE,MAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOhB;MAGd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ;EAEd;AACJ;AA1BMnB,UAAU,CACLoB,SAAS,GAAG;EACflB,MAAM,EAAEN,SAAS,CAACyB;AACtB,CAAC;AAyBL,eAAerB,UAAU"},"metadata":{},"sourceType":"module"}