{"ast":null,"code":"var _jsxFileName = \"/Users/allisonchen/Desktop/filmdiary/client/src/components/moviePage/moviePage.js\";\n// import { Component } from \"react\";\n// import axios from \"axios\";\n// import Spinner from \"../spinner/spinner\";\n// import noPoster from '../../images/noPoster.png'\n// import clock from '../../images/clock.png'\n// import star from '../../images/star.png'\n// import FavButton from \"../favButton/favButton\";\n// import { Row, Col, Image, Container } from 'react-bootstrap';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const POSTER_SIZE = 'w500/'\n\n// class MoviePage extends Component{\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             ID: -1,\n//             data: null,\n//             isFav: false,\n//             imgLoaded: false,\n//             server: process.env.REACT_APP_SERVER_URL || ''\n//         }\n//     }\n\n//     getData = () =>{\n//         //const URL = this.state.server+`/api/movies/getmovie/${this.state.ID}`\n//         const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\"\n\n//         axios.get(URL)\n//         .then((response) => {\n//             let myGenres = ''\n//             for (let i = 0; i < response.data.genres.length-1; i++) {\n//                 myGenres += response.data.genres[i].name + ', '\n//             }\n//             myGenres += response.data.genres[response.data.genres.length-1].name\n\n//             this.setState({\n//                 data: response.data,\n//                 genres: myGenres\n//             })\n//         })\n//         .catch(err =>{\n//             console.log(err)\n//         });\n//     }\n\n//     componentDidMount = () =>{\n//         this.setState({\n//             ID: this.props.match.params.id,\n//             isFav: this.props.location.state.isFav\n//         }, () => {\n//             this.getData()\n//         })\n//     }\n\n//     render(){\n//         if (this.state.data){\n\n//             let poster_url\n//             (this.state.data.poster_path == null) ? poster_url= noPoster : poster_url = 'https://image.tmdb.org/t/p/'+POSTER_SIZE + this.state.data.poster_path\n\n//             return(\n//                 <Container fluid='lg' className='text-center movie'>\n//                     <Row xl={2} lg={1} md={1} sm={1} xs={1}>\n//                             <Col id='img'>\n//                                 <Image \n//                                     thumbnail\n//                                     src={poster_url} \n//                                     fluid className='tile-img' \n//                                     onLoad={() => this.setState({imgLoaded: true})}\n//                                     style={this.state.imgLoaded ? {} : {display: 'none'}}\n//                                 />\n//                             </Col>\n//                             <Col id='info'>\n//                                 <h1 className=\"title\">{this.state.data.title}</h1>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.data.overview}</h4>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.genres}</h4>\n//                                 <br/>\n//                                 <Row>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={clock} alt='clock' style={{height: '2.0em'}}/> {parseInt(this.state.data.runtime/60)}:{this.state.data.runtime%60}</h5>\n//                                     </Col>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={star} alt='star' style={{height: '2.0em'}}/> {this.state.data.vote_average.toFixed(1)}/10</h5>\n//                                     </Col>\n//                                     <Col sm={6}>\n//                                         <div className=\"d-grid gap-2\">\n//                                             {<FavButton isFav={this.state.isFav} id={this.state.ID}/>}\n//                                         </div>\n//                                     </Col>\n//                                 </Row>\n//                             </Col>\n//                      </Row>\n//                 </Container>\n//             )\n//         }\n//         else{\n//             return(<Spinner/>)\n//         }\n\n//     }\n// }\n\n// export default MoviePage\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MoviePage extends Component {\n  render() {\n    const {\n      id,\n      poster,\n      title,\n      year\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${id}`,\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"imagen\",\n            src: poster,\n            alt: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title is-4\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle is-6\",\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n}\nMoviePage.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  year: PropTypes.string,\n  poster: PropTypes.string\n};","map":{"version":3,"names":["React","Component","PropTypes","Link","jsxDEV","_jsxDEV","MoviePage","render","id","poster","title","year","props","to","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","string"],"sources":["/Users/allisonchen/Desktop/filmdiary/client/src/components/moviePage/moviePage.js"],"sourcesContent":["// import { Component } from \"react\";\n// import axios from \"axios\";\n// import Spinner from \"../spinner/spinner\";\n// import noPoster from '../../images/noPoster.png'\n// import clock from '../../images/clock.png'\n// import star from '../../images/star.png'\n// import FavButton from \"../favButton/favButton\";\n// import { Row, Col, Image, Container } from 'react-bootstrap';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const POSTER_SIZE = 'w500/'\n\n// class MoviePage extends Component{\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             ID: -1,\n//             data: null,\n//             isFav: false,\n//             imgLoaded: false,\n//             server: process.env.REACT_APP_SERVER_URL || ''\n//         }\n//     }\n\n//     getData = () =>{\n//         //const URL = this.state.server+`/api/movies/getmovie/${this.state.ID}`\n//         const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\"\n\n//         axios.get(URL)\n//         .then((response) => {\n//             let myGenres = ''\n//             for (let i = 0; i < response.data.genres.length-1; i++) {\n//                 myGenres += response.data.genres[i].name + ', '\n//             }\n//             myGenres += response.data.genres[response.data.genres.length-1].name\n            \n//             this.setState({\n//                 data: response.data,\n//                 genres: myGenres\n//             })\n//         })\n//         .catch(err =>{\n//             console.log(err)\n//         });\n//     }\n\n//     componentDidMount = () =>{\n//         this.setState({\n//             ID: this.props.match.params.id,\n//             isFav: this.props.location.state.isFav\n//         }, () => {\n//             this.getData()\n//         })\n//     }\n\n//     render(){\n//         if (this.state.data){\n\n//             let poster_url\n//             (this.state.data.poster_path == null) ? poster_url= noPoster : poster_url = 'https://image.tmdb.org/t/p/'+POSTER_SIZE + this.state.data.poster_path\n\n//             return(\n//                 <Container fluid='lg' className='text-center movie'>\n//                     <Row xl={2} lg={1} md={1} sm={1} xs={1}>\n//                             <Col id='img'>\n//                                 <Image \n//                                     thumbnail\n//                                     src={poster_url} \n//                                     fluid className='tile-img' \n//                                     onLoad={() => this.setState({imgLoaded: true})}\n//                                     style={this.state.imgLoaded ? {} : {display: 'none'}}\n//                                 />\n//                             </Col>\n//                             <Col id='info'>\n//                                 <h1 className=\"title\">{this.state.data.title}</h1>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.data.overview}</h4>\n//                                 <br/>\n//                                 <h4 className=\"title\">{this.state.genres}</h4>\n//                                 <br/>\n//                                 <Row>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={clock} alt='clock' style={{height: '2.0em'}}/> {parseInt(this.state.data.runtime/60)}:{this.state.data.runtime%60}</h5>\n//                                     </Col>\n//                                     <Col sm={3} className='inline-pic'>\n//                                         <h5> <img src={star} alt='star' style={{height: '2.0em'}}/> {this.state.data.vote_average.toFixed(1)}/10</h5>\n//                                     </Col>\n//                                     <Col sm={6}>\n//                                         <div className=\"d-grid gap-2\">\n//                                             {<FavButton isFav={this.state.isFav} id={this.state.ID}/>}\n//                                         </div>\n//                                     </Col>\n//                                 </Row>\n//                             </Col>\n//                      </Row>\n//                 </Container>\n//             )\n//         }\n//         else{\n//             return(<Spinner/>)\n//         }\n        \n//     }\n// }\n\n// export default MoviePage\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport class MoviePage extends Component {\n    static propTypes = {\n        id: PropTypes.string,\n        title: PropTypes.string,\n        year: PropTypes.string,\n        poster: PropTypes.string\n    }\n    render (){\n        const {id, poster, title, year} =this.props\n        \n        return(\n            <Link to={`/detail/${id}`} className=\"card\">\n                <div className=\"card-image\">\n                    <figure className=\"image\">\n                        <img className=\"imagen\"\n                            src={poster} \n                            alt={title}\n                        />\n                    </figure>\n                </div>\n                <div className=\"card-content\">\n                    <div className=\"media\">\n                        <div className=\"media-content\">\n                            <p className=\"title is-4\">{title}</p>\n                            <p className=\"subtitle is-6\">{year}</p>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        )\n    }\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,SAAS,SAASL,SAAS,CAAC;EAOrCM,MAAMA,CAAA,EAAG;IACL,MAAM;MAACC,EAAE;MAAEC,MAAM;MAAEC,KAAK;MAAEC;IAAI,CAAC,GAAE,IAAI,CAACC,KAAK;IAE3C,oBACIP,OAAA,CAACF,IAAI;MAACU,EAAE,EAAG,WAAUL,EAAG,EAAE;MAACM,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACvCV,OAAA;QAAKS,SAAS,EAAC,YAAY;QAAAC,QAAA,eACvBV,OAAA;UAAQS,SAAS,EAAC,OAAO;UAAAC,QAAA,eACrBV,OAAA;YAAKS,SAAS,EAAC,QAAQ;YACnBE,GAAG,EAAEP,MAAO;YACZQ,GAAG,EAAEP;UAAM;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACb;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eACNhB,OAAA;QAAKS,SAAS,EAAC,cAAc;QAAAC,QAAA,eACzBV,OAAA;UAAKS,SAAS,EAAC,OAAO;UAAAC,QAAA,eAClBV,OAAA;YAAKS,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1BV,OAAA;cAAGS,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEL;YAAK;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACrChB,OAAA;cAAGS,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEJ;YAAI;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACrC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH;EAEf;AACJ;AA/Baf,SAAS,CACXgB,SAAS,GAAG;EACfd,EAAE,EAAEN,SAAS,CAACqB,MAAM;EACpBb,KAAK,EAAER,SAAS,CAACqB,MAAM;EACvBZ,IAAI,EAAET,SAAS,CAACqB,MAAM;EACtBd,MAAM,EAAEP,SAAS,CAACqB;AACtB,CAAC"},"metadata":{},"sourceType":"module"}