{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/search/client/src/components/search/movie.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport defaultposter from './defaultposter.jpeg';\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = props => {\n  _s();\n  const {\n    title,\n    poster_path,\n    vote_average,\n    id,\n    release_date\n  } = props.item;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const year = release_date.substring(0, 4);\n\n  // form\n  const [form, setForm] = useState({\n    selectedtitle: \"\",\n    selectedposter: \"\",\n    selectedid: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    // if no date entered, default is today's date\n    const d = isNaN(dateRef.current.value) ? dateRef.current.value : new Date();\n    var dt = new Date(+d);\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = {\n      ...form\n    };\n    newPerson.date = format(dt, 'MM/dd/yyyy');\n    newPerson.rating = ratingRef.current.value;\n    await fetch(\"http://localhost:4000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      review: \"\",\n      date: \"\",\n      rating: \"\"\n    });\n    navigate(\"/\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      class: \"ml-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        class: \"col-sm-1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          style: {\n            height: 80\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        class: \"ml-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-muted\",\n          children: [\"(\", year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCard, \"ZyP5dAeyft7ZiBo7L50Nu2hqB+4=\", true);\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","defaultposter","classes","truncStr","jsxDEV","_jsxDEV","MovieCard","props","_s","title","poster_path","vote_average","id","release_date","item","poster","year","substring","form","setForm","useState","selectedtitle","selectedposter","selectedid","navigate","useNavigate","updateForm","value","prev","onSubmit","e","preventDefault","d","isNaN","dateRef","current","Date","dt","newPerson","date","format","rating","ratingRef","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","name","review","class","children","src","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/search/client/src/components/search/movie.js"],"sourcesContent":["import React from \"react\";\nimport defaultposter from './defaultposter.jpeg';\n\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\n\nconst MovieCard = props => {\n  const { title, poster_path, vote_average, id, release_date} = props.item;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const year = release_date.substring(0, 4);\n\n    // form\n    const [form, setForm] = useState({\n      selectedtitle: \"\",\n      selectedposter: \"\",\n      selectedid: \"\",\n    });\n    \n    const navigate = useNavigate();\n  \n    // These methods will update the state properties.\n    function updateForm(value) {\n      return setForm((prev) => {\n        return { ...prev, ...value };\n      });\n    }\n  \n    // This function will handle the submission.\n    async function onSubmit(e) {\n      e.preventDefault();\n      // if no date entered, default is today's date\n      const d = isNaN(dateRef.current.value) ? dateRef.current.value : new Date();\n      var dt = new Date(+d);\n  \n      // When a post request is sent to the create url, we'll add a new record to the database.\n      const newPerson = { ...form };\n      newPerson.date = format(dt, 'MM/dd/yyyy');\n      newPerson.rating = ratingRef.current.value;\n  \n      await fetch(\"http://localhost:4000/record/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newPerson),\n      })\n      .catch(error => {\n        window.alert(error);\n        return;\n      });\n  \n      setForm({ name: \"\", review: \"\", date: \"\", rating: \"\" });\n      navigate(\"/\");\n    }\n\n  return (\n    <div class=\"table-responsive\">\n        <tr class=\"ml-auto\"> \n          <td class=\"col-sm-1\"><img src={poster} style={{height: 80}}></img></td>\n          <td class=\"ml-auto\">\n            <b>{title}</b> <p class=\"text-muted\">({year})</p>\n          </td>\n        </tr>\n    </div>\n  );\n\n};\n\nexport default MovieCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}