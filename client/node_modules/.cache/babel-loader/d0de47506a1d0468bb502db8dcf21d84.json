{"ast":null,"code":"var _jsxFileName = \"/Users/allisonchen/Desktop/filmdiary/client/src/components/moviePage/moviePage.js\";\n// // import { Component } from \"react\";\n// // import axios from \"axios\";\n// // import Spinner from \"../spinner/spinner\";\n// // import noPoster from '../../images/noPoster.png'\n// // import clock from '../../images/clock.png'\n// // import star from '../../images/star.png'\n// // import FavButton from \"../favButton/favButton\";\n// // import { Row, Col, Image, Container } from 'react-bootstrap';\n// // import './moviePage.css'\n\n// // const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// // const POSTER_SIZE = 'w500/'\n\n// // class MoviePage extends Component{\n// //     constructor(props) {\n// //         super(props)\n// //         this.state = {\n// //             ID: -1,\n// //             data: null,\n// //             isFav: false,\n// //             imgLoaded: false,\n// //             server: process.env.REACT_APP_SERVER_URL || ''\n// //         }\n// //     }\n\n// //     getData = () =>{\n// //         //const URL = this.state.server+`/api/movies/getmovie/${this.state.ID}`\n// //         const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\"\n\n// //         axios.get(URL)\n// //         .then((response) => {\n// //             let myGenres = ''\n// //             for (let i = 0; i < response.data.genres.length-1; i++) {\n// //                 myGenres += response.data.genres[i].name + ', '\n// //             }\n// //             myGenres += response.data.genres[response.data.genres.length-1].name\n\n// //             this.setState({\n// //                 data: response.data,\n// //                 genres: myGenres\n// //             })\n// //         })\n// //         .catch(err =>{\n// //             console.log(err)\n// //         });\n// //     }\n\n// //     componentDidMount = () =>{\n// //         this.setState({\n// //             ID: this.props.match.params.id,\n// //             isFav: this.props.location.state.isFav\n// //         }, () => {\n// //             this.getData()\n// //         })\n// //     }\n\n// //     render(){\n// //         if (this.state.data){\n\n// //             let poster_url\n// //             (this.state.data.poster_path == null) ? poster_url= noPoster : poster_url = 'https://image.tmdb.org/t/p/'+POSTER_SIZE + this.state.data.poster_path\n\n// //             return(\n// //                 <Container fluid='lg' className='text-center movie'>\n// //                     <Row xl={2} lg={1} md={1} sm={1} xs={1}>\n// //                             <Col id='img'>\n// //                                 <Image \n// //                                     thumbnail\n// //                                     src={poster_url} \n// //                                     fluid className='tile-img' \n// //                                     onLoad={() => this.setState({imgLoaded: true})}\n// //                                     style={this.state.imgLoaded ? {} : {display: 'none'}}\n// //                                 />\n// //                             </Col>\n// //                             <Col id='info'>\n// //                                 <h1 className=\"title\">{this.state.data.title}</h1>\n// //                                 <br/>\n// //                                 <h4 className=\"title\">{this.state.data.overview}</h4>\n// //                                 <br/>\n// //                                 <h4 className=\"title\">{this.state.genres}</h4>\n// //                                 <br/>\n// //                                 <Row>\n// //                                     <Col sm={3} className='inline-pic'>\n// //                                         <h5> <img src={clock} alt='clock' style={{height: '2.0em'}}/> {parseInt(this.state.data.runtime/60)}:{this.state.data.runtime%60}</h5>\n// //                                     </Col>\n// //                                     <Col sm={3} className='inline-pic'>\n// //                                         <h5> <img src={star} alt='star' style={{height: '2.0em'}}/> {this.state.data.vote_average.toFixed(1)}/10</h5>\n// //                                     </Col>\n// //                                     <Col sm={6}>\n// //                                         <div className=\"d-grid gap-2\">\n// //                                             {<FavButton isFav={this.state.isFav} id={this.state.ID}/>}\n// //                                         </div>\n// //                                     </Col>\n// //                                 </Row>\n// //                             </Col>\n// //                      </Row>\n// //                 </Container>\n// //             )\n// //         }\n// //         else{\n// //             return(<Spinner/>)\n// //         }\n\n// //     }\n// // }\n\n// // export default MoviePage\n\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const API_KEY = '79037aea'\n\n// class MoviePage extends Component {\n//     static propTypes = {\n//         match: PropTypes.shape({\n//             params: PropTypes.object,\n//             isExact: PropTypes.bool,\n//             path: PropTypes.string,\n//             url: PropTypes.string\n//         })\n//     }\n\n//     state = { movie: {} }\n\n//     _fetchMovie ({ id }) {\n//         //fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\n//         //const URL = \"https://api.themoviedb.org/3/search/movie?api_key=\" + apikey + \"&language=en-US&query=\" + id\n//         fetch(\"https://api.themoviedb.org/3/search/movie?api_key=\" + apikey + \"&language=en-US&query=\" + id)\n//         .then(res => res.json())\n//         .then( movie => {\n//             console.log ({ movie })\n//             this.setState({movie})\n//         })\n//     }\n\n//     _goBack () {\n//         window.history.back()\n//     }\n\n//     componentDidMount() {\n//         console.log(this.props)\n//         const { movieId } = this.props.match.params\n//         this._fetchMovie({ id: movieId })\n\n//     }\n\n//     search() {\n// \t\tif (this.state.search_results.length === 0)\n// \t\t{\n// \t\t\treturn <div className=\"noResult mx-5\"><br/><p>No results Found</p></div>;\n// \t\t}\n// \t\telse\n// \t\t{\n// \t\t\tvar list = this.state.search_results.map(movie =>\n// \t\t\t<div key={movie.id} className=\"movieContent mx-5\">\n// \t\t\t\t{(movie.poster_path!=null)?\n// \t\t\t\t\t(<div className=\"poster\">\n//                         HELLO\n// \t\t\t\t\t\t<img src={\"https://image.tmdb.org/t/p/w185\"+movie.poster_path+\"\"} alt={movie.title}/>\n// \t\t\t\t\t</div>):\n// \t\t\t\t\t(<div className=\"poster\"/>)\n// \t\t\t\t}\n// \t\t\t\t<div className=\"movieData\">\n// \t\t\t\t\t<span>\n// \t\t\t\t\t\t<span style={{fontSize:'2em'}}>{movie.title}  </span>\n// \t\t\t\t\t\t<br/>\n// \t\t\t\t\t\t<span style={{fontStyle: \"italic\", color: \"grey\", fontSize:\"1.25em\"}}>{movie.genre_ids.map(gId =>{\n// \t\t\t\t\t\t\tvar genre = \"\"\n// \t\t\t\t\t\t\tthis.genres.forEach(function(value){\n// \t\t\t\t\t\t\t\tif (value.id === gId) {\n// \t\t\t\t\t\t\t\t\tgenre = value.name;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\treturn genre+\" \"\n// \t\t\t\t\t\t})}</span>\n// \t\t\t\t\t</span><br/>\n// \t\t\t\t\t<p>{movie.overview}</p>\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<button onClick={this.addToFav} id={movie.id} type=\"button\" className=\"btn, btn-primary\">Add to Favorites</button>\n// \t\t\t\t</div>\n// \t\t\t</div>);\n// \t\t\treturn list\n// \t\t}\n// \t}\n\n//     render (){\n//     //     const {Title, Poster, Actors, Metascore, Plot} = this.state.movie\n//     //     return(\n//     //         <div>\n//     //             {/* <ButtonBackToHome /> */}\n//     //             <br/>\n//     //             <h1>{Title}</h1>\n//     //             <img\n//     //                 alt={Title}\n//     //                 src={Poster}\n//     //             />\n//     //             <h2>{Plot}</h2>\n//     //             <h3>{Actors}</h3>\n//     //             <span>{Metascore}</span>\n//     //             {/* <span style={{fontSize:'2em'}}>{movieItem.title}  </span> */}\n\n//     //             <br/>\n// \t// \t\t\t{this.getMovieSearch()}\n// \t// \t\t\t<br/><br/><br/>\n//     //         </div>\n//     //     )\n//     // }\n//     return (\n//         <div style={{padding:10}}>\n//             <div className=\"searchbar mx-3\">\n//                 <form className=\"form-inline\" onSubmit={this.onSubmit}>\n//                     <h3 className=\"mt-2\">Search Movies:</h3>\n//                     <div className=\"form-group\">\n//                         <input\ttype=\"text\"\n//                                 className=\"form-control mx-2\"\n//                                 value={this.state.search_value}\n//                                 onChange={this.onChangeSearchValue}\n//                                 />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label><button type=\"submit\" className=\"btn btn-primary\" >Search</button></label>\n//                     </div>\n//                     </form>\n//             </div>\n//             <hr className=\"myHR\"/>\n//             <br/>\n//             {this.search()}\n//             <br/><br/><br/>\n//         </div>\n//         \t\t);\n//             }\n\n// }\n\n// export default MoviePage\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\nexport default class MoviePage extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchValue = this.onChangeSearchValue.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getMovieSearch = this.getMovieSearch.bind(this);\n    this.addToFav = this.addToFav.bind(this);\n    this.getGenres();\n    this.state = {\n      search_value: '',\n      search_results: []\n    };\n  }\n  async getGenres() {\n    var genreList = [];\n    await fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + apikey + \"&language=en-US\").then(response => response.json()).then(function (data) {\n      genreList = data[\"genres\"];\n    });\n    this.genres = genreList;\n  }\n  onChangeSearchValue(e) {\n    this.setState({\n      search_value: e.target.value\n    });\n  }\n  async onSubmit(e) {\n    e.preventDefault();\n    var searchList = [];\n    var searchValue = this.state.search_value;\n    console.log(`Search Made for: ${searchValue}`);\n    await fetch(\"https://api.themoviedb.org/3/search/movie?api_key=\" + apikey + \"&language=en-US&query=\" + searchValue + \" &page=\" + 1 + \"&include_adult=false\").then(response => response.json()).then(function (data) {\n      if (data[\"status_code\"]) {\n        alert(\"error\");\n      } else {\n        searchList = data.results;\n      }\n    });\n    this.setState({\n      search_value: '',\n      search_results: searchList\n    });\n  }\n  getMovieSearch() {\n    if (this.state.search_results.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noResult mx-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No results Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this);\n    } else {\n      var list = this.state.search_results.map(movieItem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieContent mx-5\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [movieItem.poster_path != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/moviePage',\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://image.tmdb.org/t/p/w185\" + movieItem.poster_path + \"\",\n              alt: movieItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movieItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieData\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: '/moviePage',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \" Details \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '2em'\n              },\n              children: [movieItem.title, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontStyle: \"italic\",\n                color: \"grey\",\n                fontSize: \"1.25em\"\n              },\n              children: movieItem.genre_ids.map(gId => {\n                var genre = \"\";\n                this.genres.forEach(function (value) {\n                  if (value.id === gId) {\n                    genre = value.name;\n                  }\n                });\n                return genre + \" \";\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movieItem.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addToFav,\n            id: movieItem.id,\n            type: \"button\",\n            className: \"btn, btn-primary\",\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 5\n        }, this)]\n      }, movieItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 4\n      }, this));\n      return list;\n    }\n  }\n  async addToFav(e) {\n    e.preventDefault();\n    console.log(`id added to favourites: ${e.target.id}`);\n    await fetch('https://api.themoviedb.org/3/movie/' + e.target.id + '?api_key=' + apikey + '&language=en-US').then(response => response.json()).then(function (data) {\n      if (data[\"status_code\"]) {\n        alert(\"error\" + data[\"status_code\"] + \": \" + data[\"status_message\"]);\n      } else {\n        const newMovie = {\n          _id: data.id,\n          title: data.title,\n          overview: data.overview,\n          poster_path: data.poster_path,\n          genres: data.genres\n        };\n        axios.post('http://localhost:4000/movies/add', newMovie).then(res => console.log(res.data));\n      }\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchbar mx-10\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-inline\",\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mt-2\",\n            children: \"Search Movies:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control mx-2\",\n              value: this.state.search_value,\n              onChange: this.onChangeSearchValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"myHR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 5\n      }, this), this.getMovieSearch(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Link","axios","jsxDEV","_jsxDEV","apikey","MoviePage","constructor","props","onChangeSearchValue","bind","onSubmit","getMovieSearch","addToFav","getGenres","state","search_value","search_results","genreList","fetch","then","response","json","data","genres","e","setState","target","value","preventDefault","searchList","searchValue","console","log","alert","results","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","list","map","movieItem","display","justifyContent","alignItems","poster_path","to","src","alt","title","style","fontSize","fontStyle","color","genre_ids","gId","genre","forEach","id","name","overview","onClick","type","newMovie","_id","post","res","render","padding","onChange"],"sources":["/Users/allisonchen/Desktop/filmdiary/client/src/components/moviePage/moviePage.js"],"sourcesContent":["// // import { Component } from \"react\";\n// // import axios from \"axios\";\n// // import Spinner from \"../spinner/spinner\";\n// // import noPoster from '../../images/noPoster.png'\n// // import clock from '../../images/clock.png'\n// // import star from '../../images/star.png'\n// // import FavButton from \"../favButton/favButton\";\n// // import { Row, Col, Image, Container } from 'react-bootstrap';\n// // import './moviePage.css'\n\n// // const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// // const POSTER_SIZE = 'w500/'\n\n// // class MoviePage extends Component{\n// //     constructor(props) {\n// //         super(props)\n// //         this.state = {\n// //             ID: -1,\n// //             data: null,\n// //             isFav: false,\n// //             imgLoaded: false,\n// //             server: process.env.REACT_APP_SERVER_URL || ''\n// //         }\n// //     }\n\n// //     getData = () =>{\n// //         //const URL = this.state.server+`/api/movies/getmovie/${this.state.ID}`\n// //         const URL = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\"\n\n// //         axios.get(URL)\n// //         .then((response) => {\n// //             let myGenres = ''\n// //             for (let i = 0; i < response.data.genres.length-1; i++) {\n// //                 myGenres += response.data.genres[i].name + ', '\n// //             }\n// //             myGenres += response.data.genres[response.data.genres.length-1].name\n            \n// //             this.setState({\n// //                 data: response.data,\n// //                 genres: myGenres\n// //             })\n// //         })\n// //         .catch(err =>{\n// //             console.log(err)\n// //         });\n// //     }\n\n// //     componentDidMount = () =>{\n// //         this.setState({\n// //             ID: this.props.match.params.id,\n// //             isFav: this.props.location.state.isFav\n// //         }, () => {\n// //             this.getData()\n// //         })\n// //     }\n\n// //     render(){\n// //         if (this.state.data){\n\n// //             let poster_url\n// //             (this.state.data.poster_path == null) ? poster_url= noPoster : poster_url = 'https://image.tmdb.org/t/p/'+POSTER_SIZE + this.state.data.poster_path\n\n// //             return(\n// //                 <Container fluid='lg' className='text-center movie'>\n// //                     <Row xl={2} lg={1} md={1} sm={1} xs={1}>\n// //                             <Col id='img'>\n// //                                 <Image \n// //                                     thumbnail\n// //                                     src={poster_url} \n// //                                     fluid className='tile-img' \n// //                                     onLoad={() => this.setState({imgLoaded: true})}\n// //                                     style={this.state.imgLoaded ? {} : {display: 'none'}}\n// //                                 />\n// //                             </Col>\n// //                             <Col id='info'>\n// //                                 <h1 className=\"title\">{this.state.data.title}</h1>\n// //                                 <br/>\n// //                                 <h4 className=\"title\">{this.state.data.overview}</h4>\n// //                                 <br/>\n// //                                 <h4 className=\"title\">{this.state.genres}</h4>\n// //                                 <br/>\n// //                                 <Row>\n// //                                     <Col sm={3} className='inline-pic'>\n// //                                         <h5> <img src={clock} alt='clock' style={{height: '2.0em'}}/> {parseInt(this.state.data.runtime/60)}:{this.state.data.runtime%60}</h5>\n// //                                     </Col>\n// //                                     <Col sm={3} className='inline-pic'>\n// //                                         <h5> <img src={star} alt='star' style={{height: '2.0em'}}/> {this.state.data.vote_average.toFixed(1)}/10</h5>\n// //                                     </Col>\n// //                                     <Col sm={6}>\n// //                                         <div className=\"d-grid gap-2\">\n// //                                             {<FavButton isFav={this.state.isFav} id={this.state.ID}/>}\n// //                                         </div>\n// //                                     </Col>\n// //                                 </Row>\n// //                             </Col>\n// //                      </Row>\n// //                 </Container>\n// //             )\n// //         }\n// //         else{\n// //             return(<Spinner/>)\n// //         }\n        \n// //     }\n// // }\n\n// // export default MoviePage\n\n\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import './moviePage.css'\n\n// const apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\n// const API_KEY = '79037aea'\n\n// class MoviePage extends Component {\n//     static propTypes = {\n//         match: PropTypes.shape({\n//             params: PropTypes.object,\n//             isExact: PropTypes.bool,\n//             path: PropTypes.string,\n//             url: PropTypes.string\n//         })\n//     }\n\n//     state = { movie: {} }\n\n\n//     _fetchMovie ({ id }) {\n//         //fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\n//         //const URL = \"https://api.themoviedb.org/3/search/movie?api_key=\" + apikey + \"&language=en-US&query=\" + id\n//         fetch(\"https://api.themoviedb.org/3/search/movie?api_key=\" + apikey + \"&language=en-US&query=\" + id)\n//         .then(res => res.json())\n//         .then( movie => {\n//             console.log ({ movie })\n//             this.setState({movie})\n//         })\n//     }\n\n//     _goBack () {\n//         window.history.back()\n//     }\n\n//     componentDidMount() {\n//         console.log(this.props)\n//         const { movieId } = this.props.match.params\n//         this._fetchMovie({ id: movieId })\n        \n//     }\n\n//     search() {\n// \t\tif (this.state.search_results.length === 0)\n// \t\t{\n// \t\t\treturn <div className=\"noResult mx-5\"><br/><p>No results Found</p></div>;\n// \t\t}\n// \t\telse\n// \t\t{\n// \t\t\tvar list = this.state.search_results.map(movie =>\n// \t\t\t<div key={movie.id} className=\"movieContent mx-5\">\n// \t\t\t\t{(movie.poster_path!=null)?\n// \t\t\t\t\t(<div className=\"poster\">\n//                         HELLO\n// \t\t\t\t\t\t<img src={\"https://image.tmdb.org/t/p/w185\"+movie.poster_path+\"\"} alt={movie.title}/>\n// \t\t\t\t\t</div>):\n// \t\t\t\t\t(<div className=\"poster\"/>)\n// \t\t\t\t}\n// \t\t\t\t<div className=\"movieData\">\n// \t\t\t\t\t<span>\n// \t\t\t\t\t\t<span style={{fontSize:'2em'}}>{movie.title}  </span>\n// \t\t\t\t\t\t<br/>\n// \t\t\t\t\t\t<span style={{fontStyle: \"italic\", color: \"grey\", fontSize:\"1.25em\"}}>{movie.genre_ids.map(gId =>{\n// \t\t\t\t\t\t\tvar genre = \"\"\n// \t\t\t\t\t\t\tthis.genres.forEach(function(value){\n// \t\t\t\t\t\t\t\tif (value.id === gId) {\n// \t\t\t\t\t\t\t\t\tgenre = value.name;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\treturn genre+\" \"\n// \t\t\t\t\t\t})}</span>\n// \t\t\t\t\t</span><br/>\n// \t\t\t\t\t<p>{movie.overview}</p>\n// \t\t\t\t\t<br/>\n// \t\t\t\t\t<button onClick={this.addToFav} id={movie.id} type=\"button\" className=\"btn, btn-primary\">Add to Favorites</button>\n// \t\t\t\t</div>\n// \t\t\t</div>);\n// \t\t\treturn list\n// \t\t}\n// \t}\n\n//     render (){\n//     //     const {Title, Poster, Actors, Metascore, Plot} = this.state.movie\n//     //     return(\n//     //         <div>\n//     //             {/* <ButtonBackToHome /> */}\n//     //             <br/>\n//     //             <h1>{Title}</h1>\n//     //             <img\n//     //                 alt={Title}\n//     //                 src={Poster}\n//     //             />\n//     //             <h2>{Plot}</h2>\n//     //             <h3>{Actors}</h3>\n//     //             <span>{Metascore}</span>\n//     //             {/* <span style={{fontSize:'2em'}}>{movieItem.title}  </span> */}\n\n//     //             <br/>\n// \t// \t\t\t{this.getMovieSearch()}\n// \t// \t\t\t<br/><br/><br/>\n//     //         </div>\n//     //     )\n//     // }\n//     return (\n//         <div style={{padding:10}}>\n//             <div className=\"searchbar mx-3\">\n//                 <form className=\"form-inline\" onSubmit={this.onSubmit}>\n//                     <h3 className=\"mt-2\">Search Movies:</h3>\n//                     <div className=\"form-group\">\n//                         <input\ttype=\"text\"\n//                                 className=\"form-control mx-2\"\n//                                 value={this.state.search_value}\n//                                 onChange={this.onChangeSearchValue}\n//                                 />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label><button type=\"submit\" className=\"btn btn-primary\" >Search</button></label>\n//                     </div>\n//                     </form>\n//             </div>\n//             <hr className=\"myHR\"/>\n//             <br/>\n//             {this.search()}\n//             <br/><br/><br/>\n//         </div>\n//         \t\t);\n//             }\n\n// }\n\n// export default MoviePage\n\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst apikey = \"37e7a5cb2b4f66257a0b6632a59060a5\";\n\nexport default class MoviePage extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\n\t\tthis.onChangeSearchValue = this.onChangeSearchValue.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t\tthis.getMovieSearch = this.getMovieSearch.bind(this);\n\t\tthis.addToFav = this.addToFav.bind(this);\n\t\tthis.getGenres();\n\n\t\tthis.state = {\n\t\t\tsearch_value: '',\n\t\t\tsearch_results: [],\n\t\t}\n\t}\n\n\tgenres;\n\n\tasync getGenres() {\n\t\tvar genreList = [];\n\t\tawait fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\"+ apikey +\"&language=en-US\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(function(data){\n\t\t\t\tgenreList = data[\"genres\"];\n\t\t\t});\n\t\tthis.genres = genreList;\n\t}\n\n\tonChangeSearchValue(e) {\n\t\tthis.setState ({\n\t\t\tsearch_value: e.target.value\n\t\t});\n\t}\n\n\tasync onSubmit(e) {\n\t\te.preventDefault();\n\n\t\tvar searchList = [];\n\t\tvar searchValue = this.state.search_value\n\n\t\tconsole.log(`Search Made for: ${searchValue}`);\n\n\t\tawait fetch(\"https://api.themoviedb.org/3/search/movie?api_key=\" + apikey + \"&language=en-US&query=\" + searchValue + \" &page=\"+ 1 + \"&include_adult=false\")\n\t\t\t.then(response=>response.json())\n\t\t\t.then(function(data) {\n\t\t\t\tif(data[\"status_code\"]) {\n\t\t\t\t\talert(\"error\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsearchList = data.results;\n\t\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\tsearch_value: '',\n\t\t\tsearch_results: searchList,\n\t\t});\n\t}\n\n\tgetMovieSearch() {\n\t\tif (this.state.search_results.length === 0)\n\t\t{\n\t\t\treturn <div className=\"noResult mx-5\"><br/><p>No results Found</p></div>;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar list = this.state.search_results.map(movieItem =>\n\t\t\t<div key={movieItem.id} className=\"movieContent mx-5\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n\t\t\t\t{(movieItem.poster_path!=null)?\n\t\t\t\t\t(<div className=\"poster\" >\n\t\t\t\t\t\t<Link to={'/moviePage'}>\n\t\t\t\t\t\t\t\t<img src={\"https://image.tmdb.org/t/p/w185\"+movieItem.poster_path+\"\"} alt={movieItem.title}/>\n\t\t\t\t\t\t\t\t<h3>{movieItem.title}</h3>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>):\n\t\t\t\t\t(<div className=\"poster\"/>)\n\t\t\t\t}\n\t\t\t\t<div className=\"movieData\">\n\t\t\t\t\t<Link to={'/moviePage'}>\n  \t\t\t\t\t\t<button > Details </button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<span style={{fontSize:'2em'}}>{movieItem.title}  </span>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<span style={{fontStyle: \"italic\", color: \"grey\", fontSize:\"1.25em\"}}>{movieItem.genre_ids.map(gId =>{\n\t\t\t\t\t\t\tvar genre = \"\"\n\t\t\t\t\t\t\tthis.genres.forEach(function(value){\n\t\t\t\t\t\t\t\tif (value.id === gId) {\n\t\t\t\t\t\t\t\t\tgenre = value.name;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn genre+\" \"\n\t\t\t\t\t\t})}</span>\n\t\t\t\t\t</span><br/>\n\t\t\t\t\t<p>{movieItem.overview}</p> \n\t\t\t\t\t<br/>\n\t\t\t\t\t<button onClick={this.addToFav} id={movieItem.id} type=\"button\" className=\"btn, btn-primary\">Details</button>\n\t\t\t\t</div>\n\t\t\t</div>);\n\t\t\treturn list\n\t\t}\n\t}\n\n\tasync addToFav(e) {\n\t\te.preventDefault();\n\t\tconsole.log(`id added to favourites: ${e.target.id}`);\n\t\tawait fetch('https://api.themoviedb.org/3/movie/'+ e.target.id +'?api_key='+ apikey +'&language=en-US')\n\t\t\t.then(response=>response.json())\n\t\t\t.then(function(data) {\n\t\t\t\tif(data[\"status_code\"]) {\n\t\t\t\t\talert(\"error\" + data[\"status_code\"] + \": \" + data[\"status_message\"]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconst newMovie = {\n\t\t\t\t\t\t_id: data.id,\n\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\toverview: data.overview,\n\t\t\t\t\t\tposter_path: data.poster_path,\n\t\t\t\t\t\tgenres: data.genres,\n\t\t\t\t\t};\n\n\t\t\t\t\taxios.post('http://localhost:4000/movies/add', newMovie)\n\t\t\t\t\t\t.then(res => console.log(res.data));\n\t\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{padding:10}}>\n\t\t\t\t<div className=\"searchbar mx-10\">\n\t\t\t\t\t<form className=\"form-inline\" onSubmit={this.onSubmit}>\n\t\t\t\t\t\t<h3 className=\"mt-2\">Search Movies:</h3>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control mx-2\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.search_value}\n\t\t\t\t\t\t\t\t\tonChange={this.onChangeSearchValue}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label><button type=\"submit\" className=\"btn btn-primary\" >Search</button></label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<hr className=\"myHR\"/>\n\t\t\t\t<br/>\n\t\t\t\t{this.getMovieSearch()}\n\t\t\t\t<br/><br/><br/>\n\t\t\t</div>\n\n\t\t);\n\t}\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAA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"},"metadata":{},"sourceType":"module"}