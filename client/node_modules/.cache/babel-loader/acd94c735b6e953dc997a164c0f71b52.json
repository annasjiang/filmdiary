{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/mern2/mern/client/src/components/review.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport logo from '/client/src/poster.jpg';\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n  // rating and date\n  const [rating, setRating] = React.useState(null);\n  const [value1, setValue1] = React.useState(null);\n  const updateRating = newRating => {\n    setRating(newRating);\n    console.log(rating);\n  };\n  const [inputs, setInputs] = React.useState({});\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs(values => ({\n      ...values,\n      [name]: value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const r = ratingRef.current.value;\n    const d = dateRef.current.value;\n    var dt = new Date(+d);\n    alert(r + ' ' + format(dt, 'MM/dd/yyyy'));\n  };\n  const dateRef = React.useRef();\n  const ratingRef = React.useRef();\n\n  // og\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    date: \"\",\n    rating: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:4000/record/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n      setValue1(record.date);\n      setRating(record.rating);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const d = dateRef.current.value;\n    const dt = isNaN(d) ? d : format(new Date(+d), 'MM/dd/yyyy');\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      date: dt,\n      rating: ratingRef.current.value\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:4000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 50,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: form.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" watched on \", value1, /*#__PURE__*/_jsxDEV(Rating, {\n          name: \"simple-controlled\",\n          defaultValue: rating,\n          value: rating\n          // precision={0.5}\n          ,\n          size: \"medium\",\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: form.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"vmEkHJSBD2f28Fm6gBCYiSZ1a50=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","logo","Rating","TextField","AdapterDayjs","LocalizationProvider","DatePicker","format","jsxDEV","_jsxDEV","Edit","_s","rating","setRating","value1","setValue1","updateRating","newRating","console","log","inputs","setInputs","handleChange","event","name","target","value","values","handleSubmit","preventDefault","r","ratingRef","current","d","dateRef","dt","Date","alert","useRef","form","setForm","position","date","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","record","json","updateForm","prev","onSubmit","e","isNaN","editedPerson","method","body","JSON","stringify","headers","style","marginTop","marginLeft","marginRight","children","fileName","_jsxFileName","lineNumber","columnNumber","class","defaultValue","size","readOnly","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/mern2/mern/client/src/components/review.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport logo from '/client/src/poster.jpg';\n\nimport Rating from '@mui/material/Rating';\n\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\n\nexport default function Edit() {\n  // rating and date\n  const [rating, setRating] = React.useState(null);\n  const [value1, setValue1] = React.useState(null);\n\n  const updateRating = (newRating) => {\n    setRating(newRating);\n    console.log(rating);\n  }\n  const [inputs, setInputs] = React.useState({});\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs(values => ({...values, [name]: value}))\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const r = ratingRef.current.value;\n    const d = dateRef.current.value;\n    var dt = new Date(+d);\n    alert(r + ' ' + format(dt, 'MM/dd/yyyy'));\n  }\n\n  const dateRef = React.useRef();\n  const ratingRef = React.useRef();\n\n  // og\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    date: \"\",\n    rating: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:4000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n      setValue1(record.date);\n      setRating(record.rating);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const d = dateRef.current.value;\n    const dt = isNaN(d) ? d : format(new Date(+d), 'MM/dd/yyyy');\n\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      date: dt,\n      rating: ratingRef.current.value,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:4000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div style={{marginTop: 50, marginLeft: 300, marginRight: 300}}>\n      <h3>{form.name}</h3>\n      <div class=\"mx-auto\">\n\n        <p> watched on {value1}\n        <Rating\n            name=\"simple-controlled\"\n            defaultValue={rating}\n            value={rating}\n            // precision={0.5}\n            size=\"medium\"\n            readOnly\n        /></p> \n    </div>\n        <p>{form.position}</p>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}