{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/fuck/mern/client/src/components/create.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    date: \"\"\n    // level: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = {\n      ...form\n    };\n    await fetch(\"http://localhost:4000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      position: \"\",\n      date: \"\",\n      level: \"\"\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"NEW REVIEW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"I WATCHED...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          className: \"col-form-label\",\n          style: {\n            marginLeft: 20\n          },\n          children: \"ON:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"dd/mm/yyyy\",\n            id: \"date\",\n            value: form.date,\n            onChange: e => updateForm({\n              date: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"form-control\",\n          rows: \"5\",\n          placeholder: \"ADD A REVIEW...\",\n          id: \"position\",\n          value: form.position,\n          onChange: e => updateForm({\n            position: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-right\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"LOG\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"BKBmXVOUCVaNjcDH6m0UE6K2Hdg=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Create","_s","form","setForm","name","position","date","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","level","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onChange","target","style","marginLeft","placeholder","rows","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/fuck/mern/client/src/components/create.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    date: \"\",\n    // level: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"http://localhost:4000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", position: \"\", date: \"\", level: \"\" });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>NEW REVIEW</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">I WATCHED...</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"date\" className=\"col-form-label\" style={{marginLeft: 20}} >ON:</label>\n          <div className=\"col-sm-2\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"dd/mm/yyyy\"\n              id=\"date\"\n              value={form.date}\n              onChange={(e) => updateForm({ date: e.target.value })}\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          {/* <label htmlFor=\"position\"></label> */}\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            rows=\"5\"\n            placeholder=\"ADD A REVIEW...\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n\n        {/* <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n          </div>\n        </div> */}\n        <div className=\"form-group text-right\">\n          <input\n            type=\"submit\"\n            value=\"LOG\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}