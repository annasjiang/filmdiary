{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/filmdiary-commit/client/src/components/createList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport poster from './poster.jpg';\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport Input from '@mui/material/Input';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ariaLabel = {\n  'aria-label': 'description'\n};\nexport default function CreateList() {\n  _s();\n  const [listName, setListName] = React.useState();\n  const listNameRef = React.useRef();\n  const [description, setDescription] = React.useState();\n  const descriptionRef = React.useRef();\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = {\n      ...form\n    };\n    // newList.description = description;\n\n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      description: \"\"\n    });\n    navigate(\"/lists\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"name\",\n            className: \"form-control shadow-none\",\n            id: \"name\",\n            value: form.name,\n            onChange: e => updateForm({\n              name: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"description\",\n          type: \"text\",\n          value: description,\n          ref: descriptionRef,\n          hidden: true,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"ADD DESCRIPTION...\",\n          multiline: true,\n          rows: 3,\n          maxRows: 3,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: e => updateForm({\n            description: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"ADD FILMS...\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-right container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/lists\",\n          class: \"btn btn-light mr-3\",\n          role: \"button\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"LOG\",\n          className: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateList, \"d9q9WHHAV71sV0BOPbD8hTlKQ88=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateList;\nvar _c;\n$RefreshReg$(_c, \"CreateList\");","map":{"version":3,"names":["React","useState","useNavigate","poster","Rating","TextField","Button","AdapterDayjs","LocalizationProvider","DatePicker","format","Input","Typography","jsxDEV","_jsxDEV","ariaLabel","CreateList","_s","listName","setListName","listNameRef","useRef","description","setDescription","descriptionRef","form","setForm","name","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newList","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","style","marginTop","marginLeft","marginRight","children","class","className","type","placeholder","id","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","ref","hidden","readOnly","fullWidth","multiline","rows","maxRows","variant","InputProps","disableUnderline","label","href","role","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/filmdiary-commit/client/src/components/createList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport poster from './poster.jpg';\n\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport Input from '@mui/material/Input';\nimport Typography from '@mui/material/Typography';\n\nconst ariaLabel = { 'aria-label': 'description' };\n\nexport default function CreateList() {\n  const [listName, setListName] = React.useState();\n  const listNameRef = React.useRef();\n  \n  const [description, setDescription] = React.useState();\n  const descriptionRef = React.useRef();\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = { ...form };\n    // newList.description = description;\n\n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newList),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", description: \"\" });\n    navigate(\"/lists\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <form onSubmit={onSubmit}>\n      <div class=\"container\">\n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          placeholder=\"name\"\n          className=\"form-control shadow-none\"\n          id=\"name\"\n          value={form.name}\n          onChange={(e) => updateForm({ name: e.target.value })}\n          required\n        />\n      </div>\n      {/* <div className=\"form-group\">\n        <textarea\n          type=\"text\"\n          placeholder=\"ADD DESCRIPTION...\"\n          className=\"form-control shadow-none\"\n          rows=\"3\"\n          id=\"description\"\n          value={form.description}\n          onChange={(e) => updateForm({ description: e.target.value })}\n        />\n      </div> */}\n        {/* <input\n          name=\"listName\"\n          type=\"text\"\n          value={listName}\n          ref={listNameRef}\n          hidden\n          readOnly\n        />\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"New List\"\n          multiline\n          rows={1}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n          InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n          onChange={(newValue) => {\n            setListName(newValue);\n          }}\n        /> */}\n        <input\n          name=\"description\"\n          type=\"text\"\n          value={description}\n          ref={descriptionRef}\n          hidden\n          readOnly\n        />\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"ADD DESCRIPTION...\"\n          multiline\n          rows={3}\n          maxRows={3}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          onChange={e => updateForm({ description: e.target.value })}\n          type=\"text\"\n        />    \n      </div> <br></br>\n      <div class=\"container\"><TextField fullWidth id=\"outlined-basic\" label=\"ADD FILMS...\" variant=\"outlined\" /></div> \n      <br></br>\n      <div className=\"form-group text-right container\">\n        <a href=\"/lists\" class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>\n        <input\n          type=\"submit\"\n          value=\"LOG\"\n          className=\"btn btn-success\"\n        />\n      </div>   \n      </form>  \n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}