{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/fuck/client/src/components/editList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\ni;\nimport TextField from '@mui/material/TextField';\nimport Search from \"./searchList/search\";\nimport { Card, Grid, IconButton, Table, TableBody, TableCell, TableContainer, TableRow } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditList() {\n  _s();\n  // table stuff\n  const [rows, setRows] = useState([{\n    id: 1,\n    item: {\n      title: \"\",\n      year: \"\",\n      poster: \"\"\n    }\n  }]);\n  const generateRow = () => {\n    return {\n      id: 1,\n      item: {\n        title: \"\",\n        year: \"\",\n        poster: \"\"\n      }\n    };\n  };\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item[\"title\"] = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n    setRows(prevRows => {\n      return [...rows.slice(0, id - 1), ...rows.slice(id)];\n    });\n  };\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    console.log(\"len=\" + rows.length + \" id=\" + id);\n    if (id === 1) {\n      if (value !== \"\") {\n        for (let i = 0; i < rows.length; i++) {\n          console.log(rows[i].id);\n          rows[i].id = i + 2;\n        }\n        setRows(prevRows => [generateRow(), ...prevRows]);\n        rows[0].item[\"title\"] = value;\n        rows[0].item[\"year\"] = document.getElementById(\"addYearToList\").value;\n        rows[0].item[\"poster\"] = document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id + 1);\n      }\n    }\n  };\n  const generateTable = () => {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => row.id === 1 ? /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          hidden: true,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"poster\",\n            className: \"col-sm-1\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"addPosterToList\",\n              src: row.item[\"poster\"],\n              style: {\n                height: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"name\",\n            className: \"col-sm-7\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"addFilmToList\",\n              placeholder: \"Add Item\",\n              onClick: e => handleChange(e, row.id),\n              value: row.item[\"title\"],\n              fullWidth: true,\n              autoComplete: \"off\",\n              variant: \"standard\",\n              InputProps: {\n                disableUnderline: true,\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"addYearToList\",\n              className: \"text-muted\",\n              children: [\"(\", row.item[\"year\"], \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            className: \"col-sm-1\",\n            children: row.id === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) :\n            /*#__PURE__*/\n            //changed here\n            _jsxDEV(IconButton, {\n              onClick: e => handleDeleteRow(e, row.id),\n              style: {\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"poster\",\n            className: \"col-sm-1\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"addPosterToList\",\n              src: row.item[\"poster\"],\n              style: {\n                height: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"name\",\n            className: \"col-sm-7\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"addFilmToList\",\n              placeholder: \"Add Item\",\n              onClick: e => handleChange(e, row.id),\n              value: row.item[\"title\"],\n              fullWidth: true,\n              autoComplete: \"off\",\n              variant: \"standard\",\n              InputProps: {\n                disableUnderline: true,\n                readOnly: true,\n                style: {\n                  fontWeight: 500\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"addYearToList\",\n              className: \"text-muted\",\n              children: [\"(\", row.item[\"year\"], \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            className: \"col-sm-1\",\n            children: row.id === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) :\n            /*#__PURE__*/\n            //changed here\n            _jsxDEV(IconButton, {\n              onClick: e => handleDeleteRow(e, row.id),\n              style: {\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n  const [tableData, setTableData] = useState(generateTable());\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows]);\n\n  // get list data from form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    lists: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:4000/list/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const list = await response.json();\n      if (!list) {\n        window.alert(`List with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(list);\n      let sizes_arr = JSON.parse(list.list);\n      let rows_arr = [];\n      rows_arr.push({\n        id: 1,\n        item: {\n          title: \"\",\n          poster: \"\"\n        }\n      });\n      for (let i = 0; i < sizes_arr.length; i++) {\n        rows_arr.push({\n          id: i + 2,\n          item: sizes_arr[i]\n        });\n      }\n      console.log(rows_arr);\n      setRows(rows_arr);\n      setTableData(generateTable());\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    let arr = [];\n    if (rows[0].item[\"title\"] === \"\") {\n      arr = rows.slice(1, rows.length);\n    } else {\n      arr = rows;\n    }\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n    const editedList = {\n      name: form.name,\n      description: form.description,\n      list: [],\n      thumbnail1: \"\",\n      thumbnail2: \"\",\n      thumbnail3: \"\"\n    };\n    editedList.list = JSON.stringify(items);\n    if (arr.length > 0) {\n      editedList.thumbnail1 = arr[0].item.poster;\n    }\n    if (arr.length > 1) {\n      editedList.thumbnail2 = arr[1].item.poster;\n    }\n    if (arr.length > 2) {\n      editedList.thumbnail3 = arr[2].item.poster;\n    }\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:4000/updatelist/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedList),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(`/list/${params.id.toString()}`);\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          defaultValue: form.name,\n          multiline: true,\n          maxRows: 10,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          inputProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input text\n          ,\n          InputLabelProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input label\n          ,\n          onChange: e => updateForm({\n            name: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          defaultValue: form.description,\n          placeholder: \"ADD DESCRIPTION...\",\n          multiline: true,\n          rows: 3,\n          maxRows: 3,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: e => updateForm({\n            description: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 12,\n            justifyContent: \"center\",\n            display: \"flex\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: [tableData, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-right container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/list/${params.id}`,\n          class: \"btn btn-light mr-3\",\n          role: \"button\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"SAVE\",\n          className: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 3\n  }, this);\n}\n_s(EditList, \"hNEN47Fe1YYCtQhmg0Zwv/+c3xc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditList;\nvar _c;\n$RefreshReg$(_c, \"EditList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","i","TextField","Search","Card","Grid","IconButton","Table","TableBody","TableCell","TableContainer","TableRow","DeleteIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","EditList","_s","rows","setRows","id","item","title","year","poster","generateRow","handleDeleteRow","event","length","prevRows","slice","handleChange","e","value","target","console","log","document","getElementById","src","generateTable","children","map","row","sx","border","hidden","component","scope","className","style","height","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","fullWidth","autoComplete","variant","InputProps","disableUnderline","readOnly","float","fontWeight","tableData","setTableData","form","setForm","name","description","lists","params","navigate","fetchData","toString","response","fetch","ok","message","statusText","window","alert","list","json","sizes_arr","JSON","parse","rows_arr","push","updateForm","prev","onSubmit","preventDefault","arr","items","editedList","thumbnail1","thumbnail2","thumbnail3","stringify","method","body","headers","marginTop","marginLeft","marginRight","class","defaultValue","multiline","maxRows","inputProps","fontSize","InputLabelProps","onChange","type","container","lg","justifyContent","display","href","role","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/fuck/client/src/components/editList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\ni\nimport TextField from '@mui/material/TextField';\nimport Search from \"./searchList/search\";\nimport {Card, Grid, IconButton, Table, TableBody, TableCell, TableContainer, TableRow} from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function EditList() {\n  // table stuff\n  const [rows, setRows] = useState([\n    {\n      id: 1,\n      item: {title: \"\", year: \"\", poster: \"\"}\n    }\n  ]);\n\n  const generateRow = () => {\n    return {\n      id: 1,\n      item: {title: \"\", year: \"\", poster: \"\"}\n    }\n  }\n\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item[\"title\"] = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n\n    setRows((prevRows) => {\n      return [\n        ...rows.slice(0, id - 1),\n        ...rows.slice(id),\n      ];\n    });\n  }\n\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    console.log(\"len=\" + rows.length + \" id=\"+id);\n    if (id === 1) {\n      if (value !== \"\") {\n        for (let i = 0; i < rows.length; i++) {\n            console.log(rows[i].id);\n            rows[i].id=i+2;\n        }\n       setRows((prevRows) => [generateRow(), ...prevRows]);\n       rows[0].item[\"title\"]=value;\n       rows[0].item[\"year\"]=document.getElementById(\"addYearToList\").value;\n       rows[0].item[\"poster\"]=document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id + 1);\n      }\n    }\n  }\n\n  const generateTable = () => {\n    return (\n      <Table>\n        <TableBody>\n          {rows.map((row) => \n          \n          row.id === 1 ? (\n            <TableRow\n            key={row.id}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            hidden\n            > \n            <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n              <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n              <TextField \n                id='addFilmToList'\n                placeholder={\"Add Item\"} \n                onClick={(e) => handleChange(e, row.id)} \n                value={row.item[\"title\"]}\n                fullWidth\n                autoComplete=\"off\"\n                variant=\"standard\"\n                InputProps={{ disableUnderline: true, readOnly: true,  }}\n              /><p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n              {\n                row.id === 1 ? (<></>) : (     //changed here\n                  <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                    <DeleteIcon />\n                  </IconButton>\n                )\n              }\n            </TableCell>\n          </TableRow>\n          ) : \n          ( \n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            > \n              <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n                <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n                <TextField \n                  id='addFilmToList'\n                  placeholder={\"Add Item\"} \n                  onClick={(e) => handleChange(e, row.id)} \n                  value={row.item[\"title\"]}\n                  fullWidth\n                  autoComplete=\"off\"\n                  variant=\"standard\"\n                  InputProps={{ disableUnderline: true, readOnly: true, style: {fontWeight: 500} }}\n                /><p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n                {\n                  row.id === 1 ? (<></>) : (     //changed here\n                    <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                      <DeleteIcon />\n                    </IconButton>\n                  )\n                }\n              </TableCell>\n            </TableRow>       \n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n  const [tableData, setTableData] = useState(generateTable());\n\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows])\n\n// get list data from form\nconst [form, setForm] = useState({\n  name: \"\",\n  description: \"\",\n  lists: [],\n});\nconst params = useParams();\nconst navigate = useNavigate();\n\nuseEffect(() => {\n  async function fetchData() {\n    const id = params.id.toString();\n    const response = await fetch(`http://localhost:4000/list/${params.id.toString()}`);\n\n    if (!response.ok) {\n      const message = `An error has occured: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n\n    const list = await response.json();\n    if (!list) {\n      window.alert(`List with id ${id} not found`);\n      navigate(\"/\");\n      return;\n    }\n\n    setForm(list);\n\n    let sizes_arr = JSON.parse(list.list); \n   \n    let rows_arr = [];\n    rows_arr.push({\n      id: 1,\n      item: {title: \"\", poster: \"\"}\n    })\n    for (let i = 0; i < sizes_arr.length; i++) {\n      rows_arr.push({\n        id: i+2,\n        item: sizes_arr[i]\n      })\n    }\n    console.log(rows_arr);\n      \n    setRows(rows_arr);\n    setTableData(generateTable());\n  }\n\n  fetchData();\n\n  return;\n}, [params.id, navigate]);\n\n// These methods will update the state properties.\nfunction updateForm(value) {\n  return setForm((prev) => {\n    return { ...prev, ...value };\n  });\n}\n\nasync function onSubmit(e) {\n  e.preventDefault();\n\n  let arr = [];\n    if (rows[0].item[\"title\"] === \"\") {\n      arr = rows.slice(1, rows.length);\n    } else {\n      arr = rows;\n    }\n\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n\n  const editedList = {\n    name: form.name,\n    description: form.description,\n    list: [],\n    thumbnail1: \"\",\n    thumbnail2: \"\",\n    thumbnail3: \"\",\n  };\n  editedList.list = JSON.stringify(items);\n  if (arr.length > 0) {\n    editedList.thumbnail1 = arr[0].item.poster;\n  }\n  if (arr.length > 1) {\n    editedList.thumbnail2 = arr[1].item.poster;\n  }\n  if (arr.length > 2) {\n    editedList.thumbnail3 = arr[2].item.poster;\n  }\n\n  // This will send a post request to update the data in the database.\n  await fetch(`http://localhost:4000/updatelist/${params.id}`, {\n    method: \"POST\",\n    body: JSON.stringify(editedList),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  });\n\n  navigate(`/list/${params.id.toString()}`);\n}\n\n// This following section will display the form that takes input from the user to update the data.\nreturn (\n  <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n    <form onSubmit={onSubmit}>\n    <div class=\"container\">\n      <TextField\n        fullWidth\n        id=\"outlined-multiline-flexible\"\n        defaultValue={form.name}\n        multiline\n        maxRows={10}\n        variant=\"standard\"\n        InputProps={{ disableUnderline: true }}\n        inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n        InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n        onChange={e => updateForm({ name: e.target.value })}\n        type=\"text\"\n      />\n      <br></br><br></br>\n      <TextField\n        fullWidth\n        id=\"outlined-multiline-flexible\"\n        defaultValue={form.description}\n        placeholder=\"ADD DESCRIPTION...\"\n        multiline\n        rows={3}\n        maxRows={3}\n        variant=\"standard\"\n        InputProps={{ disableUnderline: true }}\n        onChange={e => updateForm({ description: e.target.value })}\n        type=\"text\"\n      />    \n    </div> <br></br>\n    <div class=\"container\"><Search/></div> <br></br>\n    <div class=\"container\">\n      <Grid container>\n\n        <Grid item lg={12} justifyContent=\"center\" display=\"flex\">\n          <Card>\n            <TableContainer>\n              {tableData} {/* this variable will change to contain all data */}\n            </TableContainer>\n          </Card>\n        </Grid>\n        </Grid>\n      </div>\n    <br></br>\n\n    {/* cancel/submit button */}\n    <div className=\"form-group text-right container\">\n      <a href={`/list/${params.id}`} class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>                 \n      <input\n        type=\"submit\"\n        value=\"SAVE\"\n        className=\"btn btn-success\"\n      />\n    </div>\n    </form>\n  </div>  \n);\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzDC,CAAC;AACD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAAQC,IAAI,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,QAAQ,QAAO,eAAe;AAC3G,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,CAC/B;IACEwB,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;MAACC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE;EACxC,CAAC,CACF,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAO;MACLL,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;QAACC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE;IACxC,CAAC;EACH,CAAC;EAED,MAAME,eAAe,GAAGA,CAACC,KAAK,EAAEP,EAAE,KAAK;IACrCD,OAAO,CAACD,IAAI,IAAI;MACdA,IAAI,CAACE,EAAE,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;MAC/B,KAAK,IAAIrB,CAAC,GAAGoB,EAAE,GAAG,CAAC,EAAEpB,CAAC,GAAGkB,IAAI,CAACU,MAAM,EAAE5B,CAAC,EAAE,EAAE;QACzCkB,IAAI,CAAClB,CAAC,CAAC,CAACoB,EAAE,EAAE;MACd;IACF,CAAC,CAAC;IAEFD,OAAO,CAAEU,QAAQ,IAAK;MACpB,OAAO,CACL,GAAGX,IAAI,CAACY,KAAK,CAAC,CAAC,EAAEV,EAAE,GAAG,CAAC,CAAC,EACxB,GAAGF,IAAI,CAACY,KAAK,CAACV,EAAE,CAAC,CAClB;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMW,YAAY,GAAGA,CAACC,CAAC,EAAEZ,EAAE,KAAK;IAC9B,IAAIa,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC1BE,OAAO,CAACC,GAAG,CAAC,MAAM,GAAGlB,IAAI,CAACU,MAAM,GAAG,MAAM,GAACR,EAAE,CAAC;IAC7C,IAAIA,EAAE,KAAK,CAAC,EAAE;MACZ,IAAIa,KAAK,KAAK,EAAE,EAAE;QAChB,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,IAAI,CAACU,MAAM,EAAE5B,CAAC,EAAE,EAAE;UAClCmC,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAClB,CAAC,CAAC,CAACoB,EAAE,CAAC;UACvBF,IAAI,CAAClB,CAAC,CAAC,CAACoB,EAAE,GAACpB,CAAC,GAAC,CAAC;QAClB;QACDmB,OAAO,CAAEU,QAAQ,IAAK,CAACJ,WAAW,EAAE,EAAE,GAAGI,QAAQ,CAAC,CAAC;QACnDX,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,OAAO,CAAC,GAACY,KAAK;QAC3Bf,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,MAAM,CAAC,GAACgB,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACL,KAAK;QACnEf,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,QAAQ,CAAC,GAACgB,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,GAAG;MACtE;IACF,CAAC,MAAM,IAAInB,EAAE,GAAG,CAAC,KAAKF,IAAI,CAACU,MAAM,EAAE;MACjC,IAAIK,KAAK,KAAK,EAAE,EAAE;QAChBP,eAAe,CAACM,CAAC,EAAEZ,EAAE,GAAG,CAAC,CAAC;MAC5B;IACF;EACF,CAAC;EAED,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1B,oBACE3B,OAAA,CAACP,KAAK;MAAAmC,QAAA,eACJ5B,OAAA,CAACN,SAAS;QAAAkC,QAAA,EACPvB,IAAI,CAACwB,GAAG,CAAEC,GAAG,IAEdA,GAAG,CAACvB,EAAE,KAAK,CAAC,gBACVP,OAAA,CAACH,QAAQ;UAETkC,EAAE,EAAE;YAAE,kCAAkC,EAAE;cAAEC,MAAM,EAAE;YAAE;UAAC,CAAE;UACzDC,MAAM;UAAAL,QAAA,gBAEN5B,OAAA,CAACL,SAAS;YAACuC,SAAS,EAAC,IAAI;YAACC,KAAK,EAAC,KAAK;YAAC5B,EAAE,EAAC,QAAQ;YAAC6B,SAAS,EAAC,UAAU;YAAAR,QAAA,eACpE5B,OAAA;cAAKO,EAAE,EAAC,iBAAiB;cAACmB,GAAG,EAAEI,GAAG,CAACtB,IAAI,CAAC,QAAQ,CAAE;cAAC6B,KAAK,EAAE;gBAACC,MAAM,EAAE;cAAG;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrE,eACZ1C,OAAA,CAACL,SAAS;YAACuC,SAAS,EAAC,IAAI;YAACC,KAAK,EAAC,KAAK;YAAC5B,EAAE,EAAC,MAAM;YAAC6B,SAAS,EAAC,UAAU;YAAAR,QAAA,gBAClE5B,OAAA,CAACZ,SAAS;cACRmB,EAAE,EAAC,eAAe;cAClBoC,WAAW,EAAE,UAAW;cACxBC,OAAO,EAAGzB,CAAC,IAAKD,YAAY,CAACC,CAAC,EAAEW,GAAG,CAACvB,EAAE,CAAE;cACxCa,KAAK,EAAEU,GAAG,CAACtB,IAAI,CAAC,OAAO,CAAE;cACzBqC,SAAS;cACTC,YAAY,EAAC,KAAK;cAClBC,OAAO,EAAC,UAAU;cAClBC,UAAU,EAAE;gBAAEC,gBAAgB,EAAE,IAAI;gBAAEC,QAAQ,EAAE;cAAO;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACzD,eAAA1C,OAAA;cAAGO,EAAE,EAAC,eAAe;cAAC6B,SAAS,EAAC,YAAY;cAAAR,QAAA,GAAC,GAAC,EAACE,GAAG,CAACtB,IAAI,CAAC,MAAM,CAAC,EAAC,GAAC;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC7D,eACZ1C,OAAA,CAACL,SAAS;YAACuC,SAAS,EAAC,IAAI;YAACC,KAAK,EAAC,KAAK;YAACC,SAAS,EAAC,UAAU;YAAAR,QAAA,EAEtDE,GAAG,CAACvB,EAAE,KAAK,CAAC,gBAAIP,OAAA,CAAAE,SAAA,oBAAK;YAAA;YAAU;YAC7BF,OAAA,CAACR,UAAU;cAACoD,OAAO,EAAGzB,CAAC,IAAKN,eAAe,CAACM,CAAC,EAAEW,GAAG,CAACvB,EAAE,CAAE;cAAC8B,KAAK,EAAE;gBAACc,KAAK,EAAC;cAAO,CAAE;cAAAvB,QAAA,eAC7E5B,OAAA,CAACF,UAAU;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAEjB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEO;QAAA,GA3BPZ,GAAG,CAACvB,EAAE;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QA4BF,gBAGT1C,OAAA,CAACH,QAAQ;UAEPkC,EAAE,EAAE;YAAE,kCAAkC,EAAE;cAAEC,MAAM,EAAE;YAAE;UAAC,CAAE;UAAAJ,QAAA,gBAEzD5B,OAAA,CAACL,SAAS;YAACuC,SAAS,EAAC,IAAI;YAACC,KAAK,EAAC,KAAK;YAAC5B,EAAE,EAAC,QAAQ;YAAC6B,SAAS,EAAC,UAAU;YAAAR,QAAA,eACpE5B,OAAA;cAAKO,EAAE,EAAC,iBAAiB;cAACmB,GAAG,EAAEI,GAAG,CAACtB,IAAI,CAAC,QAAQ,CAAE;cAAC6B,KAAK,EAAE;gBAACC,MAAM,EAAE;cAAG;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrE,eACZ1C,OAAA,CAACL,SAAS;YAACuC,SAAS,EAAC,IAAI;YAACC,KAAK,EAAC,KAAK;YAAC5B,EAAE,EAAC,MAAM;YAAC6B,SAAS,EAAC,UAAU;YAAAR,QAAA,gBAClE5B,OAAA,CAACZ,SAAS;cACRmB,EAAE,EAAC,eAAe;cAClBoC,WAAW,EAAE,UAAW;cACxBC,OAAO,EAAGzB,CAAC,IAAKD,YAAY,CAACC,CAAC,EAAEW,GAAG,CAACvB,EAAE,CAAE;cACxCa,KAAK,EAAEU,GAAG,CAACtB,IAAI,CAAC,OAAO,CAAE;cACzBqC,SAAS;cACTC,YAAY,EAAC,KAAK;cAClBC,OAAO,EAAC,UAAU;cAClBC,UAAU,EAAE;gBAAEC,gBAAgB,EAAE,IAAI;gBAAEC,QAAQ,EAAE,IAAI;gBAAEb,KAAK,EAAE;kBAACe,UAAU,EAAE;gBAAG;cAAE;YAAE;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACjF,eAAA1C,OAAA;cAAGO,EAAE,EAAC,eAAe;cAAC6B,SAAS,EAAC,YAAY;cAAAR,QAAA,GAAC,GAAC,EAACE,GAAG,CAACtB,IAAI,CAAC,MAAM,CAAC,EAAC,GAAC;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC7D,eACZ1C,OAAA,CAACL,SAAS;YAACuC,SAAS,EAAC,IAAI;YAACC,KAAK,EAAC,KAAK;YAACC,SAAS,EAAC,UAAU;YAAAR,QAAA,EAEtDE,GAAG,CAACvB,EAAE,KAAK,CAAC,gBAAIP,OAAA,CAAAE,SAAA,oBAAK;YAAA;YAAU;YAC7BF,OAAA,CAACR,UAAU;cAACoD,OAAO,EAAGzB,CAAC,IAAKN,eAAe,CAACM,CAAC,EAAEW,GAAG,CAACvB,EAAE,CAAE;cAAC8B,KAAK,EAAE;gBAACc,KAAK,EAAC;cAAO,CAAE;cAAAvB,QAAA,eAC7E5B,OAAA,CAACF,UAAU;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAEjB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEO;QAAA,GA1BPZ,GAAG,CAACvB,EAAE;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QA4Bd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAEZ,CAAC;EACD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGvE,QAAQ,CAAC4C,aAAa,EAAE,CAAC;EAE3D3C,SAAS,CAAC,MAAM;IACdsE,YAAY,CAAC3B,aAAa,EAAE,CAAC;EAC/B,CAAC,EAAE,CAACtB,IAAI,CAAC,CAAC;;EAEZ;EACA,MAAM,CAACkD,IAAI,EAAEC,OAAO,CAAC,GAAGzE,QAAQ,CAAC;IAC/B0E,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAMC,MAAM,GAAG3E,SAAS,EAAE;EAC1B,MAAM4E,QAAQ,GAAG3E,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACd,eAAe8E,SAASA,CAAA,EAAG;MACzB,MAAMvD,EAAE,GAAGqD,MAAM,CAACrD,EAAE,CAACwD,QAAQ,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BL,MAAM,CAACrD,EAAE,CAACwD,QAAQ,EAAG,EAAC,CAAC;MAElF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,yBAAwBH,QAAQ,CAACI,UAAW,EAAC;QAC9DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMI,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MAClC,IAAI,CAACD,IAAI,EAAE;QACTF,MAAM,CAACC,KAAK,CAAE,gBAAe/D,EAAG,YAAW,CAAC;QAC5CsD,QAAQ,CAAC,GAAG,CAAC;QACb;MACF;MAEAL,OAAO,CAACe,IAAI,CAAC;MAEb,IAAIE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACA,IAAI,CAAC;MAErC,IAAIK,QAAQ,GAAG,EAAE;MACjBA,QAAQ,CAACC,IAAI,CAAC;QACZtE,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE;UAACC,KAAK,EAAE,EAAE;UAAEE,MAAM,EAAE;QAAE;MAC9B,CAAC,CAAC;MACF,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,SAAS,CAAC1D,MAAM,EAAE5B,CAAC,EAAE,EAAE;QACzCyF,QAAQ,CAACC,IAAI,CAAC;UACZtE,EAAE,EAAEpB,CAAC,GAAC,CAAC;UACPqB,IAAI,EAAEiE,SAAS,CAACtF,CAAC;QACnB,CAAC,CAAC;MACJ;MACAmC,OAAO,CAACC,GAAG,CAACqD,QAAQ,CAAC;MAErBtE,OAAO,CAACsE,QAAQ,CAAC;MACjBtB,YAAY,CAAC3B,aAAa,EAAE,CAAC;IAC/B;IAEAmC,SAAS,EAAE;IAEX;EACF,CAAC,EAAE,CAACF,MAAM,CAACrD,EAAE,EAAEsD,QAAQ,CAAC,CAAC;;EAEzB;EACA,SAASiB,UAAUA,CAAC1D,KAAK,EAAE;IACzB,OAAOoC,OAAO,CAAEuB,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAG3D;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEA,eAAe4D,QAAQA,CAAC7D,CAAC,EAAE;IACzBA,CAAC,CAAC8D,cAAc,EAAE;IAElB,IAAIC,GAAG,GAAG,EAAE;IACV,IAAI7E,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;MAChC0E,GAAG,GAAG7E,IAAI,CAACY,KAAK,CAAC,CAAC,EAAEZ,IAAI,CAACU,MAAM,CAAC;IAClC,CAAC,MAAM;MACLmE,GAAG,GAAG7E,IAAI;IACZ;IAEA,IAAI8E,KAAK,GAAG,EAAE;IACd,KAAK,IAAIhG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+F,GAAG,CAACnE,MAAM,EAAE5B,CAAC,EAAE,EAAE;MACnCgG,KAAK,CAACN,IAAI,CAACK,GAAG,CAAC/F,CAAC,CAAC,CAACqB,IAAI,CAAC;IACzB;IAEF,MAAM4E,UAAU,GAAG;MACjB3B,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,WAAW,EAAEH,IAAI,CAACG,WAAW;MAC7Ba,IAAI,EAAE,EAAE;MACRc,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE;IACd,CAAC;IACDH,UAAU,CAACb,IAAI,GAAGG,IAAI,CAACc,SAAS,CAACL,KAAK,CAAC;IACvC,IAAID,GAAG,CAACnE,MAAM,GAAG,CAAC,EAAE;MAClBqE,UAAU,CAACC,UAAU,GAAGH,GAAG,CAAC,CAAC,CAAC,CAAC1E,IAAI,CAACG,MAAM;IAC5C;IACA,IAAIuE,GAAG,CAACnE,MAAM,GAAG,CAAC,EAAE;MAClBqE,UAAU,CAACE,UAAU,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC1E,IAAI,CAACG,MAAM;IAC5C;IACA,IAAIuE,GAAG,CAACnE,MAAM,GAAG,CAAC,EAAE;MAClBqE,UAAU,CAACG,UAAU,GAAGL,GAAG,CAAC,CAAC,CAAC,CAAC1E,IAAI,CAACG,MAAM;IAC5C;;IAEA;IACA,MAAMsD,KAAK,CAAE,oCAAmCL,MAAM,CAACrD,EAAG,EAAC,EAAE;MAC3DkF,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEhB,IAAI,CAACc,SAAS,CAACJ,UAAU,CAAC;MAChCO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF9B,QAAQ,CAAE,SAAQD,MAAM,CAACrD,EAAE,CAACwD,QAAQ,EAAG,EAAC,CAAC;EAC3C;;EAEA;EACA,oBACE/D,OAAA;IAAKqC,KAAK,EAAE;MAACuD,SAAS,EAAE,GAAG;MAAEC,UAAU,EAAE,GAAG;MAAEC,WAAW,EAAE;IAAG,CAAE;IAAAlE,QAAA,eAC9D5B,OAAA;MAAMgF,QAAQ,EAAEA,QAAS;MAAApD,QAAA,gBACzB5B,OAAA;QAAK+F,KAAK,EAAC,WAAW;QAAAnE,QAAA,gBACpB5B,OAAA,CAACZ,SAAS;UACRyD,SAAS;UACTtC,EAAE,EAAC,6BAA6B;UAChCyF,YAAY,EAAEzC,IAAI,CAACE,IAAK;UACxBwC,SAAS;UACTC,OAAO,EAAE,EAAG;UACZnD,OAAO,EAAC,UAAU;UAClBC,UAAU,EAAE;YAAEC,gBAAgB,EAAE;UAAK,CAAE;UACvCkD,UAAU,EAAE;YAAC9D,KAAK,EAAE;cAAC+D,QAAQ,EAAE,EAAE;cAAEhD,UAAU,EAAE;YAAG;UAAC,CAAE,CAAC;UAAA;UACtDiD,eAAe,EAAE;YAAChE,KAAK,EAAE;cAAC+D,QAAQ,EAAE,EAAE;cAAEhD,UAAU,EAAE;YAAG;UAAC,CAAE,CAAC;UAAA;UAC3DkD,QAAQ,EAAEnF,CAAC,IAAI2D,UAAU,CAAC;YAAErB,IAAI,EAAEtC,CAAC,CAACE,MAAM,CAACD;UAAM,CAAC,CAAE;UACpDmF,IAAI,EAAC;QAAM;UAAAhE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACX,eACF1C,OAAA;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAAA1C,OAAA;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAClB1C,OAAA,CAACZ,SAAS;UACRyD,SAAS;UACTtC,EAAE,EAAC,6BAA6B;UAChCyF,YAAY,EAAEzC,IAAI,CAACG,WAAY;UAC/Bf,WAAW,EAAC,oBAAoB;UAChCsD,SAAS;UACT5F,IAAI,EAAE,CAAE;UACR6F,OAAO,EAAE,CAAE;UACXnD,OAAO,EAAC,UAAU;UAClBC,UAAU,EAAE;YAAEC,gBAAgB,EAAE;UAAK,CAAE;UACvCqD,QAAQ,EAAEnF,CAAC,IAAI2D,UAAU,CAAC;YAAEpB,WAAW,EAAEvC,CAAC,CAACE,MAAM,CAACD;UAAM,CAAC,CAAE;UAC3DmF,IAAI,EAAC;QAAM;UAAAhE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,KAAC,eAAA1C,OAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAChB1C,OAAA;QAAK+F,KAAK,EAAC,WAAW;QAAAnE,QAAA,eAAC5B,OAAA,CAACX,MAAM;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,KAAC,eAAA1C,OAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAChD1C,OAAA;QAAK+F,KAAK,EAAC,WAAW;QAAAnE,QAAA,eACpB5B,OAAA,CAACT,IAAI;UAACiH,SAAS;UAAA5E,QAAA,eAEb5B,OAAA,CAACT,IAAI;YAACiB,IAAI;YAACiG,EAAE,EAAE,EAAG;YAACC,cAAc,EAAC,QAAQ;YAACC,OAAO,EAAC,MAAM;YAAA/E,QAAA,eACvD5B,OAAA,CAACV,IAAI;cAAAsC,QAAA,eACH5B,OAAA,CAACJ,cAAc;gBAAAgC,QAAA,GACZyB,SAAS,EAAC,GAAC;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACZ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH,eACR1C,OAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAGT1C,OAAA;QAAKoC,SAAS,EAAC,iCAAiC;QAAAR,QAAA,gBAC9C5B,OAAA;UAAG4G,IAAI,EAAG,SAAQhD,MAAM,CAACrD,EAAG,EAAE;UAACwF,KAAK,EAAC,oBAAoB;UAACc,IAAI,EAAC,QAAQ;UAAAjF,QAAA,EAAC;QAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eAClF1C,OAAA;UACEuG,IAAI,EAAC,QAAQ;UACbnF,KAAK,EAAC,MAAM;UACZgB,SAAS,EAAC;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAER;AAACtC,EAAA,CA1SuBD,QAAQ;EAAA,QA0IjBlB,SAAS,EACPC,WAAW;AAAA;AAAA4H,EAAA,GA3IJ3G,QAAQ;AAAA,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}