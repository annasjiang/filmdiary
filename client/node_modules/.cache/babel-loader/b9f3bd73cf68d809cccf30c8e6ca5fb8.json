{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/fuck/client/src/components/createList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Search from \"./searchList/search\";\nimport { Card, Grid, Table, TableBody, TableCell, TableContainer, TableRow } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateList() {\n  _s();\n  // table stuff\n  const [rows, setRows] = useState([{\n    id: 1,\n    item: {\n      title: \"\",\n      year: \"\",\n      poster: \"\"\n    }\n  }]);\n  const generateRow = () => {\n    return {\n      id: 1,\n      item: {\n        title: \"\",\n        year: \"\",\n        poster: \"\"\n      }\n    };\n  };\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item[\"title\"] = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n    setRows(prevRows => {\n      return [...rows.slice(0, id - 1), ...rows.slice(id)];\n    });\n  };\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    // console.log(\"len=\" + rows.length + \" id=\"+id);\n    // if (id === rows.length) {\n    if (id === 1) {\n      if (value !== \"\") {\n        //        setRows((prevRows) => [...prevRows, generateRow()]);\n        for (let i = 0; i < rows.length; i++) {\n          // console.log(rows[i].id);\n          rows[i].id = i + 2;\n        }\n        setRows(prevRows => [generateRow(), ...prevRows]);\n        rows[0].item[\"title\"] = value;\n        rows[0].item[\"year\"] = document.getElementById(\"addYearToList\").value;\n        rows[0].item[\"poster\"] = document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id + 1);\n      }\n    }\n    // console.log(\"new len=\" + rows.length );\n    //comment out\n    // setRows((prevRows) => {\n    //     return prevRows.map( (row, index) => index ===  id ? row : { item: value, ...row}, );\n    //   });\n  };\n\n  // const handleSave = () => {\n  //   let arr = [];\n  //   if (rows[rows.length - 1].item === \"\") {\n  //     arr = rows.slice(0, -1);\n  //   } else {\n  //     arr = rows;\n  //   }\n  //   let items = [];\n  //   for (let i = 0; i < arr.length; i++) {\n  //     items.push(arr[i].item);\n  //   }\n  //   window.sessionStorage.setItem(\"list\", JSON.stringify(items));\n  // }\n\n  const generateTable = () => {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => row.id === 1 ? /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          hidden: true,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"poster\",\n            className: \"col-sm-1\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"addPosterToList\",\n              src: row.item[\"poster\"],\n              style: {\n                height: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"name\",\n            className: \"col-sm-7\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"addFilmToList\",\n              placeholder: \"Add Item\",\n              onClick: e => handleChange(e, row.id),\n              value: row.item[\"title\"],\n              fullWidth: true,\n              autoComplete: \"off\",\n              variant: \"standard\",\n              InputProps: {\n                disableUnderline: true,\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"addYearToList\",\n              className: \"text-muted\",\n              children: [\"(\", row.item[\"year\"], \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            className: \"col-sm-1\",\n            children: row.id === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) :\n            /*#__PURE__*/\n            //changed here\n            _jsxDEV(IconButton, {\n              onClick: e => handleDeleteRow(e, row.id),\n              style: {\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"poster\",\n            className: \"col-sm-1\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"addPosterToList\",\n              src: row.item[\"poster\"],\n              style: {\n                height: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"name\",\n            className: \"col-sm-7\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"addFilmToList\",\n              placeholder: \"Add Item\",\n              onClick: e => handleChange(e, row.id),\n              value: row.item[\"title\"],\n              fullWidth: true,\n              autoComplete: \"off\",\n              variant: \"standard\",\n              InputProps: {\n                disableUnderline: true,\n                readOnly: true,\n                style: {\n                  fontWeight: 500\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"addYearToList\",\n              className: \"text-muted\",\n              children: [\"(\", row.item[\"year\"], \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            className: \"col-sm-1\",\n            children: row.id === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) :\n            /*#__PURE__*/\n            //changed here\n            _jsxDEV(IconButton, {\n              onClick: e => handleDeleteRow(e, row.id),\n              style: {\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  const [tableData, setTableData] = useState(generateTable());\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows]);\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    list: [],\n    thumbnail1: \"\",\n    thumbnail2: \"\",\n    thumbnail3: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    let arr = [];\n    // if (rows[rows.length - 1].item === \"\") {\n    if (rows[0].item[\"title\"] === \"\") {\n      arr = rows.slice(1, rows.length);\n    } else {\n      arr = rows;\n    }\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n\n    // set thumbnail posters\n    // if (items.length > 1) {\n    //   setThumb1(arr[0].item.poster);\n    // }\n    // if (items.length > 2) {\n    //   setThumb2(arr[1].item.poster);\n    // }\n    // if (items.length > 3) {\n    //   setThumb3(arr[2].item.poster);\n    // }\n\n    // set default list name\n    const n = isNaN(form.name) ? form.name : \"Untitled List\";\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = {\n      ...form\n    };\n    newList.name = n;\n    newList.list = JSON.stringify(items);\n    if (arr.length > 0) {\n      newList.thumbnail1 = arr[0].item.poster;\n    }\n    if (arr.length > 1) {\n      newList.thumbnail2 = arr[1].item.poster;\n    }\n    if (arr.length > 2) {\n      newList.thumbnail3 = arr[2].item.poster;\n    }\n\n    // newList.thumbnail1 = thumb1;\n    // newList.thumbnail2 = thumb2;\n    // newList.thumbnail3 = thumb3;\n\n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      description: \"\",\n      list: \"\",\n      thumbnail1: \"\",\n      thumbnail2: \"\",\n      thumbnail3: \"\"\n    });\n    navigate(\"/lists\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"New List\",\n          multiline: true\n          // rows={1}\n          ,\n          maxRows: 10,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          inputProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input text\n          ,\n          InputLabelProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input label\n          ,\n          onChange: e => updateForm({\n            name: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"ADD DESCRIPTION...\",\n          multiline: true,\n          rows: 3,\n          maxRows: 3,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: e => updateForm({\n            description: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"ADD FILMS...\",\n          variant: \"outlined\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 12,\n            justifyContent: \"center\",\n            display: \"flex\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: [tableData, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-right container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/lists\",\n          class: \"btn btn-light mr-3\",\n          role: \"button\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"SAVE\",\n          className: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateList, \"bDPT5Qla+yicUSuMOELjYf4eeuA=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateList;\nvar _c;\n$RefreshReg$(_c, \"CreateList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Search","Card","Grid","Table","TableBody","TableCell","TableContainer","TableRow","DeleteIcon","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateList","_s","rows","setRows","id","item","title","year","poster","generateRow","handleDeleteRow","event","i","length","prevRows","slice","handleChange","e","value","target","document","getElementById","src","generateTable","children","map","row","sx","border","hidden","component","scope","className","style","height","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","fullWidth","autoComplete","variant","InputProps","disableUnderline","readOnly","IconButton","float","fontWeight","tableData","setTableData","form","setForm","name","description","list","thumbnail1","thumbnail2","thumbnail3","navigate","updateForm","prev","onSubmit","preventDefault","arr","items","push","n","isNaN","newList","JSON","stringify","fetch","method","headers","body","catch","error","window","alert","marginTop","marginLeft","marginRight","class","multiline","maxRows","inputProps","fontSize","InputLabelProps","onChange","type","label","container","lg","justifyContent","display","href","role","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/fuck/client/src/components/createList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Search from \"./searchList/search\";\nimport { Card, Grid, Table, TableBody, TableCell, TableContainer, TableRow} from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\n\n\nexport default function CreateList() {\n  // table stuff\n  const [rows, setRows] = useState([\n    {\n      id: 1,\n      item: {title: \"\", year:\"\", poster: \"\"}\n    }\n  ]);\n\n  const generateRow = () => {\n    return {\n      id: 1,\n      item: {title: \"\", year:\"\", poster: \"\"}\n    }\n  }\n\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item[\"title\"] = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n\n    setRows((prevRows) => {\n      return [\n        ...rows.slice(0, id - 1),\n        ...rows.slice(id),\n      ];\n    });\n  }\n\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    // console.log(\"len=\" + rows.length + \" id=\"+id);\n    // if (id === rows.length) {\n    if (id === 1) {\n      if (value !== \"\") {\n//        setRows((prevRows) => [...prevRows, generateRow()]);\n        for (let i = 0; i < rows.length; i++) {\n            // console.log(rows[i].id);\n            rows[i].id=i+2;\n        }\n       setRows((prevRows) => [generateRow(), ...prevRows]);\n       rows[0].item[\"title\"]=value;\n       rows[0].item[\"year\"]=document.getElementById(\"addYearToList\").value;\n       rows[0].item[\"poster\"]=document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id + 1);\n      }\n    }\n    // console.log(\"new len=\" + rows.length );\n    //comment out\n    // setRows((prevRows) => {\n    //     return prevRows.map( (row, index) => index ===  id ? row : { item: value, ...row}, );\n    //   });\n  }\n\n \n\n  // const handleSave = () => {\n  //   let arr = [];\n  //   if (rows[rows.length - 1].item === \"\") {\n  //     arr = rows.slice(0, -1);\n  //   } else {\n  //     arr = rows;\n  //   }\n  //   let items = [];\n  //   for (let i = 0; i < arr.length; i++) {\n  //     items.push(arr[i].item);\n  //   }\n  //   window.sessionStorage.setItem(\"list\", JSON.stringify(items));\n  // }\n\n  const generateTable = () => {\n    return (\n      <Table>\n        <TableBody>\n          {rows.map((row) => \n          \n          row.id === 1 ? (\n            <TableRow\n            key={row.id}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            hidden\n            > \n            <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n              <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n              <TextField \n                id='addFilmToList'\n                placeholder={\"Add Item\"} \n                onClick={(e) => handleChange(e, row.id)} \n                value={row.item[\"title\"]}\n                fullWidth\n                autoComplete=\"off\"\n                variant=\"standard\"\n                InputProps={{ disableUnderline: true, readOnly: true }}\n              />\n              <p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n              {\n                row.id === 1 ? (<></>) : (     //changed here\n                  <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                    <DeleteIcon />\n                  </IconButton>\n                )\n              }\n            </TableCell>\n          </TableRow>\n          ) : \n          ( \n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }}}\n            > \n              <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n                <img id='addPosterToList' src={row.item[\"poster\"]} style={{height :100}}></img>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n                <TextField \n                  id='addFilmToList'\n                  placeholder={\"Add Item\"} \n                  onClick={(e) => handleChange(e, row.id)} \n                  value={row.item[\"title\"]}\n                  fullWidth\n                  autoComplete=\"off\"\n                  variant=\"standard\"\n                  InputProps={{ disableUnderline: true, readOnly: true, style: {fontWeight: 500}}}\n                />\n                <p id=\"addYearToList\" className=\"text-muted\">({row.item[\"year\"]})</p>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n                {\n                  row.id === 1 ? (<></>) : (     //changed here\n                    <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                      <DeleteIcon />\n                    </IconButton>\n                  )\n                }\n              </TableCell>\n            </TableRow>       \n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n  const [tableData, setTableData] = useState(generateTable());\n\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows])\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    list: [],\n    thumbnail1: \"\",\n    thumbnail2: \"\",\n    thumbnail3: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    let arr = [];\n    // if (rows[rows.length - 1].item === \"\") {\n    if (rows[0].item[\"title\"] === \"\") {\n      arr = rows.slice(1, rows.length);\n    } else {\n      arr = rows;\n    }\n\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n\n    // set thumbnail posters\n    // if (items.length > 1) {\n    //   setThumb1(arr[0].item.poster);\n    // }\n    // if (items.length > 2) {\n    //   setThumb2(arr[1].item.poster);\n    // }\n    // if (items.length > 3) {\n    //   setThumb3(arr[2].item.poster);\n    // }\n\n    // set default list name\n    const n = isNaN(form.name) ? form.name : \"Untitled List\";\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = { ...form };\n    newList.name = n;\n    newList.list = JSON.stringify(items);\n    if (arr.length > 0) {\n      newList.thumbnail1 = arr[0].item.poster;\n    }\n    if (arr.length > 1) {\n      newList.thumbnail2 = arr[1].item.poster;\n    }\n    if (arr.length > 2) {\n      newList.thumbnail3 = arr[2].item.poster;\n    }\n    \n    // newList.thumbnail1 = thumb1;\n    // newList.thumbnail2 = thumb2;\n    // newList.thumbnail3 = thumb3;\n    \n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newList),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", description: \"\", list: \"\", thumbnail1: \"\", thumbnail2: \"\", thumbnail3: \"\" });\n    navigate(\"/lists\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <form onSubmit={onSubmit}>\n      <div class=\"container\">\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"New List\"\n          multiline\n          // rows={1}\n          maxRows={10}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n          InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n          onChange={e => updateForm({ name: e.target.value })}\n          type=\"text\"\n        /> \n        <br></br><br></br>\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"ADD DESCRIPTION...\"\n          multiline\n          rows={3}\n          maxRows={3}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          onChange={e => updateForm({ description: e.target.value })}\n          type=\"text\"\n        />    \n      </div> <br></br>\n      <div class=\"container\"><TextField fullWidth id=\"outlined-basic\" label=\"ADD FILMS...\" variant=\"outlined\" hidden/></div> \n      <div class=\"container\"><Search/></div> <br></br>\n      <div class=\"container\">\n      <Grid container>\n        <Grid item lg={12} justifyContent=\"center\" display=\"flex\">\n          <Card>\n            <TableContainer>\n              {tableData} {/* this variable will change to contain all data */}\n            </TableContainer>\n          </Card>\n        </Grid>\n        </Grid>\n        {/* <table className=\"table table-hover\" id=\"buildinglist\">\n          <tbody></tbody>\n        </table> */}\n            {/* <Input \n              id=\"addtolist\" \n              placeholder={\"Add Item\"}\n              // onChange={(e) => handleChange(e)}\n              onClick={(e) => handleChange(e)}\n              // onClick={(e) => handleChange(e, row.id)} value={row.item} \n              fullWidth\n              autoComplete=\"off\"\n            />\n            <Grid container>\n              <Grid item lg={12} justifyContent=\"center\" display=\"flex\">\n                <Card>\n                  <TableContainer>\n                    {tableData} this variable will change to contain all data */}\n                    {/* <Stack direction={\"row\"}> */}\n                      {/* <Button onClick={handleSave}>\n                        Save\n                      </Button> */}\n                    {/* </Stack> */}\n                  {/* </TableContainer> */}\n                {/* </Card> */}\n              {/* </Grid> */}\n            {/* </Grid> */}\n      </div>\n      <br></br>\n      \n      <div className=\"form-group text-right container\">\n        <a href=\"/lists\" class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>\n        <input\n          type=\"submit\"\n          value=\"SAVE\"\n          className=\"btn btn-success\"\n        />\n      </div>   \n      </form>  \n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}