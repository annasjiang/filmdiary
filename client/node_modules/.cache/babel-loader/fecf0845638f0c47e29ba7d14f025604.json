{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/filmdiary-commit/client/src/components/editList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport poster from './poster.jpg';\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditList() {\n  _s();\n  // get list data from form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:4000/list/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const list = await response.json();\n      if (!list) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(list);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedList = {\n      name: form.name,\n      review: form.description\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:4000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedList),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(`/list/${params.id.toString()}`);\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"New List\",\n          multiline: true,\n          rows: 1,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          inputProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input text\n          ,\n          InputLabelProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input label\n          ,\n          onChange: e => updateForm({\n            name: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"ADD DESCRIPTION...\",\n          multiline: true,\n          rows: 3,\n          maxRows: 3,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: e => updateForm({\n            description: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"ADD FILMS...\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/lists/${params.id}`,\n          class: \"btn btn-light mr-3\",\n          role: \"button\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"SAVE\",\n          className: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n_s(EditList, \"Aci/spUXbZQnj7GV2HruF/+9m8Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditList;\nvar _c;\n$RefreshReg$(_c, \"EditList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","poster","Rating","TextField","AdapterDayjs","LocalizationProvider","DatePicker","format","jsxDEV","_jsxDEV","EditList","_s","form","setForm","name","description","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","list","json","updateForm","value","prev","onSubmit","e","preventDefault","editedList","review","method","body","JSON","stringify","headers","style","marginTop","marginLeft","marginRight","children","class","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","placeholder","multiline","rows","variant","InputProps","disableUnderline","inputProps","fontSize","fontWeight","InputLabelProps","onChange","target","type","maxRows","label","className","href","role","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/filmdiary-commit/client/src/components/editList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport poster from './poster.jpg';\n\nimport Rating from '@mui/material/Rating';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\n\nexport default function EditList() {\n// get list data from form\nconst [form, setForm] = useState({\n  name: \"\",\n  description: \"\",\n  records: [],\n});\nconst params = useParams();\nconst navigate = useNavigate();\n\nuseEffect(() => {\n  async function fetchData() {\n    const id = params.id.toString();\n    const response = await fetch(`http://localhost:4000/list/${params.id.toString()}`);\n\n    if (!response.ok) {\n      const message = `An error has occured: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n\n    const list = await response.json();\n    if (!list) {\n      window.alert(`Record with id ${id} not found`);\n      navigate(\"/\");\n      return;\n    }\n\n    setForm(list);\n  }\n\n  fetchData();\n\n  return;\n}, [params.id, navigate]);\n\n// These methods will update the state properties.\nfunction updateForm(value) {\n  return setForm((prev) => {\n    return { ...prev, ...value };\n  });\n}\n\nasync function onSubmit(e) {\n  e.preventDefault();\n\n  const editedList = {\n    name: form.name,\n    review: form.description,\n  };\n\n  // This will send a post request to update the data in the database.\n  await fetch(`http://localhost:4000/update/${params.id}`, {\n    method: \"POST\",\n    body: JSON.stringify(editedList),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  });\n\n  navigate(`/list/${params.id.toString()}`);\n}\n\n// This following section will display the form that takes input from the user to update the data.\nreturn (\n  <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n    <form onSubmit={onSubmit}>\n    <div class=\"container\">\n    \n    <h3>Edit List</h3></div> <br></br>\n    <div class=\"container\">\n    <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"New List\"\n          multiline\n          rows={1}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n          InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n          onChange={e => updateForm({ name: e.target.value })}\n          type=\"text\"\n        />\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"ADD DESCRIPTION...\"\n          multiline\n          rows={3}\n          maxRows={3}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          onChange={e => updateForm({ description: e.target.value })}\n          type=\"text\"\n        />    \n      </div> <br></br>\n      <div class=\"container\"><TextField fullWidth id=\"outlined-basic\" label=\"ADD FILMS...\" variant=\"outlined\" /></div> \n      <br></br>\n\n              {/* cancel/submit button */}\n              <div className=\"form-group text-right\">\n                <a href={`/lists/${params.id}`} class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>                 \n                <input\n                  type=\"submit\"\n                  value=\"SAVE\"\n                  className=\"btn btn-success\"\n                />\n              </div>\n            </form>\n          </div>  \n);\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,cAAc;AACrD,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACnC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC;IAC/BiB,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGlB,SAAS,EAAE;EAC1B,MAAMmB,QAAQ,GAAGlB,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACd,eAAeqB,SAASA,CAAA,EAAG;MACzB,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BN,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAG,EAAC,CAAC;MAElF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,yBAAwBH,QAAQ,CAACI,UAAW,EAAC;QAC9DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMI,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MAClC,IAAI,CAACD,IAAI,EAAE;QACTF,MAAM,CAACC,KAAK,CAAE,kBAAiBR,EAAG,YAAW,CAAC;QAC9CF,QAAQ,CAAC,GAAG,CAAC;QACb;MACF;MAEAL,OAAO,CAACgB,IAAI,CAAC;IACf;IAEAV,SAAS,EAAE;IAEX;EACF,CAAC,EAAE,CAACF,MAAM,CAACG,EAAE,EAAEF,QAAQ,CAAC,CAAC;;EAEzB;EACA,SAASa,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAOnB,OAAO,CAAEoB,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEA,eAAeE,QAAQA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,UAAU,GAAG;MACjBvB,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfwB,MAAM,EAAE1B,IAAI,CAACG;IACf,CAAC;;IAED;IACA,MAAMQ,KAAK,CAAE,gCAA+BN,MAAM,CAACG,EAAG,EAAC,EAAE;MACvDmB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC;MAChCM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFzB,QAAQ,CAAE,SAAQD,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAG,EAAC,CAAC;EAC3C;;EAEA;EACA,oBACEZ,OAAA;IAAKmC,KAAK,EAAE;MAACC,SAAS,EAAE,GAAG;MAAEC,UAAU,EAAE,GAAG;MAAEC,WAAW,EAAE;IAAG,CAAE;IAAAC,QAAA,eAC9DvC,OAAA;MAAMyB,QAAQ,EAAEA,QAAS;MAAAc,QAAA,gBACzBvC,OAAA;QAAKwC,KAAK,EAAC,WAAW;QAAAD,QAAA,eAEtBvC,OAAA;UAAAuC,QAAA,EAAI;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,KAAC,eAAA5C,OAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAClC5C,OAAA;QAAKwC,KAAK,EAAC,WAAW;QAAAD,QAAA,gBACtBvC,OAAA,CAACN,SAAS;UACJmD,SAAS;UACTlC,EAAE,EAAC,6BAA6B;UAChCmC,WAAW,EAAC,UAAU;UACtBC,SAAS;UACTC,IAAI,EAAE,CAAE;UACRC,OAAO,EAAC,UAAU;UAClBC,UAAU,EAAE;YAAEC,gBAAgB,EAAE;UAAK,CAAE;UACvCC,UAAU,EAAE;YAACjB,KAAK,EAAE;cAACkB,QAAQ,EAAE,EAAE;cAAEC,UAAU,EAAE;YAAG;UAAC,CAAE,CAAC;UAAA;UACtDC,eAAe,EAAE;YAACpB,KAAK,EAAE;cAACkB,QAAQ,EAAE,EAAE;cAAEC,UAAU,EAAE;YAAG;UAAC,CAAE,CAAC;UAAA;UAC3DE,QAAQ,EAAE9B,CAAC,IAAIJ,UAAU,CAAC;YAAEjB,IAAI,EAAEqB,CAAC,CAAC+B,MAAM,CAAClC;UAAM,CAAC,CAAE;UACpDmC,IAAI,EAAC;QAAM;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACX,eACF5C,OAAA,CAACN,SAAS;UACRmD,SAAS;UACTlC,EAAE,EAAC,6BAA6B;UAChCmC,WAAW,EAAC,oBAAoB;UAChCC,SAAS;UACTC,IAAI,EAAE,CAAE;UACRW,OAAO,EAAE,CAAE;UACXV,OAAO,EAAC,UAAU;UAClBC,UAAU,EAAE;YAAEC,gBAAgB,EAAE;UAAK,CAAE;UACvCK,QAAQ,EAAE9B,CAAC,IAAIJ,UAAU,CAAC;YAAEhB,WAAW,EAAEoB,CAAC,CAAC+B,MAAM,CAAClC;UAAM,CAAC,CAAE;UAC3DmC,IAAI,EAAC;QAAM;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,KAAC,eAAA5C,OAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAChB5C,OAAA;QAAKwC,KAAK,EAAC,WAAW;QAAAD,QAAA,eAACvC,OAAA,CAACN,SAAS;UAACmD,SAAS;UAAClC,EAAE,EAAC,gBAAgB;UAACiD,KAAK,EAAC,cAAc;UAACX,OAAO,EAAC;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAChH5C,OAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAGD5C,OAAA;QAAK6D,SAAS,EAAC,uBAAuB;QAAAtB,QAAA,gBACpCvC,OAAA;UAAG8D,IAAI,EAAG,UAAStD,MAAM,CAACG,EAAG,EAAE;UAAC6B,KAAK,EAAC,oBAAoB;UAACuB,IAAI,EAAC,QAAQ;UAAAxB,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eACnF5C,OAAA;UACE0D,IAAI,EAAC,QAAQ;UACbnC,KAAK,EAAC,MAAM;UACZsC,SAAS,EAAC;QAAiB;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEhB;AAAC1C,EAAA,CAhHuBD,QAAQ;EAAA,QAOjBX,SAAS,EACPC,WAAW;AAAA;AAAAyE,EAAA,GARJ/D,QAAQ;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}