{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/search/client/src/components/createList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Search from \"./searchList/search\";\nimport { Button, Card, Grid, Input, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Stack, Snackbar, Slide } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateList() {\n  _s();\n  // table stuff\n  const [rows, setRows] = useState([{\n    id: 1,\n    item: \"\",\n    poster: \"\"\n  }]);\n  const generateRow = () => {\n    return {\n      //id: rows.length + 1,\n      id: 1,\n      item: \"\",\n      poster: \"\"\n    };\n  };\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n    setRows(prevRows => {\n      return [...rows.slice(0, id - 1), ...rows.slice(id)];\n    });\n  };\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    console.log(\"len=\" + rows.length + \" id=\" + id);\n    // if (id === rows.length) {\n    if (id === 1) {\n      if (value !== \"\") {\n        //        setRows((prevRows) => [...prevRows, generateRow()]);\n        for (let i = 0; i < rows.length; i++) {\n          console.log(rows[i].id);\n          rows[i].id = i + 2;\n        }\n        setRows(prevRows => [generateRow(), ...prevRows]);\n        rows[0].item = value;\n        rows[0].poster = document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id + 1);\n      }\n    }\n    console.log(\"new len=\" + rows.length);\n    //comment out\n    // setRows((prevRows) => {\n    //     return prevRows.map( (row, index) => index ===  id ? row : { item: value, ...row}, );\n    //   });\n  };\n\n  const handleSave = () => {\n    let arr = [];\n    if (rows[rows.length - 1].item === \"\") {\n      arr = rows.slice(0, -1);\n    } else {\n      arr = rows;\n    }\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n    window.sessionStorage.setItem(\"list\", JSON.stringify(items));\n  };\n  const generateTable = () => {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"poster\",\n            className: \"col-sm-1\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"addPosterToList\",\n              src: row.poster,\n              style: {\n                height: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            id: \"name\",\n            className: \"col-sm-7\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"addFilmToList\",\n              placeholder: \"Add Item\",\n              onClick: e => handleChange(e, row.id),\n              value: row.item,\n              fullWidth: true,\n              autoComplete: \"off\",\n              variant: \"standard\",\n              InputProps: {\n                disableUnderline: true,\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            className: \"col-sm-1\",\n            children: row.id === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) :\n            /*#__PURE__*/\n            //changed here\n            _jsxDEV(IconButton, {\n              onClick: e => handleDeleteRow(e, row.id),\n              style: {\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n  const [tableData, setTableData] = useState(generateTable());\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows]);\n\n  // useEffect(() => {\n  //  if (window.sessionStorage.getItem(\"list\")) {\n  // //   let sizes_arr = window.sessionStorage.getItem(\"list\").split(',');\n  //    let sizes_arr = JSON.parse(window.sessionStorage.getItem(\"list\")); //.split(',');\n  //     sizes_arr.push(\"\")\n  //     let rows_arr = [];\n  //     for (let i = 0; i < sizes_arr.length; i++) {\n  //       rows_arr.push({\n  //         id: i+1,\n  //         item: sizes_arr[i]\n  //       })\n  //     }\n  //     setRows(rows_arr);\n  //     setTableData(generateTable())\n  //   }\n  // }, [])\n\n  // const [rows, setRows] = useState([\n  //   {\n  //     id: 1,\n  //     item: \"\",\n  //   }\n  // ]);\n\n  // const generateRow = () => {\n  //   return {\n  //     id: rows.length + 1,\n  //     item: \"\",\n  //   }\n  // }\n\n  // const handleDeleteRow = (event, id) => {\n  //   setRows(rows => {\n  //     rows[id - 1].item = \"\";\n  //     for (let i = id - 1; i < rows.length; i++) {\n  //       rows[i].id--;\n  //     }\n  //   });\n\n  //   setRows((prevRows) => {\n  //     return [\n  //       ...rows.slice(0, id - 1),\n  //       ...rows.slice(id),\n  //     ];\n  //   });\n  // }\n\n  // const handleChange = (e) => {\n  //   let value = e.target.value;\n\n  //   // if (id === rows.length) {\n  //     if (value !== \"\") {\n  //       setRows((prevRows) => [...prevRows], generateRow());\n  //     }\n  //   // } \n  //   // else if (id + 1 === rows.length) {\n  //   //   if (value === \"\") {\n  //   //     handleDeleteRow(e, id+1);\n  //   //   }\n  //   // }\n  //   setRows((prevRows) => {\n  //     return prevRows.map((row, index) =>\n  //       // index === id - 1 ? { ...row, item: value} : row,\n  //       index !== rows.length + 1 ? { ...row, item: value} : row,\n  //     );\n  //   });\n  // }\n\n  // // const handleSave = () => {\n  // //   let arr = [];\n  // //   if (rows[rows.length - 1].item === \"\") {\n  // //     arr = rows.slice(0, -1);\n  // //   } else {\n  // //     arr = rows;\n  // //   }\n\n  // //   let items = [];\n  // //   for (let i = 0; i < arr.length; i++) {\n  // //     items.push(arr[i].item);\n  // //   }\n\n  // //   window.sessionStorage.setItem(\"list\", JSON.stringify(items));\n  // // }\n\n  // const generateTable = () => {\n  //   return (\n  //     <Table id=\"list-table\">\n  //       <TableBody>\n  //         {rows.map((row) => (\n  //           <TableRow\n  //             key={row.id}\n  //             sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n  //           >\n  //             <TableCell component=\"th\" scope=\"row\">\n  //               <Input \n  //                 id=\"addtolist\" \n  //                 placeholder={\"Add Item\"} \n  //                 value={row.item}\n  //                 onChange={(e) => handleChange(e, row.id)}\n  //                 // onClick={(e) => handleChange(e, row.id)}\n  //                 fullWidth\n  //                 autoComplete=\"off\"\n  //               />\n\n  //             </TableCell>\n  //             <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n  //               {\n  //                 row.id === rows.length ? (<></>) : (\n  //                   <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n  //                     <DeleteIcon/>\n  //                   </IconButton>\n  //                 )\n  //               }\n  //             </TableCell>\n  //           </TableRow>\n  //         ))}\n  //       </TableBody>\n  //     </Table>\n  //   );\n  // }\n\n  // const [tableData, setTableData] = useState(generateTable());\n\n  // useEffect(() => {\n  //   setTableData(generateTable());\n  // }, [rows])\n\n  // read info from local session and put into table\n  // useEffect(() => {\n  //   if (window.sessionStorage.getItem(\"list\")) {\n  //     let sizes_arr = JSON.parse(window.sessionStorage.getItem(\"list\"));\n  //     sizes_arr.push(\"\")\n  //     let rows_arr = [];\n  //     for (let i = 0; i < sizes_arr.length; i++) {\n  //       rows_arr.push({\n  //         id: i+1,\n  //         item: sizes_arr[i]\n  //       })\n  //     }\n\n  //     setRows(rows_arr);\n  //     setTableData(generateTable())\n  //   }\n  // }, [])\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    list: []\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    let arr = [];\n    if (rows[rows.length - 1].item === \"\") {\n      arr = rows.slice(0, -1);\n    } else {\n      arr = rows;\n    }\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n    e.preventDefault();\n    // set default list name\n    const n = isNaN(form.name) ? form.name : \"Untitled List\";\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = {\n      ...form\n    };\n    newList.name = n;\n    newList.list = items;\n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      description: \"\"\n    });\n    navigate(\"/lists\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100,\n      marginLeft: 300,\n      marginRight: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"New List\",\n          multiline: true,\n          rows: 1,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          inputProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input text\n          ,\n          InputLabelProps: {\n            style: {\n              fontSize: 28,\n              fontWeight: 500\n            }\n          } // font size of input label\n          ,\n          onChange: e => updateForm({\n            name: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-multiline-flexible\",\n          placeholder: \"ADD DESCRIPTION...\",\n          multiline: true,\n          rows: 3,\n          maxRows: 3,\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: e => updateForm({\n            description: e.target.value\n          }),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"ADD FILMS...\",\n          variant: \"outlined\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 12,\n            justifyContent: \"center\",\n            display: \"flex\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: [tableData, \" \", /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group text-right container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/lists\",\n          class: \"btn btn-light mr-3\",\n          role: \"button\",\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"SAVE\",\n          className: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateList, \"rLGOiZUQYLJUQqUV7o0qK7Fka0E=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateList;\nvar _c;\n$RefreshReg$(_c, \"CreateList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Search","Button","Card","Grid","Input","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Stack","Snackbar","Slide","DeleteIcon","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateList","_s","rows","setRows","id","item","poster","generateRow","handleDeleteRow","event","i","length","prevRows","slice","handleChange","e","value","target","console","log","document","getElementById","src","handleSave","arr","items","push","window","sessionStorage","setItem","JSON","stringify","generateTable","children","map","row","sx","border","component","scope","className","style","height","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","fullWidth","autoComplete","variant","InputProps","disableUnderline","readOnly","float","tableData","setTableData","form","setForm","name","description","list","navigate","updateForm","prev","onSubmit","preventDefault","n","isNaN","newList","fetch","method","headers","body","catch","error","alert","marginTop","marginLeft","marginRight","class","multiline","inputProps","fontSize","fontWeight","InputLabelProps","onChange","type","maxRows","label","hidden","container","lg","justifyContent","display","direction","href","role","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/search/client/src/components/createList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Search from \"./searchList/search\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Input,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Stack,\n  Snackbar,\n  Slide,\n} from \"@mui/material\";\n\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport TextField from '@mui/material/TextField';\n\nexport default function CreateList() {\n  // table stuff\n  const [rows, setRows] = useState([\n    {\n      id: 1,\n      item: \"\",\n      poster: \"\",\n    }\n  ]);\n\n  const generateRow = () => {\n    return {\n        //id: rows.length + 1,\n      id: 1,\n      item: \"\",\n      poster: \"\",\n    }\n  }\n\n  const handleDeleteRow = (event, id) => {\n    setRows(rows => {\n      rows[id - 1].item = \"\";\n      for (let i = id - 1; i < rows.length; i++) {\n        rows[i].id--;\n      }\n    });\n\n    setRows((prevRows) => {\n      return [\n        ...rows.slice(0, id - 1),\n        ...rows.slice(id),\n      ];\n    });\n  }\n\n  const handleChange = (e, id) => {\n    let value = e.target.value;\n    console.log(\"len=\" + rows.length + \" id=\"+id);\n    // if (id === rows.length) {\n    if (id === 1) {\n      if (value !== \"\") {\n//        setRows((prevRows) => [...prevRows, generateRow()]);\n        for (let i = 0; i < rows.length; i++) {\n            console.log(rows[i].id);\n            rows[i].id=i+2;\n        }\n       setRows((prevRows) => [generateRow(), ...prevRows]);\n       rows[0].item=value;\n       rows[0].poster=document.getElementById(\"addPosterToList\").src;\n      }\n    } else if (id + 1 === rows.length) {\n      if (value === \"\") {\n        handleDeleteRow(e, id+1);\n      }\n    }\n    console.log(\"new len=\" + rows.length );\n    //comment out\n    // setRows((prevRows) => {\n    //     return prevRows.map( (row, index) => index ===  id ? row : { item: value, ...row}, );\n    //   });\n  }\n\n \n\n  const handleSave = () => {\n    let arr = [];\n    if (rows[rows.length - 1].item === \"\") {\n      arr = rows.slice(0, -1);\n    } else {\n      arr = rows;\n    }\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n    window.sessionStorage.setItem(\"list\", JSON.stringify(items));\n  }\n\n  const generateTable = () => {\n    return (\n      <Table>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\" id=\"poster\" className=\"col-sm-1\">\n                <img id='addPosterToList' src={row.poster} style={{height :100}}></img>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" id=\"name\" className=\"col-sm-7\">\n                <TextField \n                  id='addFilmToList'\n                  placeholder={\"Add Item\"} \n                  onClick={(e) => handleChange(e, row.id)} \n                  value={row.item}\n                  fullWidth\n                  autoComplete=\"off\"\n                  variant=\"standard\"\n                  InputProps={{ disableUnderline: true, readOnly: true }}\n                />\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n                {\n                  row.id === 1 ? (<></>) : (     //changed here\n                    <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n                      <DeleteIcon />\n                    </IconButton>\n                  )\n                }\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n  const [tableData, setTableData] = useState(generateTable());\n\n  useEffect(() => {\n    setTableData(generateTable());\n  }, [rows])\n\n  // useEffect(() => {\n  //  if (window.sessionStorage.getItem(\"list\")) {\n  // //   let sizes_arr = window.sessionStorage.getItem(\"list\").split(',');\n  //    let sizes_arr = JSON.parse(window.sessionStorage.getItem(\"list\")); //.split(',');\n  //     sizes_arr.push(\"\")\n  //     let rows_arr = [];\n  //     for (let i = 0; i < sizes_arr.length; i++) {\n  //       rows_arr.push({\n  //         id: i+1,\n  //         item: sizes_arr[i]\n  //       })\n  //     }\n  //     setRows(rows_arr);\n  //     setTableData(generateTable())\n  //   }\n  // }, [])\n\n  // const [rows, setRows] = useState([\n  //   {\n  //     id: 1,\n  //     item: \"\",\n  //   }\n  // ]);\n\n  // const generateRow = () => {\n  //   return {\n  //     id: rows.length + 1,\n  //     item: \"\",\n  //   }\n  // }\n\n  // const handleDeleteRow = (event, id) => {\n  //   setRows(rows => {\n  //     rows[id - 1].item = \"\";\n  //     for (let i = id - 1; i < rows.length; i++) {\n  //       rows[i].id--;\n  //     }\n  //   });\n\n  //   setRows((prevRows) => {\n  //     return [\n  //       ...rows.slice(0, id - 1),\n  //       ...rows.slice(id),\n  //     ];\n  //   });\n  // }\n\n  // const handleChange = (e) => {\n  //   let value = e.target.value;\n\n  //   // if (id === rows.length) {\n  //     if (value !== \"\") {\n  //       setRows((prevRows) => [...prevRows], generateRow());\n  //     }\n  //   // } \n  //   // else if (id + 1 === rows.length) {\n  //   //   if (value === \"\") {\n  //   //     handleDeleteRow(e, id+1);\n  //   //   }\n  //   // }\n  //   setRows((prevRows) => {\n  //     return prevRows.map((row, index) =>\n  //       // index === id - 1 ? { ...row, item: value} : row,\n  //       index !== rows.length + 1 ? { ...row, item: value} : row,\n  //     );\n  //   });\n  // }\n\n  // // const handleSave = () => {\n  // //   let arr = [];\n  // //   if (rows[rows.length - 1].item === \"\") {\n  // //     arr = rows.slice(0, -1);\n  // //   } else {\n  // //     arr = rows;\n  // //   }\n\n  // //   let items = [];\n  // //   for (let i = 0; i < arr.length; i++) {\n  // //     items.push(arr[i].item);\n  // //   }\n\n  // //   window.sessionStorage.setItem(\"list\", JSON.stringify(items));\n  // // }\n\n  // const generateTable = () => {\n  //   return (\n  //     <Table id=\"list-table\">\n  //       <TableBody>\n  //         {rows.map((row) => (\n  //           <TableRow\n  //             key={row.id}\n  //             sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n  //           >\n  //             <TableCell component=\"th\" scope=\"row\">\n  //               <Input \n  //                 id=\"addtolist\" \n  //                 placeholder={\"Add Item\"} \n  //                 value={row.item}\n  //                 onChange={(e) => handleChange(e, row.id)}\n  //                 // onClick={(e) => handleChange(e, row.id)}\n  //                 fullWidth\n  //                 autoComplete=\"off\"\n  //               />\n                \n\n  //             </TableCell>\n  //             <TableCell component=\"th\" scope=\"row\" className=\"col-sm-1\">\n  //               {\n  //                 row.id === rows.length ? (<></>) : (\n  //                   <IconButton onClick={(e) => handleDeleteRow(e, row.id)} style={{float:\"right\"}}>\n  //                     <DeleteIcon/>\n  //                   </IconButton>\n  //                 )\n  //               }\n  //             </TableCell>\n  //           </TableRow>\n  //         ))}\n  //       </TableBody>\n  //     </Table>\n  //   );\n  // }\n\n  // const [tableData, setTableData] = useState(generateTable());\n\n  // useEffect(() => {\n  //   setTableData(generateTable());\n  // }, [rows])\n\n  // read info from local session and put into table\n  // useEffect(() => {\n  //   if (window.sessionStorage.getItem(\"list\")) {\n  //     let sizes_arr = JSON.parse(window.sessionStorage.getItem(\"list\"));\n  //     sizes_arr.push(\"\")\n  //     let rows_arr = [];\n  //     for (let i = 0; i < sizes_arr.length; i++) {\n  //       rows_arr.push({\n  //         id: i+1,\n  //         item: sizes_arr[i]\n  //       })\n  //     }\n      \n  //     setRows(rows_arr);\n  //     setTableData(generateTable())\n  //   }\n  // }, [])\n\n  // form\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    list: [],\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    let arr = [];\n    if (rows[rows.length - 1].item === \"\") {\n      arr = rows.slice(0, -1);\n    } else {\n      arr = rows;\n    }\n\n    let items = [];\n    for (let i = 0; i < arr.length; i++) {\n      items.push(arr[i].item);\n    }\n\n    e.preventDefault();\n    // set default list name\n    const n = isNaN(form.name) ? form.name : \"Untitled List\";\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newList = { ...form };\n    newList.name = n;\n    newList.list = items;\n    \n    await fetch(\"http://localhost:4000/list/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newList),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", description: \"\" });\n    navigate(\"/lists\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div style={{marginTop: 100, marginLeft: 300, marginRight: 300}}>\n      <form onSubmit={onSubmit}>\n      <div class=\"container\">\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"New List\"\n          multiline\n          rows={1}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          inputProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input text\n          InputLabelProps={{style: {fontSize: 28, fontWeight: 500}}} // font size of input label\n          onChange={e => updateForm({ name: e.target.value })}\n          type=\"text\"\n        /> \n        <br></br><br></br>\n        <TextField\n          fullWidth\n          id=\"outlined-multiline-flexible\"\n          placeholder=\"ADD DESCRIPTION...\"\n          multiline\n          rows={3}\n          maxRows={3}\n          variant=\"standard\"\n          InputProps={{ disableUnderline: true }}\n          onChange={e => updateForm({ description: e.target.value })}\n          type=\"text\"\n        />    \n      </div> <br></br>\n      <div class=\"container\"><TextField fullWidth id=\"outlined-basic\" label=\"ADD FILMS...\" variant=\"outlined\" hidden/></div> \n      <div class=\"container\"><Search/></div>\n      <div class=\"container\">\n      <Grid container>\n\n        <Grid item lg={12} justifyContent=\"center\" display=\"flex\">\n          <Card>\n            <TableContainer>\n              {tableData} {/* this variable will change to contain all data */}\n              <Stack direction={\"row\"}>\n                {/* <Button onClick={handleSave}>\n                  Save\n                </Button> */}\n              </Stack>\n            </TableContainer>\n          </Card>\n        </Grid>\n        </Grid>\n        {/* <table className=\"table table-hover\" id=\"buildinglist\">\n          <tbody></tbody>\n        </table> */}\n            {/* <Input \n              id=\"addtolist\" \n              placeholder={\"Add Item\"}\n              // onChange={(e) => handleChange(e)}\n              onClick={(e) => handleChange(e)}\n              // onClick={(e) => handleChange(e, row.id)} value={row.item} \n              fullWidth\n              autoComplete=\"off\"\n            />\n            <Grid container>\n              <Grid item lg={12} justifyContent=\"center\" display=\"flex\">\n                <Card>\n                  <TableContainer>\n                    {tableData} this variable will change to contain all data */}\n                    {/* <Stack direction={\"row\"}> */}\n                      {/* <Button onClick={handleSave}>\n                        Save\n                      </Button> */}\n                    {/* </Stack> */}\n                  {/* </TableContainer> */}\n                {/* </Card> */}\n              {/* </Grid> */}\n            {/* </Grid> */}\n      </div>\n      <br></br>\n      \n      <div className=\"form-group text-right container\">\n        <a href=\"/lists\" class=\"btn btn-light mr-3\" role=\"button\">CANCEL</a>\n        <input\n          type=\"submit\"\n          value=\"SAVE\"\n          className=\"btn btn-success\"\n        />\n      </div>   \n      </form>  \n    </div>\n  );\n}\n"],"mappings":"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AEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA,MAAM,CAACwD,IAAI,EAAEC,OAAO,CAAC,GAAGlF,QAAQ,CAAC;IAC/BmF,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGrF,WAAW,EAAE;;EAE9B;EACA,SAASsF,UAAUA,CAAChD,KAAK,EAAE;IACzB,OAAO2C,OAAO,CAAEM,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGjD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;;EAEA;EACA,eAAekD,QAAQA,CAACnD,CAAC,EAAE;IACzB,IAAIS,GAAG,GAAG,EAAE;IACZ,IAAItB,IAAI,CAACA,IAAI,CAACS,MAAM,GAAG,CAAC,CAAC,CAACN,IAAI,KAAK,EAAE,EAAE;MACrCmB,GAAG,GAAGtB,IAAI,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACLW,GAAG,GAAGtB,IAAI;IACZ;IAEA,IAAIuB,KAAK,GAAG,EAAE;IACd,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,GAAG,CAACb,MAAM,EAAED,CAAC,EAAE,EAAE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"},"metadata":{},"sourceType":"module"}