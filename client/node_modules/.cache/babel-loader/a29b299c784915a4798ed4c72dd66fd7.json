{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/search/client/src/components/search/movie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport defaultposter from './defaultposter.jpeg';\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = props => {\n  _s();\n  const {\n    title,\n    poster_path,\n    vote_average,\n    id,\n    release_date\n  } = props.item;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const year = release_date.substring(0, 4);\n  const [selectedTitle, setSelectedTitle] = React.useState();\n\n  // form\n  const [form, setForm] = useState({\n    selectedtitle: \"\",\n    selectedposter: \"\",\n    selectedid: \"\"\n  });\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    const newPerson = {\n      ...form\n    };\n\n    // await fetch(\"http://localhost:4000/record/add\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(newPerson),\n    // })\n    // .catch(error => {\n    //   window.alert(error);\n    //   return;\n    // });\n\n    setForm({\n      selectedtitle: \"\",\n      selectedposter: \"\",\n      selectedid: \"\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        class: \"col-sm-1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          style: {\n            height: 80\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"text-muted\",\n          children: [\"(\", year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCard, \"VvKnaq270TygFIT+nF8VlZENXzA=\");\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useState","defaultposter","classes","truncStr","jsxDEV","_jsxDEV","MovieCard","props","_s","title","poster_path","vote_average","id","release_date","item","poster","year","substring","selectedTitle","setSelectedTitle","form","setForm","selectedtitle","selectedposter","selectedid","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","children","class","src","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/search/client/src/components/search/movie.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport defaultposter from './defaultposter.jpeg';\n\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\n\nconst MovieCard = props => {\n  const { title, poster_path, vote_average, id, release_date} = props.item;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const year = release_date.substring(0, 4);\n\n  const [selectedTitle, setSelectedTitle] = React.useState();\n\n    // form\n    const [form, setForm] = useState({\n      selectedtitle: \"\",\n      selectedposter: \"\",\n      selectedid: \"\",\n    });\n  \n    // These methods will update the state properties.\n    function updateForm(value) {\n      return setForm((prev) => {\n        return { ...prev, ...value };\n      });\n    }\n  \n    // This function will handle the submission.\n    async function onSubmit(e) {\n      e.preventDefault();\n      const newPerson = { ...form };\n  \n      // await fetch(\"http://localhost:4000/record/add\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify(newPerson),\n      // })\n      // .catch(error => {\n      //   window.alert(error);\n      //   return;\n      // });\n  \n      setForm({ selectedtitle: \"\", selectedposter: \"\", selectedid: \"\"});\n    }\n\n  return (\n    <div>\n      <tr> \n        <td class=\"col-sm-1\"><img src={poster} style={{height: 80}}></img></td>\n        <td><b>{title}</b> <p class=\"text-muted\">({year})</p></td>\n      </tr>\n    </div>\n  );\n\n};\n\nexport default MovieCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,sBAAsB;AAEhD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,QAAQ,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACzB,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,YAAY;IAAEC,EAAE;IAAEC;EAAY,CAAC,GAAGN,KAAK,CAACO,IAAI;EACxE,MAAMC,MAAM,GAAGL,WAAW,IAAI,IAAI,GAAI,iCAAgCA,WAAY,EAAC,GAAGT,aAAa;EACnG,MAAMe,IAAI,GAAGH,YAAY,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAEzC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,KAAK,CAACC,QAAQ,EAAE;;EAExD;EACA,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC;IAC/BsB,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE;EACd,CAAC,CAAC;;EAEF;EACA,SAASC,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAOL,OAAO,CAAEM,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;;EAEA;EACA,eAAeE,QAAQA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,SAAS,GAAG;MAAE,GAAGX;IAAK,CAAC;;IAE7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,OAAO,CAAC;MAAEC,aAAa,EAAE,EAAE;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAC,CAAC;EACnE;EAEF,oBACEnB,OAAA;IAAA2B,QAAA,eACE3B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAI4B,KAAK,EAAC,UAAU;QAAAD,QAAA,eAAC3B,OAAA;UAAK6B,GAAG,EAAEnB,MAAO;UAACoB,KAAK,EAAE;YAACC,MAAM,EAAE;UAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvEnC,OAAA;QAAA2B,QAAA,gBAAI3B,OAAA;UAAA2B,QAAA,EAAIvB;QAAK;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,KAAC,eAAAnC,OAAA;UAAG4B,KAAK,EAAC,YAAY;UAAAD,QAAA,GAAC,GAAC,EAAChB,IAAI,EAAC,GAAC;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAGV,CAAC;AAAChC,EAAA,CAlDIF,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}