{"ast":null,"code":"var _jsxFileName = \"/Users/annajiang/Desktop/search/client/src/components/search/movie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport defaultposter from './defaultposter.jpeg';\nimport * as ReactDOM from 'react-dom';\nimport Search from \"./search\";\nimport Movies from \"./movies\";\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = props => {\n  _s();\n  const {\n    title,\n    poster_path,\n    id,\n    release_date\n  } = props.item;\n  const posterthumb = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/original${poster_path}` : defaultposter;\n  const year = release_date.substring(0, 4);\n  var selectedTitle = React.useRef();\n  function triggerInput(enteredName, enteredValue) {\n    const input = document.getElementById(enteredName);\n    const lastValue = input.value;\n    input.value = enteredValue;\n    const event = new Event(\"input\", {\n      bubbles: true\n    });\n    const tracker = input._valueTracker;\n    if (tracker) {\n      tracker.setValue(lastValue);\n    }\n    input.dispatchEvent(event);\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    onClick: () => {\n      // selectedTitle = title;\n      document.getElementById('searchbar').value = title;\n      document.getElementById('searchbar').ref = title;\n\n      // var input = document.getElementById('searchbar');\n      // var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, \"value\").set;\n      // nativeInputValueSetter.call(input, title);\n      // var inputEvent = new Event('input', { bubbles: true});\n      // input.dispatchEvent(inputEvent);\n\n      // triggerInput('searchbar', title);\n      // const event = new Event('input');\n      // document.getElementById('searchbar').dispatchEvent(event);\n      // document.getElementById('searchbar').change({target: {value: title}});\n      // document.getElementById('searchbar').onChange();\n\n      // update the hidden name thing and poster for the form\n      document.getElementById('name-hidden').value = title;\n      document.getElementById('poster').src = poster;\n      document.getElementById('searchbar').click();\n      document.getElementById('searchbar').dispatchEvent(new Event('click'));\n\n      // hide after selecting search, but how to restart search??\n      document.getElementById('searchresults').style.visibility = \"hidden\";\n      // ReactDOM.render(<Movies />, document.querySelector('#searchresults'));\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      class: \"col-sm-1\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: posterthumb,\n        style: {\n          height: 80\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"text-muted\",\n        children: [\"(\", year, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCard, \"COxpZ+7oB8OsXjkiFQCxC/6zrF4=\");\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useState","defaultposter","ReactDOM","Search","Movies","classes","truncStr","jsxDEV","_jsxDEV","MovieCard","props","_s","title","poster_path","id","release_date","item","posterthumb","poster","year","substring","selectedTitle","useRef","triggerInput","enteredName","enteredValue","input","document","getElementById","lastValue","value","event","Event","bubbles","tracker","_valueTracker","setValue","dispatchEvent","onClick","ref","src","click","style","visibility","children","class","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annajiang/Desktop/search/client/src/components/search/movie.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport defaultposter from './defaultposter.jpeg';\nimport * as ReactDOM from 'react-dom';\nimport Search from \"./search\";\nimport Movies from \"./movies\";\n\nimport classes from \"./movie.module.css\";\nimport { truncStr } from \"./utils\";\n\nconst MovieCard = props => {\n  const { title, poster_path, id, release_date} = props.item;\n  const posterthumb = poster_path != null ? `http://image.tmdb.org/t/p/w185${poster_path}` : defaultposter;\n  const poster = poster_path != null ? `http://image.tmdb.org/t/p/original${poster_path}` : defaultposter;\n\n  const year = release_date.substring(0, 4);\n\n  var selectedTitle = React.useRef();\n\n  function triggerInput(enteredName, enteredValue) {\n    const input = document.getElementById(enteredName); \n    const lastValue = input.value;\n    input.value = enteredValue;\n    const event = new Event(\"input\", { bubbles: true });\n    const tracker = input._valueTracker;\n    if (tracker) {\n      tracker.setValue(lastValue);\n    }\n    input.dispatchEvent(event);\n  }\n\n  return (\n    <tr onClick={() => {\n      // selectedTitle = title;\n      document.getElementById('searchbar').value = title;\n      document.getElementById('searchbar').ref = title;\n\n      \n\n      // var input = document.getElementById('searchbar');\n      // var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, \"value\").set;\n      // nativeInputValueSetter.call(input, title);\n      // var inputEvent = new Event('input', { bubbles: true});\n      // input.dispatchEvent(inputEvent);\n\n      // triggerInput('searchbar', title);\n      // const event = new Event('input');\n      // document.getElementById('searchbar').dispatchEvent(event);\n      // document.getElementById('searchbar').change({target: {value: title}});\n      // document.getElementById('searchbar').onChange();\n\n      // update the hidden name thing and poster for the form\n      document.getElementById('name-hidden').value = title;\n      document.getElementById('poster').src = poster;\n\n      document.getElementById('searchbar').click();\n      document.getElementById('searchbar').dispatchEvent(new Event('click'));\n\n      // hide after selecting search, but how to restart search??\n      document.getElementById('searchresults').style.visibility = \"hidden\";\n      // ReactDOM.render(<Movies />, document.querySelector('#searchresults'));\n    }}>\n      <td class=\"col-sm-1\"><img src={posterthumb} style={{height: 80}}></img></td>\n      <td><b>{title}</b> <p class=\"text-muted\">({year})</p></td>\n    </tr>\n  );\n\n};\n\nexport default MovieCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}